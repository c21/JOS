!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^  ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon10
ALT	kern/console.c	222;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	289;"	d	file:
CAPSLOCK	kern/console.c	224;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	388;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^  CPU_HALTED,$/;"	e	enum:__anon9
CPU_STARTED	kern/cpu.h	/^  CPU_STARTED,$/;"	e	enum:__anon9
CPU_UNUSED	kern/cpu.h	/^  CPU_UNUSED = 0,$/;"	e	enum:__anon9
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	221;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	228;"	d	file:
E1000_DEV_ID_82540EM	kern/e1000.h	10;"	d
E1000_MTA	kern/e1000.h	40;"	d
E1000_RAH	kern/e1000.h	42;"	d
E1000_RAH_AV	kern/e1000.h	62;"	d
E1000_RAL	kern/e1000.h	41;"	d
E1000_RCTL	kern/e1000.h	34;"	d
E1000_RCTL_BAM	kern/e1000.h	58;"	d
E1000_RCTL_EN	kern/e1000.h	56;"	d
E1000_RCTL_LBM_NO	kern/e1000.h	57;"	d
E1000_RCTL_SECRC	kern/e1000.h	60;"	d
E1000_RCTL_SZ_2048	kern/e1000.h	59;"	d
E1000_RDBAH	kern/e1000.h	36;"	d
E1000_RDBAL	kern/e1000.h	35;"	d
E1000_RDH	kern/e1000.h	38;"	d
E1000_RDLEN	kern/e1000.h	37;"	d
E1000_RDT	kern/e1000.h	39;"	d
E1000_RXD_STAT_DD	kern/e1000.h	54;"	d
E1000_STATUS	kern/e1000.h	24;"	d
E1000_TCTL	kern/e1000.h	26;"	d
E1000_TCTL_EN	kern/e1000.h	51;"	d
E1000_TCTL_PSP	kern/e1000.h	52;"	d
E1000_TDBAH	kern/e1000.h	29;"	d
E1000_TDBAL	kern/e1000.h	28;"	d
E1000_TDH	kern/e1000.h	31;"	d
E1000_TDLEN	kern/e1000.h	30;"	d
E1000_TDT	kern/e1000.h	32;"	d
E1000_TIPG	kern/e1000.h	27;"	d
E1000_TXD_CMD_EOP	kern/e1000.h	47;"	d
E1000_TXD_CMD_RS	kern/e1000.h	48;"	d
E1000_TXD_STAT_DD	kern/e1000.h	49;"	d
E1000_VENDOR_ID_82540EM	kern/e1000.h	9;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^  ENV_DYING,$/;"	e	enum:__anon1
ENV_FREE	inc/env.h	/^  ENV_FREE = 0,$/;"	e	enum:__anon1
ENV_NOT_RUNNABLE	inc/env.h	/^  ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^  ENV_RUNNABLE,$/;"	e	enum:__anon1
ENV_RUNNING	inc/env.h	/^  ENV_RUNNING,$/;"	e	enum:__anon1
ENV_TYPE_FS	inc/env.h	/^  ENV_TYPE_FS,    \/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^  ENV_TYPE_NS,    \/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^  ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^  E_BAD_ENV  ,  \/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon6
E_BAD_PATH	inc/error.h	/^  E_BAD_PATH  ,  \/\/ Bad path$/;"	e	enum:__anon6
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^  E_EOF    ,  \/\/ Unexpected end of file$/;"	e	enum:__anon6
E_FAULT	inc/error.h	/^  E_FAULT    ,  \/\/ Memory fault$/;"	e	enum:__anon6
E_FILE_EXISTS	inc/error.h	/^  E_FILE_EXISTS  ,  \/\/ File already exists$/;"	e	enum:__anon6
E_INVAL	inc/error.h	/^  E_INVAL    ,  \/\/ Invalid parameter$/;"	e	enum:__anon6
E_IPC_NOT_RECV	inc/error.h	/^  E_IPC_NOT_RECV  ,  \/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon6
E_MAX_OPEN	inc/error.h	/^  E_MAX_OPEN  ,  \/\/ Too many files are open$/;"	e	enum:__anon6
E_NOT_EXEC	inc/error.h	/^  E_NOT_EXEC  ,  \/\/ File not a valid executable$/;"	e	enum:__anon6
E_NOT_FOUND	inc/error.h	/^  E_NOT_FOUND  ,   \/\/ File or block not found$/;"	e	enum:__anon6
E_NOT_SUPP	inc/error.h	/^  E_NOT_SUPP  ,  \/\/ Operation not supported$/;"	e	enum:__anon6
E_NO_DISK	inc/error.h	/^  E_NO_DISK  ,  \/\/ No free space left on disk$/;"	e	enum:__anon6
E_NO_FREE_ENV	inc/error.h	/^  E_NO_FREE_ENV  ,  \/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon6
E_NO_MEM	inc/error.h	/^  E_NO_MEM  ,  \/\/ Request failed due to memory shortage$/;"	e	enum:__anon6
E_UNSPECIFIED	inc/error.h	/^  E_UNSPECIFIED  = 1,  \/\/ Unspecified or unknown problem$/;"	e	enum:__anon6
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^  FSREQ_FLUSH,$/;"	e	enum:__anon4
FSREQ_OPEN	inc/fs.h	/^  FSREQ_OPEN = 1,$/;"	e	enum:__anon4
FSREQ_READ	inc/fs.h	/^  FSREQ_READ,$/;"	e	enum:__anon4
FSREQ_REMOVE	inc/fs.h	/^  FSREQ_REMOVE,$/;"	e	enum:__anon4
FSREQ_SET_SIZE	inc/fs.h	/^  FSREQ_SET_SIZE,$/;"	e	enum:__anon4
FSREQ_STAT	inc/fs.h	/^  FSREQ_STAT,$/;"	e	enum:__anon4
FSREQ_SYNC	inc/fs.h	/^  FSREQ_SYNC$/;"	e	enum:__anon4
FSREQ_WRITE	inc/fs.h	/^  FSREQ_WRITE,$/;"	e	enum:__anon4
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^  struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^  struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^  struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^  struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^  struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^  struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^  struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^  struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^  struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon18	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon13
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon13
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon13
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon13
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon13
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon13
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon13
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon14
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon13
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	91;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^  MAXERROR$/;"	e	enum:__anon6
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^  MAXMALLOC = 1024*1024  \/* max size of one allocated chunk *\/$/;"	e	enum:__anon12	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon16
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon26
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon27
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon27
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	43;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon18	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	30;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	318;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	218;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NRXDESC	kern/e1000.h	65;"	d
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^  NSREQ_ACCEPT = 1,$/;"	e	enum:__anon3
NSREQ_BIND	inc/ns.h	/^  NSREQ_BIND,$/;"	e	enum:__anon3
NSREQ_CLOSE	inc/ns.h	/^  NSREQ_CLOSE,$/;"	e	enum:__anon3
NSREQ_CONNECT	inc/ns.h	/^  NSREQ_CONNECT,$/;"	e	enum:__anon3
NSREQ_INPUT	inc/ns.h	/^  NSREQ_INPUT,$/;"	e	enum:__anon3
NSREQ_LISTEN	inc/ns.h	/^  NSREQ_LISTEN,$/;"	e	enum:__anon3
NSREQ_OUTPUT	inc/ns.h	/^  NSREQ_OUTPUT,$/;"	e	enum:__anon3
NSREQ_RECV	inc/ns.h	/^  NSREQ_RECV,$/;"	e	enum:__anon3
NSREQ_SEND	inc/ns.h	/^  NSREQ_SEND,$/;"	e	enum:__anon3
NSREQ_SHUTDOWN	inc/ns.h	/^  NSREQ_SHUTDOWN,$/;"	e	enum:__anon3
NSREQ_SOCKET	inc/ns.h	/^  NSREQ_SOCKET,$/;"	e	enum:__anon3
NSREQ_TIMER	inc/ns.h	/^  NSREQ_TIMER,$/;"	e	enum:__anon3
NSYSCALLS	inc/syscall.h	/^  NSYSCALLS$/;"	e	enum:__anon2
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon18	file:
NTXDESC	kern/e1000.h	64;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	225;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^  struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^  struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^  struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^  struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^  struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^  struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^  struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^  struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^  struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^  struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^  struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	148;"	d
O_CREAT	inc/lib.h	150;"	d
O_EXCL	inc/lib.h	152;"	d
O_MKDIR	inc/lib.h	153;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	145;"	d
O_RDWR	inc/lib.h	147;"	d
O_TRUNC	inc/lib.h	151;"	d
O_WRONLY	inc/lib.h	146;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Nov 17 18:30:59 EST 2014$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon28
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon28
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon29
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon29
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon28
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon29
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon29
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon28
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon17	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon17	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon17	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon17	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon17	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon17	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon17	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	137;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon14
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon14
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon14
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon14
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon14
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon14
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon14
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PKTSIZE	kern/e1000.h	66;"	d
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon17	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	84;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define  RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
RXBSIZE	kern/e1000.h	67;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	226;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	220;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)    (((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	195;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^  SYS_cgetc,$/;"	e	enum:__anon2
SYS_cputs	inc/syscall.h	/^  SYS_cputs = 0,$/;"	e	enum:__anon2
SYS_env_destroy	inc/syscall.h	/^  SYS_env_destroy,$/;"	e	enum:__anon2
SYS_env_set_pgfault_upcall	inc/syscall.h	/^  SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon2
SYS_env_set_status	inc/syscall.h	/^  SYS_env_set_status,$/;"	e	enum:__anon2
SYS_env_set_trapframe	inc/syscall.h	/^  SYS_env_set_trapframe,$/;"	e	enum:__anon2
SYS_exofork	inc/syscall.h	/^  SYS_exofork,$/;"	e	enum:__anon2
SYS_getenvid	inc/syscall.h	/^  SYS_getenvid,$/;"	e	enum:__anon2
SYS_ipc_recv	inc/syscall.h	/^  SYS_ipc_recv,$/;"	e	enum:__anon2
SYS_ipc_try_send	inc/syscall.h	/^  SYS_ipc_try_send,$/;"	e	enum:__anon2
SYS_page_alloc	inc/syscall.h	/^  SYS_page_alloc,$/;"	e	enum:__anon2
SYS_page_map	inc/syscall.h	/^  SYS_page_map,$/;"	e	enum:__anon2
SYS_page_unmap	inc/syscall.h	/^  SYS_page_unmap,$/;"	e	enum:__anon2
SYS_time_msec	inc/syscall.h	/^  SYS_time_msec,$/;"	e	enum:__anon2
SYS_try_transmit_pkt	inc/syscall.h	/^  SYS_try_transmit_pkt,$/;"	e	enum:__anon2
SYS_yield	inc/syscall.h	/^  SYS_yield,$/;"	e	enum:__anon2
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR  ((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD  ((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)            \\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)          \\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	116;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	114;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon18	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	90;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	194;"	d	file:
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^  char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^  char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^  _pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^  } accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^  } acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::__anon34
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon19	typeref:struct:netifapi_msg_msg::__anon19::__anon20
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	kern/e1000.h	/^  uint64_t addr;$/;"	m	struct:tx_desc
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^    addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/fs/fs.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^    addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^    addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^      altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^    altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^      altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^    altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^      altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^    altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^      altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^    altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^      altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^    altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^      altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^    altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^    any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^  uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon31::__anon35
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon22::__anon25
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
arg	obj/user/ls.asm	/^  arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^  arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^  arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^  int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^  argc = 0;$/;"	d
argc	obj/user/sh.asm	/^  argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^  const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^  argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^  argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^  argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^  argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^  argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^  argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^  const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ascii_to_bytes	grade-lab6	/^def ascii_to_bytes(s):$/;"	f
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^  int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon31::__anon38
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^        bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^    bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^      base = 10;$/;"	d
base	obj/fs/fs.asm	/^      base = 16;$/;"	d
base	obj/fs/fs.asm	/^      base = 8;$/;"	d
base	obj/fs/fs.asm	/^    base = 10;$/;"	d
base	obj/kern/kernel.asm	/^      base = 10;$/;"	d
base	obj/kern/kernel.asm	/^      base = 16;$/;"	d
base	obj/kern/kernel.asm	/^      base = 8;$/;"	d
base	obj/kern/kernel.asm	/^      base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^      base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^    base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^      base = 10;$/;"	d
base	obj/net/ns.asm	/^      base = 16;$/;"	d
base	obj/net/ns.asm	/^      base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^      base = 10;$/;"	d
base	obj/net/testinput.asm	/^      base = 16;$/;"	d
base	obj/net/testinput.asm	/^      base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^      base = 10;$/;"	d
base	obj/net/testoutput.asm	/^      base = 16;$/;"	d
base	obj/net/testoutput.asm	/^      base = 8;$/;"	d
base	obj/net/testoutput.asm	/^    base = 10;$/;"	d
base	obj/user/badsegment.asm	/^      base = 10;$/;"	d
base	obj/user/badsegment.asm	/^      base = 16;$/;"	d
base	obj/user/badsegment.asm	/^      base = 8;$/;"	d
base	obj/user/badsegment.asm	/^    base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^      base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^      base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^      base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^    base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^      base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^      base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^      base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^    base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^      base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^      base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^      base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^    base = 10;$/;"	d
base	obj/user/cat.asm	/^      base = 10;$/;"	d
base	obj/user/cat.asm	/^      base = 16;$/;"	d
base	obj/user/cat.asm	/^      base = 8;$/;"	d
base	obj/user/cat.asm	/^    base = 10;$/;"	d
base	obj/user/divzero.asm	/^      base = 10;$/;"	d
base	obj/user/divzero.asm	/^      base = 16;$/;"	d
base	obj/user/divzero.asm	/^      base = 8;$/;"	d
base	obj/user/divzero.asm	/^    base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^      base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^      base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^      base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^    base = 10;$/;"	d
base	obj/user/echo.asm	/^      base = 10;$/;"	d
base	obj/user/echo.asm	/^      base = 16;$/;"	d
base	obj/user/echo.asm	/^      base = 8;$/;"	d
base	obj/user/echo.asm	/^    base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^      base = 10;$/;"	d
base	obj/user/echosrv.asm	/^      base = 16;$/;"	d
base	obj/user/echosrv.asm	/^      base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^      base = 10;$/;"	d
base	obj/user/echotest.asm	/^      base = 16;$/;"	d
base	obj/user/echotest.asm	/^      base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^      base = 10;$/;"	d
base	obj/user/evilhello.asm	/^      base = 16;$/;"	d
base	obj/user/evilhello.asm	/^      base = 8;$/;"	d
base	obj/user/evilhello.asm	/^    base = 10;$/;"	d
base	obj/user/fairness.asm	/^      base = 10;$/;"	d
base	obj/user/fairness.asm	/^      base = 16;$/;"	d
base	obj/user/fairness.asm	/^      base = 8;$/;"	d
base	obj/user/fairness.asm	/^    base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^      base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^      base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^      base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^    base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^      base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^      base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^      base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^    base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^      base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^      base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^      base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^    base = 10;$/;"	d
base	obj/user/faultdie.asm	/^      base = 10;$/;"	d
base	obj/user/faultdie.asm	/^      base = 16;$/;"	d
base	obj/user/faultdie.asm	/^      base = 8;$/;"	d
base	obj/user/faultdie.asm	/^    base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^      base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^      base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^      base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^    base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^      base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^      base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^      base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^    base = 10;$/;"	d
base	obj/user/faultread.asm	/^      base = 10;$/;"	d
base	obj/user/faultread.asm	/^      base = 16;$/;"	d
base	obj/user/faultread.asm	/^      base = 8;$/;"	d
base	obj/user/faultread.asm	/^    base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^      base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^      base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^      base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^    base = 10;$/;"	d
base	obj/user/faultregs.asm	/^      base = 10;$/;"	d
base	obj/user/faultregs.asm	/^      base = 16;$/;"	d
base	obj/user/faultregs.asm	/^      base = 8;$/;"	d
base	obj/user/faultregs.asm	/^    base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^      base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^      base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^      base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^    base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^      base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^      base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^      base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^    base = 10;$/;"	d
base	obj/user/forktree.asm	/^      base = 10;$/;"	d
base	obj/user/forktree.asm	/^      base = 16;$/;"	d
base	obj/user/forktree.asm	/^      base = 8;$/;"	d
base	obj/user/forktree.asm	/^    base = 10;$/;"	d
base	obj/user/hello.asm	/^      base = 10;$/;"	d
base	obj/user/hello.asm	/^      base = 16;$/;"	d
base	obj/user/hello.asm	/^      base = 8;$/;"	d
base	obj/user/hello.asm	/^    base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^      base = 10;$/;"	d
base	obj/user/httpd.asm	/^      base = 16;$/;"	d
base	obj/user/httpd.asm	/^      base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^      base = 10;$/;"	d
base	obj/user/icode.asm	/^      base = 16;$/;"	d
base	obj/user/icode.asm	/^      base = 8;$/;"	d
base	obj/user/icode.asm	/^    base = 10;$/;"	d
base	obj/user/idle.asm	/^      base = 10;$/;"	d
base	obj/user/idle.asm	/^      base = 16;$/;"	d
base	obj/user/idle.asm	/^      base = 8;$/;"	d
base	obj/user/idle.asm	/^    base = 10;$/;"	d
base	obj/user/init.asm	/^      base = 10;$/;"	d
base	obj/user/init.asm	/^      base = 16;$/;"	d
base	obj/user/init.asm	/^      base = 8;$/;"	d
base	obj/user/init.asm	/^    base = 10;$/;"	d
base	obj/user/ls.asm	/^      base = 10;$/;"	d
base	obj/user/ls.asm	/^      base = 16;$/;"	d
base	obj/user/ls.asm	/^      base = 8;$/;"	d
base	obj/user/ls.asm	/^    base = 10;$/;"	d
base	obj/user/lsfd.asm	/^      base = 10;$/;"	d
base	obj/user/lsfd.asm	/^      base = 16;$/;"	d
base	obj/user/lsfd.asm	/^      base = 8;$/;"	d
base	obj/user/lsfd.asm	/^    base = 10;$/;"	d
base	obj/user/num.asm	/^      base = 10;$/;"	d
base	obj/user/num.asm	/^      base = 16;$/;"	d
base	obj/user/num.asm	/^      base = 8;$/;"	d
base	obj/user/num.asm	/^    base = 10;$/;"	d
base	obj/user/pingpong.asm	/^      base = 10;$/;"	d
base	obj/user/pingpong.asm	/^      base = 16;$/;"	d
base	obj/user/pingpong.asm	/^      base = 8;$/;"	d
base	obj/user/pingpong.asm	/^    base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^      base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^      base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^      base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^    base = 10;$/;"	d
base	obj/user/primes.asm	/^      base = 10;$/;"	d
base	obj/user/primes.asm	/^      base = 16;$/;"	d
base	obj/user/primes.asm	/^      base = 8;$/;"	d
base	obj/user/primes.asm	/^    base = 10;$/;"	d
base	obj/user/primespipe.asm	/^      base = 10;$/;"	d
base	obj/user/primespipe.asm	/^      base = 16;$/;"	d
base	obj/user/primespipe.asm	/^      base = 8;$/;"	d
base	obj/user/primespipe.asm	/^    base = 10;$/;"	d
base	obj/user/sendpage.asm	/^      base = 10;$/;"	d
base	obj/user/sendpage.asm	/^      base = 16;$/;"	d
base	obj/user/sendpage.asm	/^      base = 8;$/;"	d
base	obj/user/sendpage.asm	/^    base = 10;$/;"	d
base	obj/user/sh.asm	/^      base = 10;$/;"	d
base	obj/user/sh.asm	/^      base = 16;$/;"	d
base	obj/user/sh.asm	/^      base = 8;$/;"	d
base	obj/user/sh.asm	/^    base = 10;$/;"	d
base	obj/user/softint.asm	/^      base = 10;$/;"	d
base	obj/user/softint.asm	/^      base = 16;$/;"	d
base	obj/user/softint.asm	/^      base = 8;$/;"	d
base	obj/user/softint.asm	/^    base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^      base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^      base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^      base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^    base = 10;$/;"	d
base	obj/user/spin.asm	/^      base = 10;$/;"	d
base	obj/user/spin.asm	/^      base = 16;$/;"	d
base	obj/user/spin.asm	/^      base = 8;$/;"	d
base	obj/user/spin.asm	/^    base = 10;$/;"	d
base	obj/user/stresssched.asm	/^      base = 10;$/;"	d
base	obj/user/stresssched.asm	/^      base = 16;$/;"	d
base	obj/user/stresssched.asm	/^      base = 8;$/;"	d
base	obj/user/stresssched.asm	/^    base = 10;$/;"	d
base	obj/user/testbss.asm	/^      base = 10;$/;"	d
base	obj/user/testbss.asm	/^      base = 16;$/;"	d
base	obj/user/testbss.asm	/^      base = 8;$/;"	d
base	obj/user/testbss.asm	/^    base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^      base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^      base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^      base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^    base = 10;$/;"	d
base	obj/user/testfile.asm	/^      base = 10;$/;"	d
base	obj/user/testfile.asm	/^      base = 16;$/;"	d
base	obj/user/testfile.asm	/^      base = 8;$/;"	d
base	obj/user/testfile.asm	/^    base = 10;$/;"	d
base	obj/user/testkbd.asm	/^      base = 10;$/;"	d
base	obj/user/testkbd.asm	/^      base = 16;$/;"	d
base	obj/user/testkbd.asm	/^      base = 8;$/;"	d
base	obj/user/testkbd.asm	/^    base = 10;$/;"	d
base	obj/user/testpipe.asm	/^      base = 10;$/;"	d
base	obj/user/testpipe.asm	/^      base = 16;$/;"	d
base	obj/user/testpipe.asm	/^      base = 8;$/;"	d
base	obj/user/testpipe.asm	/^    base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^      base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^      base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^      base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^    base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^      base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^      base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^      base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^    base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^      base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^      base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^      base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^    base = 10;$/;"	d
base	obj/user/testshell.asm	/^      base = 10;$/;"	d
base	obj/user/testshell.asm	/^      base = 16;$/;"	d
base	obj/user/testshell.asm	/^      base = 8;$/;"	d
base	obj/user/testshell.asm	/^    base = 10;$/;"	d
base	obj/user/testtime.asm	/^      base = 10;$/;"	d
base	obj/user/testtime.asm	/^      base = 16;$/;"	d
base	obj/user/testtime.asm	/^      base = 8;$/;"	d
base	obj/user/testtime.asm	/^    base = 10;$/;"	d
base	obj/user/yield.asm	/^      base = 10;$/;"	d
base	obj/user/yield.asm	/^      base = 16;$/;"	d
base	obj/user/yield.asm	/^      base = 8;$/;"	d
base	obj/user/yield.asm	/^    base = 10;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::__anon33
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^  bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^  binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^  binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^  binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^  binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^  binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^  binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^  binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^  binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^  binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^  binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^  binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^  binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^  binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^  binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^  binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^  binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^  binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^  binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^  binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^  binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^  binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^    binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^    binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^  } bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;    \/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^  bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^  bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^    bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^      bol = 0;$/;"	d
bol	obj/user/num.asm	/^      bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^  uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^        bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^  bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^  uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon11	file:
buf	lib/fprintf.c	/^  char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^  char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^  char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon16
buf	obj/fs/fs.asm	/^  buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^    buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = vbuf;$/;"	d
buf	obj/net/testinput.asm	/^  buf = vbuf;$/;"	d
buf	obj/net/testoutput.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/badsegment.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/echosrv.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/echotest.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/httpd.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^    buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^    buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/testtime.asm	/^  buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^  buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buffer_addr	kern/e1000.h	/^  uint64_t buffer_addr;$/;"	m	struct:rx_desc
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;  \/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^    c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^    c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^  c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^  c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/ns.asm	/^  c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/httpd.asm	/^  c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/icode.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^    c = getchar();$/;"	d
c	obj/user/sh.asm	/^  c = nc;$/;"	d
c	obj/user/softint.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^    c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^    c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::__anon24
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^        ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^        ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^        ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^        ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^        ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^        ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^  uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^  uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^  child = r;$/;"	d
child	obj/user/init.asm	/^  child = r;$/;"	d
child	obj/user/sh.asm	/^  child = r;$/;"	d
child	obj/user/spawnhello.asm	/^  child = r;$/;"	d
child	obj/user/testpteshare.asm	/^  child = r;$/;"	d
child	obj/user/testshell.asm	/^  child = r;$/;"	d
child_tf	obj/user/icode.asm	/^  child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^  child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^  child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^  child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^  child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^  child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chs_begin	inc/partition.h	/^  uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^  uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^    class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^  } close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e1000.h	/^  uint8_t cmd;$/;"	m	struct:tx_desc
cnt	lib/printf.c	/^  int cnt;  \/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^  int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^  cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^  cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^  cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^  cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^  cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^  cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^  cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^  cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^  cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^  cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^  cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^  cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^  cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^  code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^  int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^  int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon19	typeref:struct:netifapi_msg_msg::__anon19::__anon21
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^  conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^  } connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon11	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^    const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^  const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^    cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^    cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copy_sz	obj/kern/kernel.asm	/^          copy_sz = ph->p_filesz - i;$/;"	d
copy_sz	obj/kern/kernel.asm	/^        copy_sz = PGSIZE - (kva - ROUNDDOWN(kva, PGSIZE));$/;"	d
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^  count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon39::__anon40	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^    cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^  cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^  struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^  struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^  uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^  volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^  struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^  cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^  crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^  crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000.h	/^  uint8_t cso;$/;"	m	struct:tx_desc
css	kern/e1000.h	/^  uint8_t css;$/;"	m	struct:tx_desc
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon15
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon15	typeref:struct:cstate::__anon15::ip
csum	kern/e1000.h	/^  uint16_t csum;$/;"	m	struct:rx_desc
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon22::__anon24
cur_esp	obj/kern/kernel.asm	/^      cur_esp = UXSTACKTOP; $/;"	d
cur_esp	obj/kern/kernel.asm	/^      cur_esp = tf->tf_esp - 4; $/;"	d
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^  const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^      curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^    curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^  curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^  curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^  d = dst;$/;"	d
d	obj/kern/kernel.asm	/^  d = dst;$/;"	d
d	obj/net/ns.asm	/^  d = dst;$/;"	d
d	obj/net/testinput.asm	/^  d = dst;$/;"	d
d	obj/net/testoutput.asm	/^  d = dst;$/;"	d
d	obj/user/badsegment.asm	/^  d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^  d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^  d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^  d = dst;$/;"	d
d	obj/user/cat.asm	/^  d = dst;$/;"	d
d	obj/user/divzero.asm	/^  d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^  d = dst;$/;"	d
d	obj/user/echo.asm	/^  d = dst;$/;"	d
d	obj/user/echosrv.asm	/^  d = dst;$/;"	d
d	obj/user/echotest.asm	/^  d = dst;$/;"	d
d	obj/user/evilhello.asm	/^  d = dst;$/;"	d
d	obj/user/fairness.asm	/^  d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^  d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^  d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^  d = dst;$/;"	d
d	obj/user/faultdie.asm	/^  d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^  d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^  d = dst;$/;"	d
d	obj/user/faultread.asm	/^  d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^  d = dst;$/;"	d
d	obj/user/faultregs.asm	/^  d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^  d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^  d = dst;$/;"	d
d	obj/user/forktree.asm	/^  d = dst;$/;"	d
d	obj/user/hello.asm	/^  d = dst;$/;"	d
d	obj/user/httpd.asm	/^  d = dst;$/;"	d
d	obj/user/icode.asm	/^  d = dst;$/;"	d
d	obj/user/idle.asm	/^  d = dst;$/;"	d
d	obj/user/init.asm	/^  d = dst;$/;"	d
d	obj/user/ls.asm	/^  d = dst;$/;"	d
d	obj/user/lsfd.asm	/^  d = dst;$/;"	d
d	obj/user/num.asm	/^  d = dst;$/;"	d
d	obj/user/pingpong.asm	/^  d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^  d = dst;$/;"	d
d	obj/user/primes.asm	/^  d = dst;$/;"	d
d	obj/user/primespipe.asm	/^  d = dst;$/;"	d
d	obj/user/sendpage.asm	/^  d = dst;$/;"	d
d	obj/user/sh.asm	/^  d = dst;$/;"	d
d	obj/user/softint.asm	/^  d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^  d = dst;$/;"	d
d	obj/user/spin.asm	/^  d = dst;$/;"	d
d	obj/user/stresssched.asm	/^  d = dst;$/;"	d
d	obj/user/testbss.asm	/^  d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^  d = dst;$/;"	d
d	obj/user/testfile.asm	/^  d = dst;$/;"	d
d	obj/user/testkbd.asm	/^  d = dst;$/;"	d
d	obj/user/testpipe.asm	/^  d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^  d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^  d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^  d = dst;$/;"	d
d	obj/user/testshell.asm	/^  d = dst;$/;"	d
d	obj/user/testtime.asm	/^  d = dst;$/;"	d
d	obj/user/yield.asm	/^  d = dst;$/;"	d
data	kern/e1000.h	/^  uint8_t data[PKTSIZE];  \/* Packet to transmit *\/$/;"	m	struct:tx_buf
data	kern/e1000.h	/^  uint8_t data[RXBSIZE];  \/* Packet to receive *\/       $/;"	m	struct:rx_buf
data	obj/kern/kernel.asm	/^    data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^  data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon44
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon31::__anon35
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^    default:$/;"	l
default	obj/kern/kernel.asm	/^    default:$/;"	l
default	obj/kern/kernel.asm	/^  default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^    default:$/;"	l
default	obj/net/testoutput.asm	/^    default:$/;"	l
default	obj/user/badsegment.asm	/^    default:$/;"	l
default	obj/user/breakpoint.asm	/^    default:$/;"	l
default	obj/user/buggyhello.asm	/^    default:$/;"	l
default	obj/user/buggyhello2.asm	/^    default:$/;"	l
default	obj/user/cat.asm	/^    default:$/;"	l
default	obj/user/divzero.asm	/^    default:$/;"	l
default	obj/user/dumbfork.asm	/^    default:$/;"	l
default	obj/user/echo.asm	/^    default:$/;"	l
default	obj/user/echosrv.asm	/^    default:$/;"	l
default	obj/user/echotest.asm	/^    default:$/;"	l
default	obj/user/evilhello.asm	/^    default:$/;"	l
default	obj/user/fairness.asm	/^    default:$/;"	l
default	obj/user/faultalloc.asm	/^    default:$/;"	l
default	obj/user/faultallocbad.asm	/^    default:$/;"	l
default	obj/user/faultbadhandler.asm	/^    default:$/;"	l
default	obj/user/faultdie.asm	/^    default:$/;"	l
default	obj/user/faultevilhandler.asm	/^    default:$/;"	l
default	obj/user/faultnostack.asm	/^    default:$/;"	l
default	obj/user/faultread.asm	/^    default:$/;"	l
default	obj/user/faultreadkernel.asm	/^    default:$/;"	l
default	obj/user/faultregs.asm	/^    default:$/;"	l
default	obj/user/faultwrite.asm	/^    default:$/;"	l
default	obj/user/faultwritekernel.asm	/^    default:$/;"	l
default	obj/user/forktree.asm	/^    default:$/;"	l
default	obj/user/hello.asm	/^    default:$/;"	l
default	obj/user/httpd.asm	/^    default:$/;"	l
default	obj/user/icode.asm	/^    default:$/;"	l
default	obj/user/idle.asm	/^    default:$/;"	l
default	obj/user/init.asm	/^    default:$/;"	l
default	obj/user/ls.asm	/^    default:$/;"	l
default	obj/user/lsfd.asm	/^    default:$/;"	l
default	obj/user/num.asm	/^    default:$/;"	l
default	obj/user/pingpong.asm	/^    default:$/;"	l
default	obj/user/pingpongs.asm	/^    default:$/;"	l
default	obj/user/primes.asm	/^    default:$/;"	l
default	obj/user/primespipe.asm	/^    default:$/;"	l
default	obj/user/sendpage.asm	/^    default:$/;"	l
default	obj/user/sh.asm	/^    default:$/;"	l
default	obj/user/softint.asm	/^    default:$/;"	l
default	obj/user/spawnhello.asm	/^    default:$/;"	l
default	obj/user/spin.asm	/^    default:$/;"	l
default	obj/user/stresssched.asm	/^    default:$/;"	l
default	obj/user/testbss.asm	/^    default:$/;"	l
default	obj/user/testfdsharing.asm	/^    default:$/;"	l
default	obj/user/testfile.asm	/^    default:$/;"	l
default	obj/user/testkbd.asm	/^    default:$/;"	l
default	obj/user/testpipe.asm	/^    default:$/;"	l
default	obj/user/testpiperace.asm	/^    default:$/;"	l
default	obj/user/testpiperace2.asm	/^    default:$/;"	l
default	obj/user/testpteshare.asm	/^    default:$/;"	l
default	obj/user/testshell.asm	/^    default:$/;"	l
default	obj/user/testtime.asm	/^    default:$/;"	l
default	obj/user/yield.asm	/^    default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^  const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^  int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^  int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^  const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^  ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^  int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^  int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^  ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^  didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^      dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^      dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^      dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^      dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^      dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^      dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^      dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^      dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^      dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon16
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^    dir = f;$/;"	d
dir	obj/fs/fs.asm	/^  dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^  diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^  dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^  dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^  e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^  e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^  e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^  e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^  e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^  e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^  e = &envs[ENVX(envid)];$/;"	d
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^  uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^  uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^  uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^  uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^  uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^  uint32_t e_magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^  uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^  uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^  uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^  uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^  uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^  uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^  uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^  uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^  uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^    ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^    ebp = (uint32_t*)*ebp;$/;"	d
ebp	obj/kern/kernel.asm	/^  ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^  char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echocmds	obj/user/sh.asm	/^      echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^  echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^  echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^  echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^  echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^  echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^  uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	obj/kern/kernel.asm	/^    eip = *(ebp + 1);$/;"	d
eip	user/faultregs.c	/^  uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^  const char *eip_file;    \/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^  uintptr_t eip_fn_addr;    \/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^  const char *eip_fn_name;  \/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^  int eip_fn_namelen;    \/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^  int eip_fn_narg;    \/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^  int eip_line;      \/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^  elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^  elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^  elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^  elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^  elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^  elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_pa	obj/boot/boot.asm	/^  end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^  uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^  uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^  struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^  int env_cpunum;      \/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;  \/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^    env_free_list = &envs[i];  $/;"	d
env_free_list	obj/kern/kernel.asm	/^  env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^  env_free_list = e;$/;"	d
env_id	inc/env.h	/^  envid_t env_id;      \/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^  void *env_ipc_dstva;    \/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^  envid_t env_ipc_from;    \/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^  int env_ipc_perm;    \/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^  bool env_ipc_recving;    \/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^  uint32_t env_ipc_value;    \/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^  struct Env *env_link;    \/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^  envid_t env_parent_id;    \/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^  pde_t *env_pgdir;    \/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^  void *env_pgfault_upcall;  \/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_pp	obj/kern/kernel.asm	/^        env_pp = page_lookup(e->env_pgdir, (void*)ph->p_va + i, NULL);$/;"	d
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^  uint32_t env_runs;    \/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^  unsigned env_status;    \/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^  struct Trapframe env_tf;  \/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^  enum EnvType env_type;    \/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/net/ns.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/net/testinput.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/net/testoutput.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/dumbfork.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/forktree.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/pingpong.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/pingpongs.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/primes.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/primespipe.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/sendpage.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/sh.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/spin.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/stresssched.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/testfdsharing.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/testpipe.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace2.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/testpteshare.asm	/^  envid = sys_exofork();$/;"	d
envid	obj/user/testshell.asm	/^  envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;    \/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^  envs = (struct Env *) boot_alloc(env_size);$/;"	d
eph	obj/boot/boot.asm	/^  eph = ph + ELFHDR->e_phnum;$/;"	d
epic	kern/e1000.c	/^volatile uintptr_t *epic;$/;"	v
epic	obj/kern/kernel.asm	/^  epic = mmio_map_region(f->reg_base[0], f->reg_size[0]); $/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^        err = -err;$/;"	d
err	obj/fs/fs.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^        err = -err;$/;"	d
err	obj/kern/kernel.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = -err;$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^        err = -err;$/;"	d
err	obj/net/testinput.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^        err = -err;$/;"	d
err	obj/net/testoutput.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^        err = -err;$/;"	d
err	obj/user/badsegment.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^        err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^        err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^        err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^        err = -err;$/;"	d
err	obj/user/cat.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^        err = -err;$/;"	d
err	obj/user/divzero.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^        err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^        err = -err;$/;"	d
err	obj/user/echo.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^        err = -err;$/;"	d
err	obj/user/echosrv.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^        err = -err;$/;"	d
err	obj/user/echotest.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^        err = -err;$/;"	d
err	obj/user/evilhello.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^        err = -err;$/;"	d
err	obj/user/fairness.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^        err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^        err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^        err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^        err = -err;$/;"	d
err	obj/user/faultdie.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^        err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^        err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^        err = -err;$/;"	d
err	obj/user/faultread.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^        err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^        err = -err;$/;"	d
err	obj/user/faultregs.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^        err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^        err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^        err = -err;$/;"	d
err	obj/user/forktree.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^        err = -err;$/;"	d
err	obj/user/hello.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^        err = -err;$/;"	d
err	obj/user/httpd.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^        err = -err;$/;"	d
err	obj/user/icode.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^        err = -err;$/;"	d
err	obj/user/idle.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^        err = -err;$/;"	d
err	obj/user/init.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^        err = -err;$/;"	d
err	obj/user/ls.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^        err = -err;$/;"	d
err	obj/user/lsfd.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^        err = -err;$/;"	d
err	obj/user/num.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^        err = -err;$/;"	d
err	obj/user/pingpong.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^        err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^        err = -err;$/;"	d
err	obj/user/primes.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^        err = -err;$/;"	d
err	obj/user/primespipe.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^        err = -err;$/;"	d
err	obj/user/sendpage.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^        err = -err;$/;"	d
err	obj/user/sh.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^        err = -err;$/;"	d
err	obj/user/softint.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^        err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^        err = -err;$/;"	d
err	obj/user/spin.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^        err = -err;$/;"	d
err	obj/user/stresssched.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^        err = -err;$/;"	d
err	obj/user/testbss.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^        err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^        err = -err;$/;"	d
err	obj/user/testfile.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^        err = -err;$/;"	d
err	obj/user/testkbd.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^        err = -err;$/;"	d
err	obj/user/testpipe.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^        err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^        err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^        err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^        err = -err;$/;"	d
err	obj/user/testshell.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^        err = -err;$/;"	d
err	obj/user/testtime.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^        err = -err;$/;"	d
err	obj/user/yield.asm	/^      err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^err1:$/;"	l
err1	obj/net/ns.asm	/^err1:$/;"	l
err1	obj/net/testinput.asm	/^err1:$/;"	l
err1	obj/net/testoutput.asm	/^err1:$/;"	l
err1	obj/user/badsegment.asm	/^err1:$/;"	l
err1	obj/user/breakpoint.asm	/^err1:$/;"	l
err1	obj/user/buggyhello.asm	/^err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^err1:$/;"	l
err1	obj/user/cat.asm	/^err1:$/;"	l
err1	obj/user/divzero.asm	/^err1:$/;"	l
err1	obj/user/dumbfork.asm	/^err1:$/;"	l
err1	obj/user/echo.asm	/^err1:$/;"	l
err1	obj/user/echosrv.asm	/^err1:$/;"	l
err1	obj/user/echotest.asm	/^err1:$/;"	l
err1	obj/user/evilhello.asm	/^err1:$/;"	l
err1	obj/user/fairness.asm	/^err1:$/;"	l
err1	obj/user/faultalloc.asm	/^err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^err1:$/;"	l
err1	obj/user/faultdie.asm	/^err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^err1:$/;"	l
err1	obj/user/faultnostack.asm	/^err1:$/;"	l
err1	obj/user/faultread.asm	/^err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^err1:$/;"	l
err1	obj/user/faultregs.asm	/^err1:$/;"	l
err1	obj/user/faultwrite.asm	/^err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^err1:$/;"	l
err1	obj/user/forktree.asm	/^err1:$/;"	l
err1	obj/user/hello.asm	/^err1:$/;"	l
err1	obj/user/httpd.asm	/^err1:$/;"	l
err1	obj/user/icode.asm	/^err1:$/;"	l
err1	obj/user/idle.asm	/^err1:$/;"	l
err1	obj/user/init.asm	/^err1:$/;"	l
err1	obj/user/ls.asm	/^err1:$/;"	l
err1	obj/user/lsfd.asm	/^err1:$/;"	l
err1	obj/user/num.asm	/^err1:$/;"	l
err1	obj/user/pingpong.asm	/^err1:$/;"	l
err1	obj/user/pingpongs.asm	/^err1:$/;"	l
err1	obj/user/primes.asm	/^err1:$/;"	l
err1	obj/user/primespipe.asm	/^err1:$/;"	l
err1	obj/user/sendpage.asm	/^err1:$/;"	l
err1	obj/user/sh.asm	/^err1:$/;"	l
err1	obj/user/softint.asm	/^err1:$/;"	l
err1	obj/user/spawnhello.asm	/^err1:$/;"	l
err1	obj/user/spin.asm	/^err1:$/;"	l
err1	obj/user/stresssched.asm	/^err1:$/;"	l
err1	obj/user/testbss.asm	/^err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^err1:$/;"	l
err1	obj/user/testfile.asm	/^err1:$/;"	l
err1	obj/user/testkbd.asm	/^err1:$/;"	l
err1	obj/user/testpipe.asm	/^err1:$/;"	l
err1	obj/user/testpiperace.asm	/^err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^err1:$/;"	l
err1	obj/user/testpteshare.asm	/^err1:$/;"	l
err1	obj/user/testshell.asm	/^err1:$/;"	l
err1	obj/user/testtime.asm	/^err1:$/;"	l
err1	obj/user/yield.asm	/^err1:$/;"	l
err2	obj/fs/fs.asm	/^err2:$/;"	l
err2	obj/net/ns.asm	/^err2:$/;"	l
err2	obj/net/testinput.asm	/^err2:$/;"	l
err2	obj/net/testoutput.asm	/^err2:$/;"	l
err2	obj/user/badsegment.asm	/^err2:$/;"	l
err2	obj/user/breakpoint.asm	/^err2:$/;"	l
err2	obj/user/buggyhello.asm	/^err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^err2:$/;"	l
err2	obj/user/cat.asm	/^err2:$/;"	l
err2	obj/user/divzero.asm	/^err2:$/;"	l
err2	obj/user/dumbfork.asm	/^err2:$/;"	l
err2	obj/user/echo.asm	/^err2:$/;"	l
err2	obj/user/echosrv.asm	/^err2:$/;"	l
err2	obj/user/echotest.asm	/^err2:$/;"	l
err2	obj/user/evilhello.asm	/^err2:$/;"	l
err2	obj/user/fairness.asm	/^err2:$/;"	l
err2	obj/user/faultalloc.asm	/^err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^err2:$/;"	l
err2	obj/user/faultdie.asm	/^err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^err2:$/;"	l
err2	obj/user/faultnostack.asm	/^err2:$/;"	l
err2	obj/user/faultread.asm	/^err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^err2:$/;"	l
err2	obj/user/faultregs.asm	/^err2:$/;"	l
err2	obj/user/faultwrite.asm	/^err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^err2:$/;"	l
err2	obj/user/forktree.asm	/^err2:$/;"	l
err2	obj/user/hello.asm	/^err2:$/;"	l
err2	obj/user/httpd.asm	/^err2:$/;"	l
err2	obj/user/icode.asm	/^err2:$/;"	l
err2	obj/user/idle.asm	/^err2:$/;"	l
err2	obj/user/init.asm	/^err2:$/;"	l
err2	obj/user/ls.asm	/^err2:$/;"	l
err2	obj/user/lsfd.asm	/^err2:$/;"	l
err2	obj/user/num.asm	/^err2:$/;"	l
err2	obj/user/pingpong.asm	/^err2:$/;"	l
err2	obj/user/pingpongs.asm	/^err2:$/;"	l
err2	obj/user/primes.asm	/^err2:$/;"	l
err2	obj/user/primespipe.asm	/^err2:$/;"	l
err2	obj/user/sendpage.asm	/^err2:$/;"	l
err2	obj/user/sh.asm	/^err2:$/;"	l
err2	obj/user/softint.asm	/^err2:$/;"	l
err2	obj/user/spawnhello.asm	/^err2:$/;"	l
err2	obj/user/spin.asm	/^err2:$/;"	l
err2	obj/user/stresssched.asm	/^err2:$/;"	l
err2	obj/user/testbss.asm	/^err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^err2:$/;"	l
err2	obj/user/testfile.asm	/^err2:$/;"	l
err2	obj/user/testkbd.asm	/^err2:$/;"	l
err2	obj/user/testpipe.asm	/^err2:$/;"	l
err2	obj/user/testpiperace.asm	/^err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^err2:$/;"	l
err2	obj/user/testpteshare.asm	/^err2:$/;"	l
err2	obj/user/testshell.asm	/^err2:$/;"	l
err2	obj/user/testtime.asm	/^err2:$/;"	l
err2	obj/user/yield.asm	/^err2:$/;"	l
err3	obj/fs/fs.asm	/^err3:$/;"	l
err3	obj/net/ns.asm	/^err3:$/;"	l
err3	obj/net/testinput.asm	/^err3:$/;"	l
err3	obj/net/testoutput.asm	/^err3:$/;"	l
err3	obj/user/badsegment.asm	/^err3:$/;"	l
err3	obj/user/breakpoint.asm	/^err3:$/;"	l
err3	obj/user/buggyhello.asm	/^err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^err3:$/;"	l
err3	obj/user/cat.asm	/^err3:$/;"	l
err3	obj/user/divzero.asm	/^err3:$/;"	l
err3	obj/user/dumbfork.asm	/^err3:$/;"	l
err3	obj/user/echo.asm	/^err3:$/;"	l
err3	obj/user/echosrv.asm	/^err3:$/;"	l
err3	obj/user/echotest.asm	/^err3:$/;"	l
err3	obj/user/evilhello.asm	/^err3:$/;"	l
err3	obj/user/fairness.asm	/^err3:$/;"	l
err3	obj/user/faultalloc.asm	/^err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^err3:$/;"	l
err3	obj/user/faultdie.asm	/^err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^err3:$/;"	l
err3	obj/user/faultnostack.asm	/^err3:$/;"	l
err3	obj/user/faultread.asm	/^err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^err3:$/;"	l
err3	obj/user/faultregs.asm	/^err3:$/;"	l
err3	obj/user/faultwrite.asm	/^err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^err3:$/;"	l
err3	obj/user/forktree.asm	/^err3:$/;"	l
err3	obj/user/hello.asm	/^err3:$/;"	l
err3	obj/user/httpd.asm	/^err3:$/;"	l
err3	obj/user/icode.asm	/^err3:$/;"	l
err3	obj/user/idle.asm	/^err3:$/;"	l
err3	obj/user/init.asm	/^err3:$/;"	l
err3	obj/user/ls.asm	/^err3:$/;"	l
err3	obj/user/lsfd.asm	/^err3:$/;"	l
err3	obj/user/num.asm	/^err3:$/;"	l
err3	obj/user/pingpong.asm	/^err3:$/;"	l
err3	obj/user/pingpongs.asm	/^err3:$/;"	l
err3	obj/user/primes.asm	/^err3:$/;"	l
err3	obj/user/primespipe.asm	/^err3:$/;"	l
err3	obj/user/sendpage.asm	/^err3:$/;"	l
err3	obj/user/sh.asm	/^err3:$/;"	l
err3	obj/user/softint.asm	/^err3:$/;"	l
err3	obj/user/spawnhello.asm	/^err3:$/;"	l
err3	obj/user/spin.asm	/^err3:$/;"	l
err3	obj/user/stresssched.asm	/^err3:$/;"	l
err3	obj/user/testbss.asm	/^err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^err3:$/;"	l
err3	obj/user/testfile.asm	/^err3:$/;"	l
err3	obj/user/testkbd.asm	/^err3:$/;"	l
err3	obj/user/testpipe.asm	/^err3:$/;"	l
err3	obj/user/testpiperace.asm	/^err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^err3:$/;"	l
err3	obj/user/testpteshare.asm	/^err3:$/;"	l
err3	obj/user/testshell.asm	/^err3:$/;"	l
err3	obj/user/testtime.asm	/^err3:$/;"	l
err3	obj/user/yield.asm	/^err3:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^  int error;  \/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	kern/e1000.h	/^  uint8_t errors;$/;"	m	struct:rx_desc
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon19::__anon21
esp	user/faultregs.c	/^  uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^  struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon22::__anon24
f	obj/fs/fs.asm	/^    f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^  f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^  f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^      f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^      f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 20 12 00       	mov    $0x122000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 20 12 f0       	mov    $0xf0122000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 8c 4e 2b f0 00 	cmpl   $0x0,0xf02b4e8c$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 8c 4e 2b f0    	mov    %esi,0xf02b4e8c$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 38 67 00 00       	call   f010679c <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 a0 78 10 f0 	movl   $0xf01078a0,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 2c 40 00 00       	call   f01040ae <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 ed 3f 00 00       	call   f010407b <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 64 7f 10 f0 	movl   $0xf0107f64,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 14 40 00 00       	call   f01040ae <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 5a 09 00 00       	call   f0100a00 <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 20 c8 33 f0       	mov    $0xf033c820,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d bd 35 2b f0       	sub    $0xf02b35bd,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 bd 35 2b f0 	movl   $0xf02b35bd,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 76 60 00 00       	call   f0106147 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 e4 05 00 00       	call   f01006ba <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	00 $/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	c7 04 24 0c 79 10 f0 	movl   $0xf010790c,(%esp)$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	e8 c4 3f 00 00       	call   f01040ae <cprintf>$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	e8 4b 13 00 00       	call   f010143a <mem_init>$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 63 36 00 00       	call   f0103757 <env_init>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 6b 40 00 00       	call   f0104164 <trap_init>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 8c 63 00 00       	call   f010648a <mp_init>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	66 90                	xchg   %ax,%ax$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 b2 66 00 00       	call   f01067b7 <lapic_init>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	e8 c1 3e 00 00       	call   f0103fcb <pic_init>$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	e8 a9 74 00 00       	call   f01075b8 <time_init>$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	90                   	nop$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 75 74 00 00       	call   f010758a <pci_init>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	e8 fa 68 00 00       	call   f0106a1b <spin_lock>$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	83 3d 94 4e 2b f0 07 	cmpl   $0x7,0xf02b4e94$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	77 24                	ja     f010014e <i386_init+0xa6>$/;"	l
f010012a	obj/kern/kernel.asm	/^f010012a:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	00 $/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	f0 $/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	00 $/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	c7 04 24 27 79 10 f0 	movl   $0xf0107927,(%esp)$/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	e8 f2 fe ff ff       	call   f0100040 <_panic>$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	b8 c2 63 10 f0       	mov    $0xf01063c2,%eax$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	2d 48 63 10 f0       	sub    $0xf0106348,%eax$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	c7 44 24 04 48 63 10 	movl   $0xf0106348,0x4(%esp)$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	f0 $/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 24 60 00 00       	call   f0106194 <memmove>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	bb 20 50 2b f0       	mov    $0xf02b5020,%ebx$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	eb 4d                	jmp    f01001c4 <i386_init+0x11c>$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	e8 20 66 00 00       	call   f010679c <cpunum>$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	05 20 50 2b f0       	add    $0xf02b5020,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	74 39                	je     f01001c1 <i386_init+0x119>$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	89 d8                	mov    %ebx,%eax$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	2d 20 50 2b f0       	sub    $0xf02b5020,%eax$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	8d 80 00 e0 2b f0    	lea    -0xfd42000(%eax),%eax$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	a3 90 4e 2b f0       	mov    %eax,0xf02b4e90$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	00 $/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	e8 4e 67 00 00       	call   f0106907 <lapic_startap>$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	75 f8                	jne    f01001b9 <i386_init+0x111>$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	6b 05 c4 53 2b f0 74 	imul   $0x74,0xf02b53c4,%eax$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	05 20 50 2b f0       	add    $0xf02b5020,%eax$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	72 a3                	jb     f0100177 <i386_init+0xcf>$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	00 $/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	c7 04 24 d6 d3 1d f0 	movl   $0xf01dd3d6,(%esp)$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	e8 3d 37 00 00       	call   f0103925 <env_create>$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	00 $/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	c7 04 24 46 5e 23 f0 	movl   $0xf0235e46,(%esp)$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	e8 29 37 00 00       	call   f0103925 <env_create>$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	00 $/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	c7 04 24 0d 72 1d f0 	movl   $0xf01d720d,(%esp)$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	e8 15 37 00 00       	call   f0103925 <env_create>$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	e8 49 04 00 00       	call   f010065e <kbd_intr>$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	e8 1c 4b 00 00       	call   f0104d36 <sched_yield>$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a <mp_main>:$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	55                   	push   %ebp$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	89 e5                	mov    %esp,%ebp$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	77 20                	ja     f010024c <mp_main+0x32>$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	f0 $/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	c7 44 24 04 7b 00 00 	movl   $0x7b,0x4(%esp)$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	00 $/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	c7 04 24 27 79 10 f0 	movl   $0xf0107927,(%esp)$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	e8 f4 fd ff ff       	call   f0100040 <_panic>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	e8 43 65 00 00       	call   f010679c <cpunum>$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	c7 04 24 33 79 10 f0 	movl   $0xf0107933,(%esp)$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	e8 45 3e 00 00       	call   f01040ae <cprintf>$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	e8 49 65 00 00       	call   f01067b7 <lapic_init>$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	e8 ba 34 00 00       	call   f010372d <env_init_percpu>$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	e8 58 3e 00 00       	call   f01040d0 <trap_init_percpu>$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	e8 1f 65 00 00       	call   f010679c <cpunum>$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	81 c2 20 50 2b f0    	add    $0xf02b5020,%edx$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	e8 80 67 00 00       	call   f0106a1b <spin_lock>$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	e8 96 4a 00 00       	call   f0104d36 <sched_yield>$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0 <_warn>:$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	55                   	push   %ebp$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	53                   	push   %ebx$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	c7 04 24 49 79 10 f0 	movl   $0xf0107949,(%esp)$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	e8 ea 3d 00 00       	call   f01040ae <cprintf>$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	e8 a8 3d 00 00       	call   f010407b <vcprintf>$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	c7 04 24 64 7f 10 f0 	movl   $0xf0107f64,(%esp)$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	e8 cf 3d 00 00       	call   f01040ae <cprintf>$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	5b                   	pop    %ebx$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	5d                   	pop    %ebp$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	c3                   	ret    $/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0 <serial_proc_data>:$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	55                   	push   %ebp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	ec                   	in     (%dx),%al$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	a8 01                	test   $0x1,%al$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	74 08                	je     f0100305 <serial_proc_data+0x15>$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	ec                   	in     (%dx),%al$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	eb 05                	jmp    f010030a <serial_proc_data+0x1a>$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	5d                   	pop    %ebp$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	c3                   	ret    $/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c <cons_intr>:$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	55                   	push   %ebp$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	89 e5                	mov    %esp,%ebp$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	53                   	push   %ebx$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	89 c3                	mov    %eax,%ebx$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	eb 2a                	jmp    f0100341 <cons_intr+0x35>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	85 d2                	test   %edx,%edx$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	74 26                	je     f0100341 <cons_intr+0x35>$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	a1 24 42 2b f0       	mov    0xf02b4224,%eax$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	89 0d 24 42 2b f0    	mov    %ecx,0xf02b4224$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	88 90 20 40 2b f0    	mov    %dl,-0xfd4bfe0(%eax)$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	75 0a                	jne    f0100341 <cons_intr+0x35>$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	c7 05 24 42 2b f0 00 	movl   $0x0,0xf02b4224$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	00 00 00 $/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	ff d3                	call   *%ebx$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	89 c2                	mov    %eax,%edx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	75 cd                	jne    f0100317 <cons_intr+0xb>$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	5b                   	pop    %ebx$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	5d                   	pop    %ebp$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	c3                   	ret    $/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350 <kbd_proc_data>:$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	ec                   	in     (%dx),%al$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	a8 01                	test   $0x1,%al$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	0f 84 ef 00 00 00    	je     f010044d <kbd_proc_data+0xfd>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	ec                   	in     (%dx),%al$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	89 c2                	mov    %eax,%edx$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	75 0d                	jne    f0100374 <kbd_proc_data+0x24>$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	83 0d 00 40 2b f0 40 	orl    $0x40,0xf02b4000$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	c3                   	ret    $/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	55                   	push   %ebp$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	89 e5                	mov    %esp,%ebp$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	53                   	push   %ebx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	84 c0                	test   %al,%al$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	79 37                	jns    f01003b6 <kbd_proc_data+0x66>$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	8b 0d 00 40 2b f0    	mov    0xf02b4000,%ecx$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	85 db                	test   %ebx,%ebx$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	0f b6 82 c0 7a 10 f0 	movzbl -0xfef8540(%edx),%eax$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	83 c8 40             	or     $0x40,%eax$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	f7 d0                	not    %eax$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	21 c1                	and    %eax,%ecx$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	89 0d 00 40 2b f0    	mov    %ecx,0xf02b4000$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	e9 9d 00 00 00       	jmp    f0100453 <kbd_proc_data+0x103>$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	8b 0d 00 40 2b f0    	mov    0xf02b4000,%ecx$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	74 0e                	je     f01003cf <kbd_proc_data+0x7f>$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	89 c2                	mov    %eax,%edx$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	89 0d 00 40 2b f0    	mov    %ecx,0xf02b4000$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	0f b6 82 c0 7a 10 f0 	movzbl -0xfef8540(%edx),%eax$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	0b 05 00 40 2b f0    	or     0xf02b4000,%eax$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	0f b6 8a c0 79 10 f0 	movzbl -0xfef8640(%edx),%ecx$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	31 c8                	xor    %ecx,%eax$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	a3 00 40 2b f0       	mov    %eax,0xf02b4000$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	89 c1                	mov    %eax,%ecx$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	8b 0c 8d a0 79 10 f0 	mov    -0xfef8660(,%ecx,4),%ecx$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	a8 08                	test   $0x8,%al$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	74 1b                	je     f010041f <kbd_proc_data+0xcf>$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	89 da                	mov    %ebx,%edx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	77 05                	ja     f0100413 <kbd_proc_data+0xc3>$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	eb 0c                	jmp    f010041f <kbd_proc_data+0xcf>$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	f7 d0                	not    %eax$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	89 c2                	mov    %eax,%edx$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	89 d8                	mov    %ebx,%eax$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	75 29                	jne    f0100453 <kbd_proc_data+0x103>$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	75 21                	jne    f0100453 <kbd_proc_data+0x103>$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	c7 04 24 63 79 10 f0 	movl   $0xf0107963,(%esp)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	e8 70 3c 00 00       	call   f01040ae <cprintf>$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	ee                   	out    %al,(%dx)$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	89 d8                	mov    %ebx,%eax$/;"	l
f010044b	obj/kern/kernel.asm	/^f010044b:	eb 06                	jmp    f0100453 <kbd_proc_data+0x103>$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	c3                   	ret    $/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	5b                   	pop    %ebx$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	5d                   	pop    %ebp$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	c3                   	ret    $/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459 <cons_putc>:$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	55                   	push   %ebp$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	89 e5                	mov    %esp,%ebp$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	57                   	push   %edi$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	56                   	push   %esi$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	53                   	push   %ebx$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	89 c7                	mov    %eax,%edi$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	eb 0c                	jmp    f0100481 <cons_putc+0x28>$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	89 ca                	mov    %ecx,%edx$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	ec                   	in     (%dx),%al$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	89 ca                	mov    %ecx,%edx$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	ec                   	in     (%dx),%al$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	89 ca                	mov    %ecx,%edx$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	ec                   	in     (%dx),%al$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	ec                   	in     (%dx),%al$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	89 f2                	mov    %esi,%edx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	ec                   	in     (%dx),%al$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	a8 20                	test   $0x20,%al$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	75 05                	jne    f010048d <cons_putc+0x34>$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	75 e8                	jne    f0100475 <cons_putc+0x1c>$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	89 f8                	mov    %edi,%eax$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	ee                   	out    %al,(%dx)$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	eb 0c                	jmp    f01004b8 <cons_putc+0x5f>$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	89 ca                	mov    %ecx,%edx$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	ec                   	in     (%dx),%al$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	89 ca                	mov    %ecx,%edx$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	ec                   	in     (%dx),%al$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	89 ca                	mov    %ecx,%edx$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	ec                   	in     (%dx),%al$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	89 ca                	mov    %ecx,%edx$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	ec                   	in     (%dx),%al$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	89 f2                	mov    %esi,%edx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	ec                   	in     (%dx),%al$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	84 c0                	test   %al,%al$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	78 05                	js     f01004c4 <cons_putc+0x6b>$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	75 e8                	jne    f01004ac <cons_putc+0x53>$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	ee                   	out    %al,(%dx)$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	ee                   	out    %al,(%dx)$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	ee                   	out    %al,(%dx)$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	89 fa                	mov    %edi,%edx$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	89 f8                	mov    %edi,%eax$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	80 cc 07             	or     $0x7,%ah$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	85 d2                	test   %edx,%edx$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	89 f8                	mov    %edi,%eax$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	74 75                	je     f010056d <cons_putc+0x114>$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	7f 0a                	jg     f0100507 <cons_putc+0xae>$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	74 15                	je     f0100517 <cons_putc+0xbe>$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	e9 9a 00 00 00       	jmp    f01005a1 <cons_putc+0x148>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	74 3b                	je     f0100547 <cons_putc+0xee>$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	90                   	nop$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	74 3d                	je     f010054f <cons_putc+0xf6>$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	e9 8a 00 00 00       	jmp    f01005a1 <cons_putc+0x148>$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	0f b7 05 28 42 2b f0 	movzwl 0xf02b4228,%eax$/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	66 85 c0             	test   %ax,%ax$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	0f 84 e5 00 00 00    	je     f010060c <cons_putc+0x1b3>$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	66 a3 28 42 2b f0    	mov    %ax,0xf02b4228$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	83 cf 20             	or     $0x20,%edi$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	8b 15 2c 42 2b f0    	mov    0xf02b422c,%edx$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	eb 78                	jmp    f01005bf <cons_putc+0x166>$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	66 83 05 28 42 2b f0 	addw   $0x50,0xf02b4228$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	50 $/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	0f b7 05 28 42 2b f0 	movzwl 0xf02b4228,%eax$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	66 a3 28 42 2b f0    	mov    %ax,0xf02b4228$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	eb 52                	jmp    f01005bf <cons_putc+0x166>$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	e8 e2 fe ff ff       	call   f0100459 <cons_putc>$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	e8 d8 fe ff ff       	call   f0100459 <cons_putc>$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	e8 ce fe ff ff       	call   f0100459 <cons_putc>$/;"	l
f010058b	obj/kern/kernel.asm	/^f010058b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	e8 c4 fe ff ff       	call   f0100459 <cons_putc>$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	e8 ba fe ff ff       	call   f0100459 <cons_putc>$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	eb 1e                	jmp    f01005bf <cons_putc+0x166>$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	0f b7 05 28 42 2b f0 	movzwl 0xf02b4228,%eax$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	66 89 15 28 42 2b f0 	mov    %dx,0xf02b4228$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	8b 15 2c 42 2b f0    	mov    0xf02b422c,%edx$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	66 81 3d 28 42 2b f0 	cmpw   $0x7cf,0xf02b4228$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	cf 07 $/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	76 42                	jbe    f010060c <cons_putc+0x1b3>$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	a1 2c 42 2b f0       	mov    0xf02b422c,%eax$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	00 $/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	e8 ab 5b 00 00       	call   f0106194 <memmove>$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	8b 15 2c 42 2b f0    	mov    0xf02b422c,%edx$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	83 c0 01             	add    $0x1,%eax$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	75 f0                	jne    f01005f4 <cons_putc+0x19b>$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	66 83 2d 28 42 2b f0 	subw   $0x50,0xf02b4228$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	50 $/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	8b 0d 30 42 2b f0    	mov    0xf02b4230,%ecx$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	89 ca                	mov    %ecx,%edx$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	ee                   	out    %al,(%dx)$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	0f b7 1d 28 42 2b f0 	movzwl 0xf02b4228,%ebx$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	89 d8                	mov    %ebx,%eax$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	89 f2                	mov    %esi,%edx$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	ee                   	out    %al,(%dx)$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	89 ca                	mov    %ecx,%edx$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	ee                   	out    %al,(%dx)$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	89 d8                	mov    %ebx,%eax$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	89 f2                	mov    %esi,%edx$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	ee                   	out    %al,(%dx)$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	5b                   	pop    %ebx$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	5e                   	pop    %esi$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	5f                   	pop    %edi$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	5d                   	pop    %ebp$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	c3                   	ret    $/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642 <serial_intr>:$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	80 3d 34 42 2b f0 00 	cmpb   $0x0,0xf02b4234$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	74 11                	je     f010065c <serial_intr+0x1a>$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	55                   	push   %ebp$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	89 e5                	mov    %esp,%ebp$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	b8 f0 02 10 f0       	mov    $0xf01002f0,%eax$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	e8 b1 fc ff ff       	call   f010030c <cons_intr>$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	c9                   	leave  $/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	f3 c3                	repz ret $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e <kbd_intr>:$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	55                   	push   %ebp$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	b8 50 03 10 f0       	mov    $0xf0100350,%eax$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	e8 9e fc ff ff       	call   f010030c <cons_intr>$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	c9                   	leave  $/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	c3                   	ret    $/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670 <cons_getc>:$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	55                   	push   %ebp$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	89 e5                	mov    %esp,%ebp$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	e8 c7 ff ff ff       	call   f0100642 <serial_intr>$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	e8 de ff ff ff       	call   f010065e <kbd_intr>$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	a1 20 42 2b f0       	mov    0xf02b4220,%eax$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	3b 05 24 42 2b f0    	cmp    0xf02b4224,%eax$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	74 26                	je     f01006b3 <cons_getc+0x43>$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	89 15 20 42 2b f0    	mov    %edx,0xf02b4220$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	0f b6 88 20 40 2b f0 	movzbl -0xfd4bfe0(%eax),%ecx$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	89 c8                	mov    %ecx,%eax$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	75 11                	jne    f01006b8 <cons_getc+0x48>$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	c7 05 20 42 2b f0 00 	movl   $0x0,0xf02b4220$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	00 00 00 $/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	eb 05                	jmp    f01006b8 <cons_getc+0x48>$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	c9                   	leave  $/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	c3                   	ret    $/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba <cons_init>:$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	55                   	push   %ebp$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	57                   	push   %edi$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	56                   	push   %esi$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	53                   	push   %ebx$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	5a a5 $/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	74 11                	je     f01006f1 <cons_init+0x37>$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	c7 05 30 42 2b f0 b4 	movl   $0x3b4,0xf02b4230$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	03 00 00 $/;"	l
f01006ea	obj/kern/kernel.asm	/^f01006ea:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	eb 16                	jmp    f0100707 <cons_init+0x4d>$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	c7 05 30 42 2b f0 d4 	movl   $0x3d4,0xf02b4230$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	03 00 00 $/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	8b 0d 30 42 2b f0    	mov    0xf02b4230,%ecx$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	89 ca                	mov    %ecx,%edx$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	ee                   	out    %al,(%dx)$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	89 da                	mov    %ebx,%edx$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	ec                   	in     (%dx),%al$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	89 ca                	mov    %ecx,%edx$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	ee                   	out    %al,(%dx)$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	89 da                	mov    %ebx,%edx$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	ec                   	in     (%dx),%al$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	89 3d 2c 42 2b f0    	mov    %edi,0xf02b422c$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	09 de                	or     %ebx,%esi$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	66 89 35 28 42 2b f0 	mov    %si,0xf02b4228$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	e8 1b ff ff ff       	call   f010065e <kbd_intr>$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	e8 fe 37 00 00       	call   f0103f5c <irq_setmask_8259A>$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	ee                   	out    %al,(%dx)$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	ee                   	out    %al,(%dx)$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	ee                   	out    %al,(%dx)$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	ee                   	out    %al,(%dx)$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	ee                   	out    %al,(%dx)$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	b2 fc                	mov    $0xfc,%dl$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	ee                   	out    %al,(%dx)$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	ee                   	out    %al,(%dx)$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	b2 fd                	mov    $0xfd,%dl$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	ec                   	in     (%dx),%al$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	3c ff                	cmp    $0xff,%al$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	0f 95 c1             	setne  %cl$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	88 0d 34 42 2b f0    	mov    %cl,0xf02b4234$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	b2 fa                	mov    $0xfa,%dl$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	ec                   	in     (%dx),%al$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	ec                   	in     (%dx),%al$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	84 c9                	test   %cl,%cl$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	74 24                	je     f01007d5 <cons_init+0x11b>$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	e8 90 37 00 00       	call   f0103f5c <irq_setmask_8259A>$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	80 3d 34 42 2b f0 00 	cmpb   $0x0,0xf02b4234$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	75 0c                	jne    f01007e1 <cons_init+0x127>$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	c7 04 24 6f 79 10 f0 	movl   $0xf010796f,(%esp)$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	e8 cd 38 00 00       	call   f01040ae <cprintf>$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	5b                   	pop    %ebx$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	5e                   	pop    %esi$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	5f                   	pop    %edi$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	5d                   	pop    %ebp$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	c3                   	ret    $/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9 <cputchar>:$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	55                   	push   %ebp$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	e8 62 fc ff ff       	call   f0100459 <cons_putc>$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	c9                   	leave  $/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	c3                   	ret    $/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9 <getchar>:$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	55                   	push   %ebp$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	e8 6c fe ff ff       	call   f0100670 <cons_getc>$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	85 c0                	test   %eax,%eax$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	74 f7                	je     f01007ff <getchar+0x6>$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	c9                   	leave  $/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	c3                   	ret    $/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a <iscons>:$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	55                   	push   %ebp$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	89 e5                	mov    %esp,%ebp$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	5d                   	pop    %ebp$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	c3                   	ret    $/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820 <mon_help>:$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	55                   	push   %ebp$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	89 e5                	mov    %esp,%ebp$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	c7 44 24 08 c0 7b 10 	movl   $0xf0107bc0,0x8(%esp)$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	f0 $/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	c7 44 24 04 de 7b 10 	movl   $0xf0107bde,0x4(%esp)$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	f0 $/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	c7 04 24 e3 7b 10 f0 	movl   $0xf0107be3,(%esp)$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	e8 6c 38 00 00       	call   f01040ae <cprintf>$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	c7 44 24 08 a0 7c 10 	movl   $0xf0107ca0,0x8(%esp)$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	f0 $/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c7 44 24 04 ec 7b 10 	movl   $0xf0107bec,0x4(%esp)$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	f0 $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 04 24 e3 7b 10 f0 	movl   $0xf0107be3,(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	e8 50 38 00 00       	call   f01040ae <cprintf>$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	c7 44 24 08 c8 7c 10 	movl   $0xf0107cc8,0x8(%esp)$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	f0 $/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	c7 44 24 04 f5 7b 10 	movl   $0xf0107bf5,0x4(%esp)$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	f0 $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 04 24 e3 7b 10 f0 	movl   $0xf0107be3,(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	e8 34 38 00 00       	call   f01040ae <cprintf>$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	c9                   	leave  $/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	c3                   	ret    $/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881 <mon_kerninfo>:$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	55                   	push   %ebp$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	89 e5                	mov    %esp,%ebp$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	c7 04 24 ff 7b 10 f0 	movl   $0xf0107bff,(%esp)$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	e8 1b 38 00 00       	call   f01040ae <cprintf>$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	00 $/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	c7 04 24 f4 7c 10 f0 	movl   $0xf0107cf4,(%esp)$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	e8 07 38 00 00       	call   f01040ae <cprintf>$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	00 $/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	f0 $/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	c7 04 24 1c 7d 10 f0 	movl   $0xf0107d1c,(%esp)$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	e8 eb 37 00 00       	call   f01040ae <cprintf>$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	c7 44 24 08 97 78 10 	movl   $0x107897,0x8(%esp)$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	00 $/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	c7 44 24 04 97 78 10 	movl   $0xf0107897,0x4(%esp)$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	f0 $/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	c7 04 24 40 7d 10 f0 	movl   $0xf0107d40,(%esp)$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	e8 cf 37 00 00       	call   f01040ae <cprintf>$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	c7 44 24 08 bd 35 2b 	movl   $0x2b35bd,0x8(%esp)$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	00 $/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	c7 44 24 04 bd 35 2b 	movl   $0xf02b35bd,0x4(%esp)$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	f0 $/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	c7 04 24 64 7d 10 f0 	movl   $0xf0107d64,(%esp)$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	e8 b3 37 00 00       	call   f01040ae <cprintf>$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	c7 44 24 08 20 c8 33 	movl   $0x33c820,0x8(%esp)$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	00 $/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	c7 44 24 04 20 c8 33 	movl   $0xf033c820,0x4(%esp)$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	f0 $/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	c7 04 24 88 7d 10 f0 	movl   $0xf0107d88,(%esp)$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	e8 97 37 00 00       	call   f01040ae <cprintf>$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	b8 1f cc 33 f0       	mov    $0xf033cc1f,%eax$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	85 c0                	test   %eax,%eax$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	c7 04 24 ac 7d 10 f0 	movl   $0xf0107dac,(%esp)$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	e8 6a 37 00 00       	call   f01040ae <cprintf>$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	c9                   	leave  $/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	c3                   	ret    $/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b <mon_backtrace>:$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	55                   	push   %ebp$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	89 e5                	mov    %esp,%ebp$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	57                   	push   %edi$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	56                   	push   %esi$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	53                   	push   %ebx$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	89 ee                	mov    %ebp,%esi$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	c7 04 24 18 7c 10 f0 	movl   $0xf0107c18,(%esp)$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	e8 4c 37 00 00       	call   f01040ae <cprintf>$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	e9 84 00 00 00       	jmp    f01009eb <mon_backtrace+0xa0>$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	8b 7e 04             	mov    0x4(%esi),%edi$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	c7 04 24 2a 7c 10 f0 	movl   $0xf0107c2a,(%esp)$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	e8 30 37 00 00       	call   f01040ae <cprintf>$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	8b 44 9e 04          	mov    0x4(%esi,%ebx,4),%eax$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	c7 04 24 45 7c 10 f0 	movl   $0xf0107c45,(%esp)$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	e8 17 37 00 00       	call   f01040ae <cprintf>$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	83 fb 06             	cmp    $0x6,%ebx$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	75 e4                	jne    f0100983 <mon_backtrace+0x38>$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	c7 04 24 64 7f 10 f0 	movl   $0xf0107f64,(%esp)$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	e8 03 37 00 00       	call   f01040ae <cprintf>$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	e8 58 4c 00 00       	call   f0105612 <debuginfo_eip>$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	2b 7d e0             	sub    -0x20(%ebp),%edi$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	c7 04 24 4b 7c 10 f0 	movl   $0xf0107c4b,(%esp)$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	e8 c5 36 00 00       	call   f01040ae <cprintf>$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	8b 36                	mov    (%esi),%esi$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	85 f6                	test   %esi,%esi$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	0f 85 74 ff ff ff    	jne    f0100967 <mon_backtrace+0x1c>$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	5b                   	pop    %ebx$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	5e                   	pop    %esi$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	5f                   	pop    %edi$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	5d                   	pop    %ebp$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	c3                   	ret    $/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00 <monitor>:$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	55                   	push   %ebp$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	57                   	push   %edi$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	56                   	push   %esi$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	53                   	push   %ebx$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	c7 04 24 d8 7d 10 f0 	movl   $0xf0107dd8,(%esp)$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	e8 99 36 00 00       	call   f01040ae <cprintf>$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	c7 04 24 fc 7d 10 f0 	movl   $0xf0107dfc,(%esp)$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	e8 8d 36 00 00       	call   f01040ae <cprintf>$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	74 0b                	je     f0100a32 <monitor+0x32>$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	e8 19 3c 00 00       	call   f010464b <print_trapframe>$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	c7 04 24 64 7c 10 f0 	movl   $0xf0107c64,(%esp)$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	e8 a2 54 00 00       	call   f0105ee0 <readline>$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	85 c0                	test   %eax,%eax$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	74 ee                	je     f0100a32 <monitor+0x32>$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	eb 0a                	jmp    f0100a5c <monitor+0x5c>$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	89 f7                	mov    %esi,%edi$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	89 fe                	mov    %edi,%esi$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	84 c0                	test   %al,%al$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	74 63                	je     f0100ac6 <monitor+0xc6>$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	c7 04 24 68 7c 10 f0 	movl   $0xf0107c68,(%esp)$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	e8 94 56 00 00       	call   f010610a <strchr>$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	85 c0                	test   %eax,%eax$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	75 d8                	jne    f0100a52 <monitor+0x52>$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	74 47                	je     f0100ac6 <monitor+0xc6>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	75 16                	jne    f0100a9a <monitor+0x9a>$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	00 $/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	c7 04 24 6d 7c 10 f0 	movl   $0xf0107c6d,(%esp)$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	e8 16 36 00 00       	call   f01040ae <cprintf>$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	eb 98                	jmp    f0100a32 <monitor+0x32>$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	eb 03                	jmp    f0100aa6 <monitor+0xa6>$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	84 c0                	test   %al,%al$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	74 ad                	je     f0100a5a <monitor+0x5a>$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	c7 04 24 68 7c 10 f0 	movl   $0xf0107c68,(%esp)$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	e8 4a 56 00 00       	call   f010610a <strchr>$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	85 c0                	test   %eax,%eax$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	74 df                	je     f0100aa3 <monitor+0xa3>$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	eb 94                	jmp    f0100a5a <monitor+0x5a>$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	00 $/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	85 f6                	test   %esi,%esi$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	0f 84 5c ff ff ff    	je     f0100a32 <monitor+0x32>$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	8b 04 85 40 7e 10 f0 	mov    -0xfef81c0(,%eax,4),%eax$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	e8 b8 55 00 00       	call   f01060ac <strcmp>$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	85 c0                	test   %eax,%eax$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	75 24                	jne    f0100b1c <monitor+0x11c>$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	ff 14 85 48 7e 10 f0 	call   *-0xfef81b8(,%eax,4)$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	85 c0                	test   %eax,%eax$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	78 25                	js     f0100b3c <monitor+0x13c>$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	e9 16 ff ff ff       	jmp    f0100a32 <monitor+0x32>$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	75 b7                	jne    f0100adb <monitor+0xdb>$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	c7 04 24 8a 7c 10 f0 	movl   $0xf0107c8a,(%esp)$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	e8 77 35 00 00       	call   f01040ae <cprintf>$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	e9 f6 fe ff ff       	jmp    f0100a32 <monitor+0x32>$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	5b                   	pop    %ebx$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	5e                   	pop    %esi$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	5f                   	pop    %edi$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	5d                   	pop    %ebp$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	c3                   	ret    $/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50 <boot_alloc>:$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	83 3d 38 42 2b f0 00 	cmpl   $0x0,0xf02b4238$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	75 11                	jne    f0100b6a <boot_alloc+0x1a>$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	ba 1f d8 33 f0       	mov    $0xf033d81f,%edx$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	89 15 38 42 2b f0    	mov    %edx,0xf02b4238$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	a1 38 42 2b f0       	mov    0xf02b4238,%eax$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	eb 3c                	jmp    f0100bbb <boot_alloc+0x6b>$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	81 c1 00 10 00 00    	add    $0x1000,%ecx$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	81 ea 00 10 00 00    	sub    $0x1000,%edx$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	81 f9 00 10 00 00    	cmp    $0x1000,%ecx$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	75 28                	jne    f0100bbb <boot_alloc+0x6b>$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	55                   	push   %ebp$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	89 0d 38 42 2b f0    	mov    %ecx,0xf02b4238$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	c7 44 24 08 64 7e 10 	movl   $0xf0107e64,0x8(%esp)$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	f0 $/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	00 $/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	e8 85 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	85 d2                	test   %edx,%edx$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	75 c0                	jne    f0100b7f <boot_alloc+0x2f>$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	89 0d 38 42 2b f0    	mov    %ecx,0xf02b4238$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	c3                   	ret    $/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6 <check_va2pa>:$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	a8 01                	test   $0x1,%al$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	74 5d                	je     f0100c2f <check_va2pa+0x69>$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	89 c1                	mov    %eax,%ecx$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	3b 0d 94 4e 2b f0    	cmp    0xf02b4e94,%ecx$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	72 26                	jb     f0100c0a <check_va2pa+0x44>$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	55                   	push   %ebp$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	f0 $/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	00 $/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	e8 36 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	89 c2                	mov    %eax,%edx$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	85 d2                	test   %edx,%edx$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	c3                   	ret    $/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	c3                   	ret    $/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35 <check_page_free_list>:$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	55                   	push   %ebp$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	57                   	push   %edi$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	56                   	push   %esi$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	53                   	push   %ebx$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	84 c0                	test   %al,%al$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	0f 85 31 03 00 00    	jne    f0100f77 <check_page_free_list+0x342>$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	e9 3e 03 00 00       	jmp    f0100f89 <check_page_free_list+0x354>$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	c7 44 24 08 a8 81 10 	movl   $0xf01081a8,0x8(%esp)$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	f0 $/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	c7 44 24 04 c7 02 00 	movl   $0x2c7,0x4(%esp)$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	00 $/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	e8 d9 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	89 c2                	mov    %eax,%edx$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	0f 95 c2             	setne  %dl$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	85 c0                	test   %eax,%eax$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	75 dc                	jne    f0100c73 <check_page_free_list+0x3e>$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	89 10                	mov    %edx,(%eax)$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	a3 40 42 2b f0       	mov    %eax,0xf02b4240$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	8b 1d 40 42 2b f0    	mov    0xf02b4240,%ebx$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	eb 63                	jmp    f0100d20 <check_page_free_list+0xeb>$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	89 c2                	mov    %eax,%edx$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	39 f2                	cmp    %esi,%edx$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	73 4a                	jae    f0100d1e <check_page_free_list+0xe9>$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	89 c2                	mov    %eax,%edx$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	72 20                	jb     f0100d01 <check_page_free_list+0xcc>$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	f0 $/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	00 $/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	e8 3f f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	00 $/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	00 $/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	e8 29 54 00 00       	call   f0106147 <memset>$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	85 db                	test   %ebx,%ebx$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	75 99                	jne    f0100cbd <check_page_free_list+0x88>$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	e8 22 fe ff ff       	call   f0100b50 <boot_alloc>$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	8b 15 40 42 2b f0    	mov    0xf02b4240,%edx$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	8b 0d 9c 4e 2b f0    	mov    0xf02b4e9c,%ecx$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	a1 94 4e 2b f0       	mov    0xf02b4e94,%eax$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	e9 c4 01 00 00       	jmp    f0100f1f <check_page_free_list+0x2ea>$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	73 24                	jae    f0100d84 <check_page_free_list+0x14f>$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	c7 44 24 0c 9a 7e 10 	movl   $0xf0107e9a,0xc(%esp)$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	f0 $/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	f0 $/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	c7 44 24 04 e1 02 00 	movl   $0x2e1,0x4(%esp)$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	00 $/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	e8 bc f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	72 24                	jb     f0100dad <check_page_free_list+0x178>$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	c7 44 24 0c bb 7e 10 	movl   $0xf0107ebb,0xc(%esp)$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	f0 $/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	f0 $/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	00 $/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	e8 93 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	89 d0                	mov    %edx,%eax$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	a8 07                	test   $0x7,%al$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	74 24                	je     f0100dda <check_page_free_list+0x1a5>$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	c7 44 24 0c cc 81 10 	movl   $0xf01081cc,0xc(%esp)$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	f0 $/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	f0 $/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	c7 44 24 04 e3 02 00 	movl   $0x2e3,0x4(%esp)$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	00 $/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	e8 66 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	85 c0                	test   %eax,%eax$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	75 24                	jne    f0100e08 <check_page_free_list+0x1d3>$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	c7 44 24 0c cf 7e 10 	movl   $0xf0107ecf,0xc(%esp)$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	f0 $/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	f0 $/;"	l
f0100df4	obj/kern/kernel.asm	/^f0100df4:	c7 44 24 04 e6 02 00 	movl   $0x2e6,0x4(%esp)$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	00 $/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	e8 38 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	75 24                	jne    f0100e33 <check_page_free_list+0x1fe>$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	c7 44 24 0c e0 7e 10 	movl   $0xf0107ee0,0xc(%esp)$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	f0 $/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	f0 $/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	c7 44 24 04 e7 02 00 	movl   $0x2e7,0x4(%esp)$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	00 $/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	e8 0d f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	75 24                	jne    f0100e5e <check_page_free_list+0x229>$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	c7 44 24 0c 00 82 10 	movl   $0xf0108200,0xc(%esp)$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	f0 $/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	f0 $/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	c7 44 24 04 e8 02 00 	movl   $0x2e8,0x4(%esp)$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	00 $/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	e8 e2 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	75 24                	jne    f0100e89 <check_page_free_list+0x254>$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	c7 44 24 0c f9 7e 10 	movl   $0xf0107ef9,0xc(%esp)$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	f0 $/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	f0 $/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	c7 44 24 04 e9 02 00 	movl   $0x2e9,0x4(%esp)$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	00 $/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	e8 b7 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	0f 86 1c 01 00 00    	jbe    f0100fb0 <check_page_free_list+0x37b>$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	77 20                	ja     f0100ebe <check_page_free_list+0x289>$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	f0 $/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	00 $/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	e8 82 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	0f 86 d3 00 00 00    	jbe    f0100fa0 <check_page_free_list+0x36b>$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	c7 44 24 0c 24 82 10 	movl   $0xf0108224,0xc(%esp)$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	f0 $/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	f0 $/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	c7 44 24 04 ea 02 00 	movl   $0x2ea,0x4(%esp)$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	00 $/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	e8 4f f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	c7 44 24 0c 13 7f 10 	movl   $0xf0107f13,0xc(%esp)$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	f0 $/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	f0 $/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	c7 44 24 04 ec 02 00 	movl   $0x2ec,0x4(%esp)$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	00 $/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	e8 2b f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	eb 03                	jmp    f0100f1d <check_page_free_list+0x2e8>$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	8b 12                	mov    (%edx),%edx$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	85 d2                	test   %edx,%edx$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	0f 85 34 fe ff ff    	jne    f0100d5b <check_page_free_list+0x126>$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	85 db                	test   %ebx,%ebx$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	7f 24                	jg     f0100f4f <check_page_free_list+0x31a>$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	c7 44 24 0c 30 7f 10 	movl   $0xf0107f30,0xc(%esp)$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	f0 $/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	f0 $/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	c7 44 24 04 f4 02 00 	movl   $0x2f4,0x4(%esp)$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	00 $/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	e8 f1 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	85 ff                	test   %edi,%edi$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	7f 72                	jg     f0100fc5 <check_page_free_list+0x390>$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	c7 44 24 0c 42 7f 10 	movl   $0xf0107f42,0xc(%esp)$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	f0 $/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	f0 $/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	c7 44 24 04 f5 02 00 	movl   $0x2f5,0x4(%esp)$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	00 $/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	e8 c9 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	a1 40 42 2b f0       	mov    0xf02b4240,%eax$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	85 c0                	test   %eax,%eax$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	0f 85 e3 fc ff ff    	jne    f0100c67 <check_page_free_list+0x32>$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	e9 c2 fc ff ff       	jmp    f0100c4b <check_page_free_list+0x16>$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	83 3d 40 42 2b f0 00 	cmpl   $0x0,0xf02b4240$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	0f 84 b5 fc ff ff    	je     f0100c4b <check_page_free_list+0x16>$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	e9 15 fd ff ff       	jmp    f0100cb5 <check_page_free_list+0x80>$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	0f 85 6f ff ff ff    	jne    f0100f1a <check_page_free_list+0x2e5>$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	e9 41 ff ff ff       	jmp    f0100ef1 <check_page_free_list+0x2bc>$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	0f 85 5a ff ff ff    	jne    f0100f15 <check_page_free_list+0x2e0>$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	90                   	nop$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	e9 2c ff ff ff       	jmp    f0100ef1 <check_page_free_list+0x2bc>$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	5b                   	pop    %ebx$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	5e                   	pop    %esi$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	5f                   	pop    %edi$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	5d                   	pop    %ebp$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	c3                   	ret    $/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd <page_init>:$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	55                   	push   %ebp$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	57                   	push   %edi$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	56                   	push   %esi$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	53                   	push   %ebx$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	e8 70 fb ff ff       	call   f0100b50 <boot_alloc>$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	77 20                	ja     f0101007 <page_init+0x3a>$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	f0 $/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	c7 44 24 04 53 01 00 	movl   $0x153,0x4(%esp)$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	00 $/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	e8 39 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	8d b8 00 00 00 10    	lea    0x10000000(%eax),%edi$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	8b 35 40 42 2b f0    	mov    0xf02b4240,%esi$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	eb 40                	jmp    f010105f <page_init+0x92>$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	8d 04 cd 00 00 00 00 	lea    0x0(,%ecx,8),%eax$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	89 c3                	mov    %eax,%ebx$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	03 1d 9c 4e 2b f0    	add    0xf02b4e9c,%ebx$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	85 d2                	test   %edx,%edx$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	74 1e                	je     f0101056 <page_init+0x89>$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	81 fa 00 70 00 00    	cmp    $0x7000,%edx$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	74 16                	je     f0101056 <page_init+0x89>$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	39 d7                	cmp    %edx,%edi$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	76 08                	jbe    f010104c <page_init+0x7f>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	81 fa ff ff 09 00    	cmp    $0x9ffff,%edx$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	77 0a                	ja     f0101056 <page_init+0x89>$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	89 33                	mov    %esi,(%ebx)$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	03 05 9c 4e 2b f0    	add    0xf02b4e9c,%eax$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	89 c6                	mov    %eax,%esi$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	81 c2 00 10 00 00    	add    $0x1000,%edx$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	3b 0d 94 4e 2b f0    	cmp    0xf02b4e94,%ecx$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	72 b8                	jb     f010101f <page_init+0x52>$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	89 35 40 42 2b f0    	mov    %esi,0xf02b4240$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	5b                   	pop    %ebx$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	5e                   	pop    %esi$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	5f                   	pop    %edi$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	5d                   	pop    %ebp$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	c3                   	ret    $/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075 <page_alloc>:$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	55                   	push   %ebp$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	89 e5                	mov    %esp,%ebp$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	53                   	push   %ebx$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	8b 1d 40 42 2b f0    	mov    0xf02b4240,%ebx$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	85 db                	test   %ebx,%ebx$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	74 75                	je     f01010fb <page_alloc+0x86>$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	a3 40 42 2b f0       	mov    %eax,0xf02b4240$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	74 58                	je     f01010eb <page_alloc+0x76>$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	89 d8                	mov    %ebx,%eax$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	89 c2                	mov    %eax,%edx$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	72 20                	jb     f01010ce <page_alloc+0x59>$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	f0 $/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	00 $/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	e8 72 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	00 $/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	00 $/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	e8 5c 50 00 00       	call   f0106147 <memset>$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	89 d8                	mov    %ebx,%eax$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	eb 05                	jmp    f0101100 <page_alloc+0x8b>$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	5b                   	pop    %ebx$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	5d                   	pop    %ebp$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	c3                   	ret    $/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106 <page_free>:$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	55                   	push   %ebp$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	89 e5                	mov    %esp,%ebp$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	85 c0                	test   %eax,%eax$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	74 0c                	je     f010111f <page_free+0x19>$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	75 05                	jne    f010111f <page_free+0x19>$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	74 1c                	je     f010113b <page_free+0x35>$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	c7 44 24 08 53 7f 10 	movl   $0xf0107f53,0x8(%esp)$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	f0 $/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	c7 44 24 04 89 01 00 	movl   $0x189,0x4(%esp)$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	00 $/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	e8 05 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	8b 15 40 42 2b f0    	mov    0xf02b4240,%edx$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	89 10                	mov    %edx,(%eax)$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	a3 40 42 2b f0       	mov    %eax,0xf02b4240$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	c9                   	leave  $/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	c3                   	ret    $/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a <page_decref>:$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	55                   	push   %ebp$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	89 e5                	mov    %esp,%ebp$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	66 85 d2             	test   %dx,%dx$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	75 08                	jne    f010116b <page_decref+0x21>$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	e8 9b ff ff ff       	call   f0101106 <page_free>$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	c9                   	leave  $/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	c3                   	ret    $/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d <pgdir_walk>:$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	55                   	push   %ebp$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	56                   	push   %esi$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	53                   	push   %ebx$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	89 f3                	mov    %esi,%ebx$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	75 2c                	jne    f01011b4 <pgdir_walk+0x47>$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	74 6c                	je     f01011fa <pgdir_walk+0x8d>$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	e8 db fe ff ff       	call   f0101075 <page_alloc>$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	85 c0                	test   %eax,%eax$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	74 63                	je     f0101201 <pgdir_walk+0x94>$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	83 c8 07             	or     $0x7,%eax$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	8b 03                	mov    (%ebx),%eax$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	89 c2                	mov    %eax,%edx$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	72 20                	jb     f01011e8 <pgdir_walk+0x7b>$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	f0 $/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	c7 44 24 04 c4 01 00 	movl   $0x1c4,0x4(%esp)$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	00 $/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	e8 58 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	eb 0c                	jmp    f0101206 <pgdir_walk+0x99>$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	eb 05                	jmp    f0101206 <pgdir_walk+0x99>$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	5b                   	pop    %ebx$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	5e                   	pop    %esi$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	5d                   	pop    %ebp$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	c3                   	ret    $/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d <page_lookup>:$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	55                   	push   %ebp$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	53                   	push   %ebx$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	00 $/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	e8 3c ff ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	85 db                	test   %ebx,%ebx$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	74 02                	je     f0101237 <page_lookup+0x2a>$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	85 c0                	test   %eax,%eax$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	74 38                	je     f0101273 <page_lookup+0x66>$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	8b 00                	mov    (%eax),%eax$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	a8 01                	test   $0x1,%al$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	74 39                	je     f010127a <page_lookup+0x6d>$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	72 1c                	jb     f0101268 <page_lookup+0x5b>$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	c7 44 24 08 6c 82 10 	movl   $0xf010826c,0x8(%esp)$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	f0 $/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	00 $/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	e8 d8 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	8b 15 9c 4e 2b f0    	mov    0xf02b4e9c,%edx$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	eb 0c                	jmp    f010127f <page_lookup+0x72>$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	eb 05                	jmp    f010127f <page_lookup+0x72>$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	5b                   	pop    %ebx$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	5d                   	pop    %ebp$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	c3                   	ret    $/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285 <tlb_invalidate>:$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	55                   	push   %ebp$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	89 e5                	mov    %esp,%ebp$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	e8 0c 55 00 00       	call   f010679c <cpunum>$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	83 b8 28 50 2b f0 00 	cmpl   $0x0,-0xfd4afd8(%eax)$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	74 16                	je     f01012b2 <tlb_invalidate+0x2d>$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	e8 fb 54 00 00       	call   f010679c <cpunum>$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	75 06                	jne    f01012b8 <tlb_invalidate+0x33>$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	0f 01 38             	invlpg (%eax)$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	c9                   	leave  $/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	c3                   	ret    $/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba <page_remove>:$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	55                   	push   %ebp$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	57                   	push   %edi$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	56                   	push   %esi$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	53                   	push   %ebx$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	00 $/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	e8 90 fe ff ff       	call   f010116d <pgdir_walk>$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	89 c7                	mov    %eax,%edi$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	8b 00                	mov    (%eax),%eax$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	85 c0                	test   %eax,%eax$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	74 4e                	je     f0101333 <page_remove+0x79>$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	a8 01                	test   $0x1,%al$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	74 4a                	je     f0101333 <page_remove+0x79>$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	72 1c                	jb     f0101310 <page_remove+0x56>$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	c7 44 24 08 6c 82 10 	movl   $0xf010826c,0x8(%esp)$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	f0 $/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	00 $/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	e8 30 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	8b 15 9c 4e 2b f0    	mov    0xf02b4e9c,%edx$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	e8 29 fe ff ff       	call   f010114a <page_decref>$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	c7 07 00 00 00 00    	movl   $0x0,(%edi)$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	e8 52 ff ff ff       	call   f0101285 <tlb_invalidate>$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	5b                   	pop    %ebx$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	5e                   	pop    %esi$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	5f                   	pop    %edi$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	5d                   	pop    %ebp$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	c3                   	ret    $/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b <page_insert>:$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	55                   	push   %ebp$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	89 e5                	mov    %esp,%ebp$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	57                   	push   %edi$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	56                   	push   %esi$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	53                   	push   %ebx$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	00 $/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	e8 0c fe ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	89 c3                	mov    %eax,%ebx$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	85 c0                	test   %eax,%eax$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	74 36                	je     f010139d <page_insert+0x62>$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	74 0f                	je     f0101380 <page_insert+0x45>$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	e8 3a ff ff ff       	call   f01012ba <page_remove>$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	2b 35 9c 4e 2b f0    	sub    0xf02b4e9c,%esi$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	09 c6                	or     %eax,%esi$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	89 33                	mov    %esi,(%ebx)$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	eb 05                	jmp    f01013a2 <page_insert+0x67>$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	5b                   	pop    %ebx$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	5e                   	pop    %esi$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	5f                   	pop    %edi$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	5d                   	pop    %ebp$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	c3                   	ret    $/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa <mmio_map_region>:$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	55                   	push   %ebp$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	57                   	push   %edi$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	56                   	push   %esi$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	53                   	push   %ebx$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	8b 35 00 43 12 f0    	mov    0xf0124300,%esi$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	01 f0                	add    %esi,%eax$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	76 1c                	jbe    f01013ee <mmio_map_region+0x44>$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	c7 44 24 08 8c 82 10 	movl   $0xf010828c,0x8(%esp)$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	f0 $/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	c7 44 24 04 75 02 00 	movl   $0x275,0x4(%esp)$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	00 $/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	e8 52 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	8b 3d 98 4e 2b f0    	mov    0xf02b4e98,%edi$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	eb 27                	jmp    f0101422 <mmio_map_region+0x78>$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	00 $/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	e8 5b fd ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	89 da                	mov    %ebx,%edx$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	03 55 08             	add    0x8(%ebp),%edx$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	83 ca 1b             	or     $0x1b,%edx$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	89 10                	mov    %edx,(%eax)$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	77 d4                	ja     f01013fb <mmio_map_region+0x51>$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	01 05 00 43 12 f0    	add    %eax,0xf0124300$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	89 f0                	mov    %esi,%eax$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	5b                   	pop    %ebx$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	5e                   	pop    %esi$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	5f                   	pop    %edi$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	5d                   	pop    %ebp$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	c3                   	ret    $/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a <mem_init>:$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	55                   	push   %ebp$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	89 e5                	mov    %esp,%ebp$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	57                   	push   %edi$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	56                   	push   %esi$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	53                   	push   %ebx$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	e8 e1 2a 00 00       	call   f0103f30 <mc146818_read>$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	89 c3                	mov    %eax,%ebx$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	e8 d3 2a 00 00       	call   f0103f30 <mc146818_read>$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	09 c3                	or     %eax,%ebx$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	89 d8                	mov    %ebx,%eax$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	85 c0                	test   %eax,%eax$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	a3 44 42 2b f0       	mov    %eax,0xf02b4244$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	e8 aa 2a 00 00       	call   f0103f30 <mc146818_read>$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	89 c3                	mov    %eax,%ebx$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	e8 9c 2a 00 00       	call   f0103f30 <mc146818_read>$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	09 c3                	or     %eax,%ebx$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	89 d8                	mov    %ebx,%eax$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	85 c0                	test   %eax,%eax$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	85 c0                	test   %eax,%eax$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	74 0e                	je     f01014be <mem_init+0x84>$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	89 15 94 4e 2b f0    	mov    %edx,0xf02b4e94$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	eb 0c                	jmp    f01014ca <mem_init+0x90>$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	8b 15 44 42 2b f0    	mov    0xf02b4244,%edx$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	89 15 94 4e 2b f0    	mov    %edx,0xf02b4e94$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	a1 44 42 2b f0       	mov    0xf02b4244,%eax$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	a1 94 4e 2b f0       	mov    0xf02b4e94,%eax$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	c7 04 24 ac 82 10 f0 	movl   $0xf01082ac,(%esp)$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	e8 b0 2b 00 00       	call   f01040ae <cprintf>$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	e8 48 f6 ff ff       	call   f0100b50 <boot_alloc>$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	a3 98 4e 2b f0       	mov    %eax,0xf02b4e98$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	00 $/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	00 $/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	e8 22 4c 00 00       	call   f0106147 <memset>$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	77 20                	ja     f0101551 <mem_init+0x117>$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	f0 $/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	00 $/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	e8 ef ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	83 ca 05             	or     $0x5,%edx$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	a1 94 4e 2b f0       	mov    0xf02b4e94,%eax$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	89 c6                	mov    %eax,%esi$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	e8 de f5 ff ff       	call   f0100b50 <boot_alloc>$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	a3 9c 4e 2b f0       	mov    %eax,0xf02b4e9c$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	00 $/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	e8 bc 4b 00 00       	call   f0106147 <memset>$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	e8 bb f5 ff ff       	call   f0100b50 <boot_alloc>$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	a3 48 42 2b f0       	mov    %eax,0xf02b4248$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	00 $/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	00 $/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	e8 95 4b 00 00       	call   f0106147 <memset>$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	e8 16 fa ff ff       	call   f0100fcd <page_init>$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	e8 74 f6 ff ff       	call   f0100c35 <check_page_free_list>$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	83 3d 9c 4e 2b f0 00 	cmpl   $0x0,0xf02b4e9c$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	75 1c                	jne    f01015e6 <mem_init+0x1ac>$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	c7 44 24 08 66 7f 10 	movl   $0xf0107f66,0x8(%esp)$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	f0 $/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	c7 44 24 04 06 03 00 	movl   $0x306,0x4(%esp)$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	00 $/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	e8 5a ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	a1 40 42 2b f0       	mov    0xf02b4240,%eax$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	eb 05                	jmp    f01015f7 <mem_init+0x1bd>$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	8b 00                	mov    (%eax),%eax$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	85 c0                	test   %eax,%eax$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	75 f7                	jne    f01015f2 <mem_init+0x1b8>$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	e8 6e fa ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	89 c7                	mov    %eax,%edi$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	85 c0                	test   %eax,%eax$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	75 24                	jne    f0101631 <mem_init+0x1f7>$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	c7 44 24 0c 81 7f 10 	movl   $0xf0107f81,0xc(%esp)$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	f0 $/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	f0 $/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	00 $/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	e8 0f ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	e8 38 fa ff ff       	call   f0101075 <page_alloc>$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	89 c6                	mov    %eax,%esi$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	85 c0                	test   %eax,%eax$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	75 24                	jne    f0101667 <mem_init+0x22d>$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	c7 44 24 0c 97 7f 10 	movl   $0xf0107f97,0xc(%esp)$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	f0 $/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	f0 $/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	00 $/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	e8 d9 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	e8 02 fa ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	85 c0                	test   %eax,%eax$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	75 24                	jne    f010169e <mem_init+0x264>$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	c7 44 24 0c ad 7f 10 	movl   $0xf0107fad,0xc(%esp)$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	f0 $/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	f0 $/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	00 $/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	e8 a2 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	39 f7                	cmp    %esi,%edi$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	75 24                	jne    f01016c6 <mem_init+0x28c>$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	c7 44 24 0c c3 7f 10 	movl   $0xf0107fc3,0xc(%esp)$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	f0 $/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	f0 $/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	00 $/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	e8 7a e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	39 c6                	cmp    %eax,%esi$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	74 04                	je     f01016d1 <mem_init+0x297>$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	39 c7                	cmp    %eax,%edi$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	75 24                	jne    f01016f5 <mem_init+0x2bb>$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	c7 44 24 0c e8 82 10 	movl   $0xf01082e8,0xc(%esp)$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	f0 $/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	f0 $/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	c7 44 24 04 14 03 00 	movl   $0x314,0x4(%esp)$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	00 $/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	e8 4b e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	8b 15 9c 4e 2b f0    	mov    0xf02b4e9c,%edx$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	a1 94 4e 2b f0       	mov    0xf02b4e94,%eax$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	89 f9                	mov    %edi,%ecx$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	29 d1                	sub    %edx,%ecx$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	39 c1                	cmp    %eax,%ecx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	72 24                	jb     f0101735 <mem_init+0x2fb>$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	c7 44 24 0c d5 7f 10 	movl   $0xf0107fd5,0xc(%esp)$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	f0 $/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	f0 $/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	00 $/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	e8 0b e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	89 f1                	mov    %esi,%ecx$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	29 d1                	sub    %edx,%ecx$/;"	l
f0101739	obj/kern/kernel.asm	/^f0101739:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	77 24                	ja     f0101767 <mem_init+0x32d>$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	c7 44 24 0c f2 7f 10 	movl   $0xf0107ff2,0xc(%esp)$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	f0 $/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	f0 $/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	c7 44 24 04 16 03 00 	movl   $0x316,0x4(%esp)$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	00 $/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	e8 d9 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	29 d1                	sub    %edx,%ecx$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	89 ca                	mov    %ecx,%edx$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	39 d0                	cmp    %edx,%eax$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	77 24                	ja     f010179c <mem_init+0x362>$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	c7 44 24 0c 0f 80 10 	movl   $0xf010800f,0xc(%esp)$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	f0 $/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	f0 $/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	c7 44 24 04 17 03 00 	movl   $0x317,0x4(%esp)$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	00 $/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	e8 a4 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	a1 40 42 2b f0       	mov    0xf02b4240,%eax$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	c7 05 40 42 2b f0 00 	movl   $0x0,0xf02b4240$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	00 00 00 $/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	e8 bb f8 ff ff       	call   f0101075 <page_alloc>$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	85 c0                	test   %eax,%eax$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	74 24                	je     f01017e2 <mem_init+0x3a8>$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	c7 44 24 0c 2c 80 10 	movl   $0xf010802c,0xc(%esp)$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	f0 $/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	f0 $/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	c7 44 24 04 1e 03 00 	movl   $0x31e,0x4(%esp)$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	00 $/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	e8 5e e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	e8 1c f9 ff ff       	call   f0101106 <page_free>$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	e8 14 f9 ff ff       	call   f0101106 <page_free>$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	e8 09 f9 ff ff       	call   f0101106 <page_free>$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	e8 6c f8 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	89 c6                	mov    %eax,%esi$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	85 c0                	test   %eax,%eax$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	75 24                	jne    f0101833 <mem_init+0x3f9>$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	c7 44 24 0c 81 7f 10 	movl   $0xf0107f81,0xc(%esp)$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	f0 $/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	f0 $/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	00 $/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	e8 0d e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	e8 36 f8 ff ff       	call   f0101075 <page_alloc>$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	89 c7                	mov    %eax,%edi$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	85 c0                	test   %eax,%eax$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	75 24                	jne    f0101869 <mem_init+0x42f>$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	c7 44 24 0c 97 7f 10 	movl   $0xf0107f97,0xc(%esp)$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	f0 $/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	f0 $/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	c7 44 24 04 26 03 00 	movl   $0x326,0x4(%esp)$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	00 $/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	e8 d7 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	e8 00 f8 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	85 c0                	test   %eax,%eax$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	75 24                	jne    f01018a0 <mem_init+0x466>$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	c7 44 24 0c ad 7f 10 	movl   $0xf0107fad,0xc(%esp)$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	f0 $/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	f0 $/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	c7 44 24 04 27 03 00 	movl   $0x327,0x4(%esp)$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	00 $/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	e8 a0 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	39 fe                	cmp    %edi,%esi$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	75 24                	jne    f01018c8 <mem_init+0x48e>$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	c7 44 24 0c c3 7f 10 	movl   $0xf0107fc3,0xc(%esp)$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	f0 $/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	f0 $/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	c7 44 24 04 29 03 00 	movl   $0x329,0x4(%esp)$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	00 $/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	e8 78 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	39 c7                	cmp    %eax,%edi$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	74 04                	je     f01018d3 <mem_init+0x499>$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	39 c6                	cmp    %eax,%esi$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	75 24                	jne    f01018f7 <mem_init+0x4bd>$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	c7 44 24 0c e8 82 10 	movl   $0xf01082e8,0xc(%esp)$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	f0 $/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	f0 $/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	c7 44 24 04 2a 03 00 	movl   $0x32a,0x4(%esp)$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	00 $/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	e8 49 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	e8 72 f7 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	85 c0                	test   %eax,%eax$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	74 24                	je     f010192b <mem_init+0x4f1>$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	c7 44 24 0c 2c 80 10 	movl   $0xf010802c,0xc(%esp)$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	f0 $/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	f0 $/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	00 $/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	e8 15 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	89 f0                	mov    %esi,%eax$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	89 c2                	mov    %eax,%edx$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	72 20                	jb     f0101966 <mem_init+0x52c>$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	f0 $/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	00 $/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	e8 da e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	00 $/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	00 $/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	e8 c4 47 00 00       	call   f0106147 <memset>$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	e8 7b f7 ff ff       	call   f0101106 <page_free>$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	e8 de f6 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	85 c0                	test   %eax,%eax$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	75 24                	jne    f01019bf <mem_init+0x585>$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	c7 44 24 0c 3b 80 10 	movl   $0xf010803b,0xc(%esp)$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	f0 $/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	f0 $/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	00 $/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	e8 81 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	39 c6                	cmp    %eax,%esi$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	74 24                	je     f01019e7 <mem_init+0x5ad>$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	c7 44 24 0c 59 80 10 	movl   $0xf0108059,0xc(%esp)$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	f0 $/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	f0 $/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	c7 44 24 04 31 03 00 	movl   $0x331,0x4(%esp)$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	00 $/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	e8 59 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	89 f0                	mov    %esi,%eax$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019f2	obj/kern/kernel.asm	/^f01019f2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	89 c2                	mov    %eax,%edx$/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	72 20                	jb     f0101a22 <mem_init+0x5e8>$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	f0 $/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	00 $/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	e8 1e e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	74 24                	je     f0101a57 <mem_init+0x61d>$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	c7 44 24 0c 69 80 10 	movl   $0xf0108069,0xc(%esp)$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	f0 $/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	f0 $/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	c7 44 24 04 34 03 00 	movl   $0x334,0x4(%esp)$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	00 $/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	e8 e9 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	75 d0                	jne    f0101a2e <mem_init+0x5f4>$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	a3 40 42 2b f0       	mov    %eax,0xf02b4240$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	e8 98 f6 ff ff       	call   f0101106 <page_free>$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	e8 90 f6 ff ff       	call   f0101106 <page_free>$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	e8 85 f6 ff ff       	call   f0101106 <page_free>$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	a1 40 42 2b f0       	mov    0xf02b4240,%eax$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	eb 05                	jmp    f0101a8d <mem_init+0x653>$/;"	l
f0101a88	obj/kern/kernel.asm	/^f0101a88:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	8b 00                	mov    (%eax),%eax$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	85 c0                	test   %eax,%eax$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	75 f7                	jne    f0101a88 <mem_init+0x64e>$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	85 db                	test   %ebx,%ebx$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	74 24                	je     f0101ab9 <mem_init+0x67f>$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	c7 44 24 0c 73 80 10 	movl   $0xf0108073,0xc(%esp)$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	f0 $/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	f0 $/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	c7 44 24 04 41 03 00 	movl   $0x341,0x4(%esp)$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	00 $/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	e8 87 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	c7 04 24 08 83 10 f0 	movl   $0xf0108308,(%esp)$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	e8 e9 25 00 00       	call   f01040ae <cprintf>$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101acc	obj/kern/kernel.asm	/^f0101acc:	e8 a4 f5 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	85 c0                	test   %eax,%eax$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	75 24                	jne    f0101afc <mem_init+0x6c2>$/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	c7 44 24 0c 81 7f 10 	movl   $0xf0107f81,0xc(%esp)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	f0 $/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	f0 $/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	00 $/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	e8 44 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	e8 6d f5 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	89 c7                	mov    %eax,%edi$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	85 c0                	test   %eax,%eax$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	75 24                	jne    f0101b32 <mem_init+0x6f8>$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	c7 44 24 0c 97 7f 10 	movl   $0xf0107f97,0xc(%esp)$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	f0 $/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	f0 $/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	00 $/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	e8 0e e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	e8 37 f5 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	85 c0                	test   %eax,%eax$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	75 24                	jne    f0101b68 <mem_init+0x72e>$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	c7 44 24 0c ad 7f 10 	movl   $0xf0107fad,0xc(%esp)$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	f0 $/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	f0 $/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	00 $/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	e8 d8 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	39 7d d4             	cmp    %edi,-0x2c(%ebp)$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	75 24                	jne    f0101b91 <mem_init+0x757>$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	c7 44 24 0c c3 7f 10 	movl   $0xf0107fc3,0xc(%esp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	f0 $/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	f0 $/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	c7 44 24 04 ac 03 00 	movl   $0x3ac,0x4(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	00 $/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	e8 af e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	39 c7                	cmp    %eax,%edi$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	74 05                	je     f0101b9a <mem_init+0x760>$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	75 24                	jne    f0101bbe <mem_init+0x784>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	c7 44 24 0c e8 82 10 	movl   $0xf01082e8,0xc(%esp)$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	f0 $/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	f0 $/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	00 $/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	e8 82 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	a1 40 42 2b f0       	mov    0xf02b4240,%eax$/;"	l
f0101bc3	obj/kern/kernel.asm	/^f0101bc3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	c7 05 40 42 2b f0 00 	movl   $0x0,0xf02b4240$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	00 00 00 $/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	e8 99 f4 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	85 c0                	test   %eax,%eax$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	74 24                	je     f0101c04 <mem_init+0x7ca>$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	c7 44 24 0c 2c 80 10 	movl   $0xf010802c,0xc(%esp)$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	f0 $/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	f0 $/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	00 $/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	e8 3c e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	00 $/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	e8 ed f5 ff ff       	call   f010120d <page_lookup>$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	85 c0                	test   %eax,%eax$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	74 24                	je     f0101c48 <mem_init+0x80e>$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	c7 44 24 0c 28 83 10 	movl   $0xf0108328,0xc(%esp)$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	f0 $/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	f0 $/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	00 $/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	e8 f8 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	00 $/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	00 $/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	e8 d2 f6 ff ff       	call   f010133b <page_insert>$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	85 c0                	test   %eax,%eax$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	78 24                	js     f0101c91 <mem_init+0x857>$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	c7 44 24 0c 60 83 10 	movl   $0xf0108360,0xc(%esp)$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	f0 $/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	f0 $/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	00 $/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	e8 af e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	e8 6a f4 ff ff       	call   f0101106 <page_free>$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101ca3	obj/kern/kernel.asm	/^f0101ca3:	00 $/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	00 $/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	e8 7e f6 ff ff       	call   f010133b <page_insert>$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	85 c0                	test   %eax,%eax$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	74 24                	je     f0101ce5 <mem_init+0x8ab>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	c7 44 24 0c 90 83 10 	movl   $0xf0108390,0xc(%esp)$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	f0 $/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	f0 $/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	00 $/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	e8 5b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	8b 35 98 4e 2b f0    	mov    0xf02b4e98,%esi$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	a1 9c 4e 2b f0       	mov    0xf02b4e9c,%eax$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	8b 16                	mov    (%esi),%edx$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	29 c1                	sub    %eax,%ecx$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	89 c8                	mov    %ecx,%eax$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	39 c2                	cmp    %eax,%edx$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	74 24                	je     f0101d30 <mem_init+0x8f6>$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	c7 44 24 0c c0 83 10 	movl   $0xf01083c0,0xc(%esp)$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	f0 $/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	f0 $/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	c7 44 24 04 bf 03 00 	movl   $0x3bf,0x4(%esp)$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	00 $/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	e8 10 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	89 f0                	mov    %esi,%eax$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	e8 8a ee ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	89 fa                	mov    %edi,%edx$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	2b 55 c8             	sub    -0x38(%ebp),%edx$/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	74 24                	je     f0101d6f <mem_init+0x935>$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	c7 44 24 0c e8 83 10 	movl   $0xf01083e8,0xc(%esp)$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	f0 $/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	f0 $/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	00 $/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	e8 d1 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	74 24                	je     f0101d9a <mem_init+0x960>$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	c7 44 24 0c 7e 80 10 	movl   $0xf010807e,0xc(%esp)$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	f0 $/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	f0 $/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	00 $/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	e8 a6 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	74 24                	je     f0101dc8 <mem_init+0x98e>$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	c7 44 24 0c 8f 80 10 	movl   $0xf010808f,0xc(%esp)$/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	f0 $/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	f0 $/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	00 $/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	e8 78 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	00 $/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	00 $/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	e8 57 f5 ff ff       	call   f010133b <page_insert>$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	85 c0                	test   %eax,%eax$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	74 24                	je     f0101e0c <mem_init+0x9d2>$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	c7 44 24 0c 18 84 10 	movl   $0xf0108418,0xc(%esp)$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	f0 $/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	f0 $/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	00 $/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	e8 34 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	e8 ab ed ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101e1b	obj/kern/kernel.asm	/^f0101e1b:	89 da                	mov    %ebx,%edx$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	74 24                	je     f0101e51 <mem_init+0xa17>$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	c7 44 24 0c 54 84 10 	movl   $0xf0108454,0xc(%esp)$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	f0 $/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	f0 $/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	00 $/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	e8 ef e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	74 24                	je     f0101e7c <mem_init+0xa42>$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	c7 44 24 0c a0 80 10 	movl   $0xf01080a0,0xc(%esp)$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	f0 $/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	f0 $/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	00 $/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	e8 c4 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	e8 ed f1 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	85 c0                	test   %eax,%eax$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	74 24                	je     f0101eb0 <mem_init+0xa76>$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c7 44 24 0c 2c 80 10 	movl   $0xf010802c,0xc(%esp)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	f0 $/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	f0 $/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	00 $/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	e8 90 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	00 $/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	00 $/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	e8 6a f4 ff ff       	call   f010133b <page_insert>$/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	85 c0                	test   %eax,%eax$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	74 24                	je     f0101ef9 <mem_init+0xabf>$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	c7 44 24 0c 18 84 10 	movl   $0xf0108418,0xc(%esp)$/;"	l
f0101edc	obj/kern/kernel.asm	/^f0101edc:	f0 $/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	f0 $/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	00 $/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	e8 47 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	e8 be ec ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	89 da                	mov    %ebx,%edx$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	74 24                	je     f0101f3e <mem_init+0xb04>$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	c7 44 24 0c 54 84 10 	movl   $0xf0108454,0xc(%esp)$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	f0 $/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	f0 $/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	00 $/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	e8 02 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	74 24                	je     f0101f69 <mem_init+0xb2f>$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	c7 44 24 0c a0 80 10 	movl   $0xf01080a0,0xc(%esp)$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	f0 $/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	f0 $/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	00 $/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	e8 d7 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	e8 00 f1 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	85 c0                	test   %eax,%eax$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	74 24                	je     f0101f9d <mem_init+0xb63>$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	c7 44 24 0c 2c 80 10 	movl   $0xf010802c,0xc(%esp)$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	f0 $/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	f0 $/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	00 $/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	e8 a3 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	8b 15 98 4e 2b f0    	mov    0xf02b4e98,%edx$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	8b 02                	mov    (%edx),%eax$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	89 c1                	mov    %eax,%ecx$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	3b 0d 94 4e 2b f0    	cmp    0xf02b4e94,%ecx$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	72 20                	jb     f0101fd7 <mem_init+0xb9d>$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0101fc2	obj/kern/kernel.asm	/^f0101fc2:	f0 $/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	00 $/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	e8 69 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd7	obj/kern/kernel.asm	/^f0101fd7:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	00 $/;"	l
f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	00 $/;"	l
f0101fef	obj/kern/kernel.asm	/^f0101fef:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	e8 76 f1 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	39 d0                	cmp    %edx,%eax$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	74 24                	je     f0102025 <mem_init+0xbeb>$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	c7 44 24 0c 84 84 10 	movl   $0xf0108484,0xc(%esp)$/;"	l
f0102008	obj/kern/kernel.asm	/^f0102008:	f0 $/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102010	obj/kern/kernel.asm	/^f0102010:	f0 $/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	00 $/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	e8 1b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	00 $/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	00 $/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	e8 f5 f2 ff ff       	call   f010133b <page_insert>$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	85 c0                	test   %eax,%eax$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	74 24                	je     f010206e <mem_init+0xc34>$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	c7 44 24 0c c4 84 10 	movl   $0xf01084c4,0xc(%esp)$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	f0 $/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	f0 $/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	00 $/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	e8 d2 df ff ff       	call   f0100040 <_panic>$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	8b 35 98 4e 2b f0    	mov    0xf02b4e98,%esi$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	89 f0                	mov    %esi,%eax$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	e8 46 eb ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	89 da                	mov    %ebx,%edx$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f0102088	obj/kern/kernel.asm	/^f0102088:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	39 d0                	cmp    %edx,%eax$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	74 24                	je     f01020b6 <mem_init+0xc7c>$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	c7 44 24 0c 54 84 10 	movl   $0xf0108454,0xc(%esp)$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	f0 $/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	f0 $/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	00 $/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	e8 8a df ff ff       	call   f0100040 <_panic>$/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	74 24                	je     f01020e1 <mem_init+0xca7>$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	c7 44 24 0c a0 80 10 	movl   $0xf01080a0,0xc(%esp)$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	f0 $/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	f0 $/;"	l
f01020cd	obj/kern/kernel.asm	/^f01020cd:	c7 44 24 04 dc 03 00 	movl   $0x3dc,0x4(%esp)$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	00 $/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01020dc	obj/kern/kernel.asm	/^f01020dc:	e8 5f df ff ff       	call   f0100040 <_panic>$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	00 $/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01020f0	obj/kern/kernel.asm	/^f01020f0:	00 $/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	e8 74 f0 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	75 24                	jne    f0102122 <mem_init+0xce8>$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	c7 44 24 0c 04 85 10 	movl   $0xf0108504,0xc(%esp)$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	f0 $/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	f0 $/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	00 $/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	e8 1e df ff ff       	call   f0100040 <_panic>$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	75 24                	jne    f0102150 <mem_init+0xd16>$/;"	l
f010212c	obj/kern/kernel.asm	/^f010212c:	c7 44 24 0c b1 80 10 	movl   $0xf01080b1,0xc(%esp)$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	f0 $/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	f0 $/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	00 $/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	e8 f0 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	00 $/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	00 $/;"	l
f0102160	obj/kern/kernel.asm	/^f0102160:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	e8 cf f1 ff ff       	call   f010133b <page_insert>$/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	85 c0                	test   %eax,%eax$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	74 24                	je     f0102194 <mem_init+0xd5a>$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	c7 44 24 0c 18 84 10 	movl   $0xf0108418,0xc(%esp)$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	f0 $/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	f0 $/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	c7 44 24 04 e1 03 00 	movl   $0x3e1,0x4(%esp)$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	00 $/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	e8 ac de ff ff       	call   f0100040 <_panic>$/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	00 $/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	00 $/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01021a9	obj/kern/kernel.asm	/^f01021a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	e8 bc ef ff ff       	call   f010116d <pgdir_walk>$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	75 24                	jne    f01021da <mem_init+0xda0>$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	c7 44 24 0c 38 85 10 	movl   $0xf0108538,0xc(%esp)$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	f0 $/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	f0 $/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	00 $/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01021d5	obj/kern/kernel.asm	/^f01021d5:	e8 66 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	00 $/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	00 $/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	e8 76 ef ff ff       	call   f010116d <pgdir_walk>$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	74 24                	je     f0102220 <mem_init+0xde6>$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	c7 44 24 0c 6c 85 10 	movl   $0xf010856c,0xc(%esp)$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	f0 $/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010220b	obj/kern/kernel.asm	/^f010220b:	f0 $/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	00 $/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	e8 20 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	00 $/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	00 $/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102233	obj/kern/kernel.asm	/^f0102233:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	e8 f7 f0 ff ff       	call   f010133b <page_insert>$/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	85 c0                	test   %eax,%eax$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	78 24                	js     f010226c <mem_init+0xe32>$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	c7 44 24 0c a4 85 10 	movl   $0xf01085a4,0xc(%esp)$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	f0 $/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	f0 $/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	00 $/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	e8 d4 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	00 $/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	00 $/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	e8 ae f0 ff ff       	call   f010133b <page_insert>$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	85 c0                	test   %eax,%eax$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	74 24                	je     f01022b5 <mem_init+0xe7b>$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	c7 44 24 0c dc 85 10 	movl   $0xf01085dc,0xc(%esp)$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	f0 $/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	f0 $/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	00 $/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	e8 8b dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	00 $/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	00 $/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	e8 9b ee ff ff       	call   f010116d <pgdir_walk>$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	74 24                	je     f01022fb <mem_init+0xec1>$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	c7 44 24 0c 6c 85 10 	movl   $0xf010856c,0xc(%esp)$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	f0 $/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	f0 $/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	00 $/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	e8 45 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	e8 b9 e8 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	89 c6                	mov    %eax,%esi$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	89 f8                	mov    %edi,%eax$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	39 c6                	cmp    %eax,%esi$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	74 24                	je     f0102345 <mem_init+0xf0b>$/;"	l
f0102321	obj/kern/kernel.asm	/^f0102321:	c7 44 24 0c 18 86 10 	movl   $0xf0108618,0xc(%esp)$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	f0 $/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	f0 $/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	00 $/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	e8 fb dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010234a	obj/kern/kernel.asm	/^f010234a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	e8 74 e8 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	39 c6                	cmp    %eax,%esi$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	74 24                	je     f010237a <mem_init+0xf40>$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	c7 44 24 0c 44 86 10 	movl   $0xf0108644,0xc(%esp)$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	f0 $/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	f0 $/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	00 $/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	e8 c6 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	74 24                	je     f01023a5 <mem_init+0xf6b>$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	c7 44 24 0c c7 80 10 	movl   $0xf01080c7,0xc(%esp)$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	f0 $/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	f0 $/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	00 $/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	e8 9b dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	74 24                	je     f01023d0 <mem_init+0xf96>$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	c7 44 24 0c d8 80 10 	movl   $0xf01080d8,0xc(%esp)$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	f0 $/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	f0 $/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	00 $/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	e8 70 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	e8 99 ec ff ff       	call   f0101075 <page_alloc>$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	85 c0                	test   %eax,%eax$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	74 04                	je     f01023e4 <mem_init+0xfaa>$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	74 24                	je     f0102408 <mem_init+0xfce>$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	c7 44 24 0c 74 86 10 	movl   $0xf0108674,0xc(%esp)$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	f0 $/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	f0 $/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	00 $/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	e8 38 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	00 $/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	e8 9d ee ff ff       	call   f01012ba <page_remove>$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	8b 35 98 4e 2b f0    	mov    0xf02b4e98,%esi$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	89 f0                	mov    %esi,%eax$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	e8 97 e7 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	74 24                	je     f0102458 <mem_init+0x101e>$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	c7 44 24 0c 98 86 10 	movl   $0xf0108698,0xc(%esp)$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	f0 $/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	f0 $/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	00 $/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	e8 e8 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	89 f0                	mov    %esi,%eax$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	e8 62 e7 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	89 fa                	mov    %edi,%edx$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	39 d0                	cmp    %edx,%eax$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	74 24                	je     f010249a <mem_init+0x1060>$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	c7 44 24 0c 44 86 10 	movl   $0xf0108644,0xc(%esp)$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	f0 $/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	f0 $/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	c7 44 24 04 f9 03 00 	movl   $0x3f9,0x4(%esp)$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	00 $/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	e8 a6 db ff ff       	call   f0100040 <_panic>$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	74 24                	je     f01024c5 <mem_init+0x108b>$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	c7 44 24 0c 7e 80 10 	movl   $0xf010807e,0xc(%esp)$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	f0 $/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	f0 $/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	00 $/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	e8 7b db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	74 24                	je     f01024f0 <mem_init+0x10b6>$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	c7 44 24 0c d8 80 10 	movl   $0xf01080d8,0xc(%esp)$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	f0 $/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	f0 $/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	c7 44 24 04 fb 03 00 	movl   $0x3fb,0x4(%esp)$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	00 $/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	e8 50 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	00 $/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	00 $/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	e8 2f ee ff ff       	call   f010133b <page_insert>$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	85 c0                	test   %eax,%eax$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	74 24                	je     f0102534 <mem_init+0x10fa>$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	c7 44 24 0c bc 86 10 	movl   $0xf01086bc,0xc(%esp)$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	f0 $/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	f0 $/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	c7 44 24 04 fe 03 00 	movl   $0x3fe,0x4(%esp)$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	00 $/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	e8 0c db ff ff       	call   f0100040 <_panic>$/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	75 24                	jne    f010255f <mem_init+0x1125>$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	c7 44 24 0c e9 80 10 	movl   $0xf01080e9,0xc(%esp)$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	f0 $/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	f0 $/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	00 $/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	e8 e1 da ff ff       	call   f0100040 <_panic>$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	83 3f 00             	cmpl   $0x0,(%edi)$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	74 24                	je     f0102588 <mem_init+0x114e>$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	c7 44 24 0c f5 80 10 	movl   $0xf01080f5,0xc(%esp)$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	f0 $/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102573	obj/kern/kernel.asm	/^f0102573:	f0 $/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	00 $/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	e8 b8 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	00 $/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	e8 1d ed ff ff       	call   f01012ba <page_remove>$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	8b 35 98 4e 2b f0    	mov    0xf02b4e98,%esi$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	89 f0                	mov    %esi,%eax$/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	e8 17 e6 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	74 24                	je     f01025d8 <mem_init+0x119e>$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	c7 44 24 0c 98 86 10 	movl   $0xf0108698,0xc(%esp)$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	f0 $/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	f0 $/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	00 $/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	e8 68 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	89 f0                	mov    %esi,%eax$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	e8 e2 e5 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	74 24                	je     f010260d <mem_init+0x11d3>$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	c7 44 24 0c f4 86 10 	movl   $0xf01086f4,0xc(%esp)$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	f0 $/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	f0 $/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	00 $/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	e8 33 da ff ff       	call   f0100040 <_panic>$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	74 24                	je     f0102638 <mem_init+0x11fe>$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	c7 44 24 0c 0a 81 10 	movl   $0xf010810a,0xc(%esp)$/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	f0 $/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	f0 $/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f010262b	obj/kern/kernel.asm	/^f010262b:	00 $/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	e8 08 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	74 24                	je     f0102663 <mem_init+0x1229>$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	c7 44 24 0c d8 80 10 	movl   $0xf01080d8,0xc(%esp)$/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	f0 $/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010264e	obj/kern/kernel.asm	/^f010264e:	f0 $/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	00 $/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	e8 dd d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010266a	obj/kern/kernel.asm	/^f010266a:	e8 06 ea ff ff       	call   f0101075 <page_alloc>$/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	85 c0                	test   %eax,%eax$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	74 04                	je     f0102677 <mem_init+0x123d>$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	39 c7                	cmp    %eax,%edi$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	74 24                	je     f010269b <mem_init+0x1261>$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	c7 44 24 0c 1c 87 10 	movl   $0xf010871c,0xc(%esp)$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	f0 $/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	f0 $/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	00 $/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	e8 a5 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	e8 ce e9 ff ff       	call   f0101075 <page_alloc>$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	85 c0                	test   %eax,%eax$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	74 24                	je     f01026cf <mem_init+0x1295>$/;"	l
f01026ab	obj/kern/kernel.asm	/^f01026ab:	c7 44 24 0c 2c 80 10 	movl   $0xf010802c,0xc(%esp)$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	f0 $/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	f0 $/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	00 $/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	e8 71 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	8b 08                	mov    (%eax),%ecx$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	39 d1                	cmp    %edx,%ecx$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	74 24                	je     f0102713 <mem_init+0x12d9>$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	c7 44 24 0c c0 83 10 	movl   $0xf01083c0,0xc(%esp)$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	f0 $/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01026fe	obj/kern/kernel.asm	/^f01026fe:	f0 $/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	00 $/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	e8 2d d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	74 24                	je     f0102747 <mem_init+0x130d>$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	c7 44 24 0c 8f 80 10 	movl   $0xf010808f,0xc(%esp)$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	f0 $/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	f0 $/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	c7 44 24 04 12 04 00 	movl   $0x412,0x4(%esp)$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	00 $/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	e8 f9 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102747	obj/kern/kernel.asm	/^f0102747:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	e8 ae e9 ff ff       	call   f0101106 <page_free>$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	00 $/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	00 $/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	e8 f8 e9 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102775	obj/kern/kernel.asm	/^f0102775:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	8b 0d 98 4e 2b f0    	mov    0xf02b4e98,%ecx$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0102784	obj/kern/kernel.asm	/^f0102784:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	8b 35 94 4e 2b f0    	mov    0xf02b4e94,%esi$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	89 d0                	mov    %edx,%eax$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	39 f0                	cmp    %esi,%eax$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	72 20                	jb     f01027b9 <mem_init+0x137f>$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010279d	obj/kern/kernel.asm	/^f010279d:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	f0 $/;"	l
f01027a5	obj/kern/kernel.asm	/^f01027a5:	c7 44 24 04 19 04 00 	movl   $0x419,0x4(%esp)$/;"	l
f01027ac	obj/kern/kernel.asm	/^f01027ac:	00 $/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	e8 87 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	39 55 c8             	cmp    %edx,-0x38(%ebp)$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	74 24                	je     f01027e8 <mem_init+0x13ae>$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	c7 44 24 0c 1b 81 10 	movl   $0xf010811b,0xc(%esp)$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	f0 $/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	f0 $/;"	l
f01027d4	obj/kern/kernel.asm	/^f01027d4:	c7 44 24 04 1a 04 00 	movl   $0x41a,0x4(%esp)$/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	00 $/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	e8 58 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	89 c2                	mov    %eax,%edx$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	39 d6                	cmp    %edx,%esi$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	77 20                	ja     f010282d <mem_init+0x13f3>$/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	f0 $/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102820	obj/kern/kernel.asm	/^f0102820:	00 $/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	e8 13 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	00 $/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	00 $/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	e8 fd 38 00 00       	call   f0106147 <memset>$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010284d	obj/kern/kernel.asm	/^f010284d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102850	obj/kern/kernel.asm	/^f0102850:	e8 b1 e8 ff ff       	call   f0101106 <page_free>$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010285c	obj/kern/kernel.asm	/^f010285c:	00 $/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102864	obj/kern/kernel.asm	/^f0102864:	00 $/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	e8 fb e8 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	89 f2                	mov    %esi,%edx$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	89 d0                	mov    %edx,%eax$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f010288b	obj/kern/kernel.asm	/^f010288b:	72 20                	jb     f01028ad <mem_init+0x1473>$/;"	l
f010288d	obj/kern/kernel.asm	/^f010288d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	f0 $/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	00 $/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f01028a8	obj/kern/kernel.asm	/^f01028a8:	e8 93 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ad	obj/kern/kernel.asm	/^f01028ad:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	74 24                	je     f01028e5 <mem_init+0x14ab>$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	c7 44 24 0c 33 81 10 	movl   $0xf0108133,0xc(%esp)$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	f0 $/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	f0 $/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	c7 44 24 04 24 04 00 	movl   $0x424,0x4(%esp)$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	00 $/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	e8 5b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	83 c0 04             	add    $0x4,%eax$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	39 d0                	cmp    %edx,%eax$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	75 d0                	jne    f01028bc <mem_init+0x1482>$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	89 0d 40 42 2b f0    	mov    %ecx,0xf02b4240$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	e8 f5 e7 ff ff       	call   f0101106 <page_free>$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	e8 ed e7 ff ff       	call   f0101106 <page_free>$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	e8 e5 e7 ff ff       	call   f0101106 <page_free>$/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	00 $/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	e8 75 ea ff ff       	call   f01013aa <mmio_map_region>$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	89 c3                	mov    %eax,%ebx$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	00 $/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	e8 5f ea ff ff       	call   f01013aa <mmio_map_region>$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	89 c6                	mov    %eax,%esi$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102958	obj/kern/kernel.asm	/^f0102958:	77 08                	ja     f0102962 <mem_init+0x1528>$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	77 24                	ja     f0102986 <mem_init+0x154c>$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	c7 44 24 0c 40 87 10 	movl   $0xf0108740,0xc(%esp)$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	f0 $/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	f0 $/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	c7 44 24 04 34 04 00 	movl   $0x434,0x4(%esp)$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	00 $/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	e8 ba d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	77 08                	ja     f010299c <mem_init+0x1562>$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	77 24                	ja     f01029c0 <mem_init+0x1586>$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	c7 44 24 0c 68 87 10 	movl   $0xf0108768,0xc(%esp)$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	f0 $/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01029ab	obj/kern/kernel.asm	/^f01029ab:	f0 $/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	c7 44 24 04 35 04 00 	movl   $0x435,0x4(%esp)$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	00 $/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	e8 80 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	89 da                	mov    %ebx,%edx$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	09 f2                	or     %esi,%edx$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	74 24                	je     f01029f0 <mem_init+0x15b6>$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	c7 44 24 0c 90 87 10 	movl   $0xf0108790,0xc(%esp)$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	f0 $/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	f0 $/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	c7 44 24 04 37 04 00 	movl   $0x437,0x4(%esp)$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	00 $/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01029eb	obj/kern/kernel.asm	/^f01029eb:	e8 50 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	39 c6                	cmp    %eax,%esi$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	73 24                	jae    f0102a18 <mem_init+0x15de>$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	c7 44 24 0c 4a 81 10 	movl   $0xf010814a,0xc(%esp)$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	f0 $/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	f0 $/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	c7 44 24 04 39 04 00 	movl   $0x439,0x4(%esp)$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	00 $/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	e8 28 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	8b 3d 98 4e 2b f0    	mov    0xf02b4e98,%edi$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	89 da                	mov    %ebx,%edx$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	89 f8                	mov    %edi,%eax$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	e8 9f e1 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	85 c0                	test   %eax,%eax$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	74 24                	je     f0102a4f <mem_init+0x1615>$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	c7 44 24 0c b8 87 10 	movl   $0xf01087b8,0xc(%esp)$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	f0 $/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	f0 $/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	c7 44 24 04 3b 04 00 	movl   $0x43b,0x4(%esp)$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	00 $/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	e8 f1 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102a58	obj/kern/kernel.asm	/^f0102a58:	89 c2                	mov    %eax,%edx$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	89 f8                	mov    %edi,%eax$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	e8 65 e1 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	74 24                	je     f0102a8c <mem_init+0x1652>$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	c7 44 24 0c dc 87 10 	movl   $0xf01087dc,0xc(%esp)$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	f0 $/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	f0 $/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	c7 44 24 04 3c 04 00 	movl   $0x43c,0x4(%esp)$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	00 $/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	e8 b4 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	89 f2                	mov    %esi,%edx$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	89 f8                	mov    %edi,%eax$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	e8 31 e1 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	85 c0                	test   %eax,%eax$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	74 24                	je     f0102abd <mem_init+0x1683>$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	c7 44 24 0c 0c 88 10 	movl   $0xf010880c,0xc(%esp)$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	f0 $/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	f0 $/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	c7 44 24 04 3d 04 00 	movl   $0x43d,0x4(%esp)$/;"	l
f0102ab0	obj/kern/kernel.asm	/^f0102ab0:	00 $/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	e8 83 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	89 f8                	mov    %edi,%eax$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	e8 fc e0 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	74 24                	je     f0102af3 <mem_init+0x16b9>$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	c7 44 24 0c 30 88 10 	movl   $0xf0108830,0xc(%esp)$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	f0 $/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	f0 $/;"	l
f0102adf	obj/kern/kernel.asm	/^f0102adf:	c7 44 24 04 3e 04 00 	movl   $0x43e,0x4(%esp)$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	00 $/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	e8 4d d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	00 $/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	e8 66 e6 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	75 24                	jne    f0102b30 <mem_init+0x16f6>$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	c7 44 24 0c 5c 88 10 	movl   $0xf010885c,0xc(%esp)$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	f0 $/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	f0 $/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	00 $/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	e8 10 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	00 $/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	e8 24 e6 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	74 24                	je     f0102b72 <mem_init+0x1738>$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	c7 44 24 0c a0 88 10 	movl   $0xf01088a0,0xc(%esp)$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	f0 $/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	f0 $/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	00 $/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	e8 ce d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	00 $/;"	l
f0102b7a	obj/kern/kernel.asm	/^f0102b7a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	e8 e2 e5 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	00 $/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	e8 c0 e5 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	00 $/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	e8 a1 e5 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	c7 04 24 5c 81 10 f0 	movl   $0xf010815c,(%esp)$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	e8 d0 14 00 00       	call   f01040ae <cprintf>$/;"	l
f0102bde	obj/kern/kernel.asm	/^f0102bde:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	a1 9c 4e 2b f0       	mov    0xf02b4e9c,%eax$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102bf6	obj/kern/kernel.asm	/^f0102bf6:	77 20                	ja     f0102c18 <mem_init+0x17de>$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	f0 $/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	c7 44 24 04 c1 00 00 	movl   $0xc1,0x4(%esp)$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	00 $/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	e8 28 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	8d 8b 00 00 00 ef    	lea    -0x11000000(%ebx),%ecx$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	8d 94 18 00 00 00 10 	lea    0x10000000(%eax,%ebx,1),%edx$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	72 1c                	jb     f0102c4c <mem_init+0x1812>$/;"	l
f0102c30	obj/kern/kernel.asm	/^f0102c30:	c7 44 24 08 6c 82 10 	movl   $0xf010826c,0x8(%esp)$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	f0 $/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	00 $/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	e8 f4 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	00 $/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	e8 cf e6 ff ff       	call   f010133b <page_insert>$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	39 de                	cmp    %ebx,%esi$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	0f 83 72 ff ff ff    	jae    f0102bec <mem_init+0x17b2>$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	a1 48 42 2b f0       	mov    0xf02b4248,%eax$/;"	l
f0102c84	obj/kern/kernel.asm	/^f0102c84:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	77 20                	ja     f0102cab <mem_init+0x1871>$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0102c96	obj/kern/kernel.asm	/^f0102c96:	f0 $/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e:	00 $/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	e8 95 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	8d 93 00 00 c0 ee    	lea    -0x11400000(%ebx),%edx$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	8d 84 18 00 00 00 10 	lea    0x10000000(%eax,%ebx,1),%eax$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	72 1c                	jb     f0102cdf <mem_init+0x18a5>$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	c7 44 24 08 6c 82 10 	movl   $0xf010826c,0x8(%esp)$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	f0 $/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	00 $/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	e8 61 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	00 $/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	8b 15 9c 4e 2b f0    	mov    0xf02b4e9c,%edx$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	e8 36 e6 ff ff       	call   f010133b <page_insert>$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	81 fb 00 00 02 00    	cmp    $0x20000,%ebx$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	0f 85 68 ff ff ff    	jne    f0102c7f <mem_init+0x1845>$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	8b 35 98 4e 2b f0    	mov    0xf02b4e98,%esi$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	00 $/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	8d 83 00 00 00 f0    	lea    -0x10000000(%ebx),%eax$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	e8 31 e4 ff ff       	call   f010116d <pgdir_walk>$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	89 da                	mov    %ebx,%edx$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	83 ca 03             	or     $0x3,%edx$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	89 10                	mov    %edx,(%eax)$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	81 fb 00 00 00 10    	cmp    $0x10000000,%ebx$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	75 d1                	jne    f0102d22 <mem_init+0x18e8>$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	b8 00 60 2b f0       	mov    $0xf02b6000,%eax$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	f7 d8                	neg    %eax$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	c7 45 d4 00 60 2b f0 	movl   $0xf02b6000,-0x2c(%ebp)$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	77 20                	ja     f0102d8d <mem_init+0x1953>$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	f0 $/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	00 $/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	e8 b3 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	8d b8 00 80 00 10    	lea    0x10008000(%eax),%edi$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	8d b0 00 80 ff df    	lea    -0x20008000(%eax),%esi$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	89 d8                	mov    %ebx,%eax$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	72 1c                	jb     f0102dd1 <mem_init+0x1997>$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	c7 44 24 08 6c 82 10 	movl   $0xf010826c,0x8(%esp)$/;"	l
f0102dbc	obj/kern/kernel.asm	/^f0102dbc:	f0 $/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	00 $/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	e8 6f d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102dd8	obj/kern/kernel.asm	/^f0102dd8:	00 $/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	8b 15 9c 4e 2b f0    	mov    0xf02b4e9c,%edx$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	e8 44 e5 ff ff       	call   f010133b <page_insert>$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	39 df                	cmp    %ebx,%edi$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	75 a4                	jne    f0102da5 <mem_init+0x196b>$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	81 45 d4 00 80 00 00 	addl   $0x8000,-0x2c(%ebp)$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	81 6d d0 00 80 01 00 	subl   $0x18000,-0x30(%ebp)$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	81 7d d4 00 60 2f f0 	cmpl   $0xf02f6000,-0x2c(%ebp)$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	0f 85 46 ff ff ff    	jne    f0102d62 <mem_init+0x1928>$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	8b 3d 98 4e 2b f0    	mov    0xf02b4e98,%edi$/;"	l
f0102e22	obj/kern/kernel.asm	/^f0102e22:	a1 94 4e 2b f0       	mov    0xf02b4e94,%eax$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102e31	obj/kern/kernel.asm	/^f0102e31:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	a1 9c 4e 2b f0       	mov    0xf02b4e9c,%eax$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	8d b0 00 00 00 10    	lea    0x10000000(%eax),%esi$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	eb 6a                	jmp    f0102ebb <mem_init+0x1a81>$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	89 f8                	mov    %edi,%eax$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	e8 68 dd ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	77 23                	ja     f0102e8a <mem_init+0x1a50>$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102e6a	obj/kern/kernel.asm	/^f0102e6a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	f0 $/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	c7 44 24 04 59 03 00 	movl   $0x359,0x4(%esp)$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	00 $/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	e8 b6 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	8d 14 33             	lea    (%ebx,%esi,1),%edx$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	39 d0                	cmp    %edx,%eax$/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	74 24                	je     f0102eb5 <mem_init+0x1a7b>$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	c7 44 24 0c d4 88 10 	movl   $0xf01088d4,0xc(%esp)$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	f0 $/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	f0 $/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	c7 44 24 04 59 03 00 	movl   $0x359,0x4(%esp)$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	00 $/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	e8 8b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	77 91                	ja     f0102e51 <mem_init+0x1a17>$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	8b 1d 48 42 2b f0    	mov    0xf02b4248,%ebx$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	89 de                	mov    %ebx,%esi$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	89 f8                	mov    %edi,%eax$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	e8 f2 dc ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	77 20                	ja     f0102efc <mem_init+0x1ac2>$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	f0 $/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	c7 44 24 04 5e 03 00 	movl   $0x35e,0x4(%esp)$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	00 $/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	e8 44 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102efc	obj/kern/kernel.asm	/^f0102efc:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	74 24                	je     f0102f32 <mem_init+0x1af8>$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	c7 44 24 0c 08 89 10 	movl   $0xf0108908,0xc(%esp)$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	f0 $/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	f0 $/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	c7 44 24 04 5e 03 00 	movl   $0x35e,0x4(%esp)$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	00 $/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	e8 0e d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	0f 85 54 06 00 00    	jne    f0103598 <mem_init+0x215e>$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	eb 3b                	jmp    f0102f8c <mem_init+0x1b52>$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	89 f8                	mov    %edi,%eax$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	e8 68 dc ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	74 24                	je     f0102f86 <mem_init+0x1b4c>$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	c7 44 24 0c 3c 89 10 	movl   $0xf010893c,0xc(%esp)$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	f0 $/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	f0 $/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	c7 44 24 04 62 03 00 	movl   $0x362,0x4(%esp)$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	00 $/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	e8 ba d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102f8e	obj/kern/kernel.asm	/^f0102f8e:	72 c1                	jb     f0102f51 <mem_init+0x1b17>$/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	c7 45 d0 00 60 2b f0 	movl   $0xf02b6000,-0x30(%ebp)$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	b8 00 60 2b f0       	mov    $0xf02b6000,%eax$/;"	l
f0102fa8	obj/kern/kernel.asm	/^f0102fa8:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	89 f2                	mov    %esi,%edx$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	89 f8                	mov    %edi,%eax$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	e8 04 dc ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0102fcb	obj/kern/kernel.asm	/^f0102fcb:	77 20                	ja     f0102fed <mem_init+0x1bb3>$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	f0 $/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	c7 44 24 04 6a 03 00 	movl   $0x36a,0x4(%esp)$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	00 $/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	e8 53 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	89 f3                	mov    %esi,%ebx$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	03 4d c4             	add    -0x3c(%ebp),%ecx$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	89 ce                	mov    %ecx,%esi$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	39 d0                	cmp    %edx,%eax$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	74 24                	je     f0103025 <mem_init+0x1beb>$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	c7 44 24 0c 64 89 10 	movl   $0xf0108964,0xc(%esp)$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	f0 $/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103010	obj/kern/kernel.asm	/^f0103010:	f0 $/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	c7 44 24 04 6a 03 00 	movl   $0x36a,0x4(%esp)$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	00 $/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	e8 1b d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	0f 85 56 05 00 00    	jne    f010358a <mem_init+0x2150>$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	8b 75 c8             	mov    -0x38(%ebp),%esi$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	89 da                	mov    %ebx,%edx$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	89 f8                	mov    %edi,%eax$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	e8 80 db ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	74 24                	je     f010306f <mem_init+0x1c35>$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	c7 44 24 0c ac 89 10 	movl   $0xf01089ac,0xc(%esp)$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	f0 $/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010305a	obj/kern/kernel.asm	/^f010305a:	f0 $/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	c7 44 24 04 6c 03 00 	movl   $0x36c,0x4(%esp)$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	00 $/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	e8 d1 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	39 de                	cmp    %ebx,%esi$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	75 c4                	jne    f010303d <mem_init+0x1c03>$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	81 45 cc 00 80 01 00 	addl   $0x18000,-0x34(%ebp)$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	0f 85 17 ff ff ff    	jne    f0102fb0 <mem_init+0x1b76>$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	e9 c2 00 00 00       	jmp    f0103165 <mem_init+0x1d2b>$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f01030ac	obj/kern/kernel.asm	/^f01030ac:	77 2e                	ja     f01030dc <mem_init+0x1ca2>$/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	0f 85 aa 00 00 00    	jne    f0103162 <mem_init+0x1d28>$/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	c7 44 24 0c 75 81 10 	movl   $0xf0108175,0xc(%esp)$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	f0 $/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	f0 $/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	c7 44 24 04 77 03 00 	movl   $0x377,0x4(%esp)$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	00 $/;"	l
f01030d0	obj/kern/kernel.asm	/^f01030d0:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	e8 64 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	76 55                	jbe    f0103138 <mem_init+0x1cfe>$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	75 24                	jne    f010310f <mem_init+0x1cd5>$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	c7 44 24 0c 75 81 10 	movl   $0xf0108175,0xc(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	f0 $/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	f0 $/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	c7 44 24 04 7b 03 00 	movl   $0x37b,0x4(%esp)$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	00 $/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	e8 31 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010310f	obj/kern/kernel.asm	/^f010310f:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	75 4e                	jne    f0103162 <mem_init+0x1d28>$/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	c7 44 24 0c 86 81 10 	movl   $0xf0108186,0xc(%esp)$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	f0 $/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	f0 $/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	c7 44 24 04 7c 03 00 	movl   $0x37c,0x4(%esp)$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	00 $/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	e8 08 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	74 24                	je     f0103162 <mem_init+0x1d28>$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	c7 44 24 0c 97 81 10 	movl   $0xf0108197,0xc(%esp)$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	f0 $/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	f0 $/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	c7 44 24 04 7e 03 00 	movl   $0x37e,0x4(%esp)$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	00 $/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	e8 de ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	0f 85 33 ff ff ff    	jne    f01030a3 <mem_init+0x1c69>$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	c7 04 24 d0 89 10 f0 	movl   $0xf01089d0,(%esp)$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	e8 32 0f 00 00       	call   f01040ae <cprintf>$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	77 20                	ja     f01031a8 <mem_init+0x1d6e>$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	f0 $/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	00 $/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	e8 98 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	e8 7b da ff ff       	call   f0100c35 <check_page_free_list>$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	e8 a1 de ff ff       	call   f0101075 <page_alloc>$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	89 c3                	mov    %eax,%ebx$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	85 c0                	test   %eax,%eax$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	75 24                	jne    f01031fe <mem_init+0x1dc4>$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	c7 44 24 0c 81 7f 10 	movl   $0xf0107f81,0xc(%esp)$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	f0 $/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	f0 $/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	c7 44 24 04 56 04 00 	movl   $0x456,0x4(%esp)$/;"	l
f01031f1	obj/kern/kernel.asm	/^f01031f1:	00 $/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01031f9	obj/kern/kernel.asm	/^f01031f9:	e8 42 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	e8 6b de ff ff       	call   f0101075 <page_alloc>$/;"	l
f010320a	obj/kern/kernel.asm	/^f010320a:	89 c7                	mov    %eax,%edi$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	85 c0                	test   %eax,%eax$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	75 24                	jne    f0103234 <mem_init+0x1dfa>$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	c7 44 24 0c 97 7f 10 	movl   $0xf0107f97,0xc(%esp)$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	f0 $/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	f0 $/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	c7 44 24 04 57 04 00 	movl   $0x457,0x4(%esp)$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	00 $/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	e8 0c ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	e8 35 de ff ff       	call   f0101075 <page_alloc>$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	89 c6                	mov    %eax,%esi$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	85 c0                	test   %eax,%eax$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	75 24                	jne    f010326a <mem_init+0x1e30>$/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	c7 44 24 0c ad 7f 10 	movl   $0xf0107fad,0xc(%esp)$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	f0 $/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	f0 $/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	c7 44 24 04 58 04 00 	movl   $0x458,0x4(%esp)$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	00 $/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	e8 d6 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	e8 94 de ff ff       	call   f0101106 <page_free>$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	89 f8                	mov    %edi,%eax$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010327d	obj/kern/kernel.asm	/^f010327d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	89 c2                	mov    %eax,%edx$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	72 20                	jb     f01032ad <mem_init+0x1e73>$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	f0 $/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	00 $/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f01032a8	obj/kern/kernel.asm	/^f01032a8:	e8 93 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	00 $/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	00 $/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	e8 7d 2e 00 00       	call   f0106147 <memset>$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	89 f0                	mov    %esi,%eax$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	89 c2                	mov    %eax,%edx$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	72 20                	jb     f0103305 <mem_init+0x1ecb>$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	f0 $/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	00 $/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	e8 3b cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	00 $/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	00 $/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	e8 25 2e 00 00       	call   f0106147 <memset>$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	00 $/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	00 $/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	e8 f8 df ff ff       	call   f010133b <page_insert>$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	74 24                	je     f010336e <mem_init+0x1f34>$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	c7 44 24 0c 7e 80 10 	movl   $0xf010807e,0xc(%esp)$/;"	l
f0103351	obj/kern/kernel.asm	/^f0103351:	f0 $/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103359	obj/kern/kernel.asm	/^f0103359:	f0 $/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	c7 44 24 04 5d 04 00 	movl   $0x45d,0x4(%esp)$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	00 $/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	e8 d2 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010336e	obj/kern/kernel.asm	/^f010336e:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	01 01 01 $/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	74 24                	je     f010339e <mem_init+0x1f64>$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	c7 44 24 0c f0 89 10 	movl   $0xf01089f0,0xc(%esp)$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	f0 $/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	f0 $/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	c7 44 24 04 5e 04 00 	movl   $0x45e,0x4(%esp)$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	00 $/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	e8 a2 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	00 $/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	00 $/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	e8 7c df ff ff       	call   f010133b <page_insert>$/;"	l
f01033bf	obj/kern/kernel.asm	/^f01033bf:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	02 02 02 $/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	74 24                	je     f01033ef <mem_init+0x1fb5>$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	c7 44 24 0c 14 8a 10 	movl   $0xf0108a14,0xc(%esp)$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	f0 $/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	f0 $/;"	l
f01033db	obj/kern/kernel.asm	/^f01033db:	c7 44 24 04 60 04 00 	movl   $0x460,0x4(%esp)$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	00 $/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	e8 51 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	74 24                	je     f010341a <mem_init+0x1fe0>$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	c7 44 24 0c a0 80 10 	movl   $0xf01080a0,0xc(%esp)$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	f0 $/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103405	obj/kern/kernel.asm	/^f0103405:	f0 $/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	c7 44 24 04 61 04 00 	movl   $0x461,0x4(%esp)$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	00 $/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	e8 26 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	74 24                	je     f0103445 <mem_init+0x200b>$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	c7 44 24 0c 0a 81 10 	movl   $0xf010810a,0xc(%esp)$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	f0 $/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	f0 $/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	c7 44 24 04 62 04 00 	movl   $0x462,0x4(%esp)$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	00 $/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	e8 fb cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	03 03 03 $/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	89 f0                	mov    %esi,%eax$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	89 c2                	mov    %eax,%edx$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	72 20                	jb     f010348a <mem_init+0x2050>$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	f0 $/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	00 $/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	e8 b6 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	03 03 03 $/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	74 24                	je     f01034ba <mem_init+0x2080>$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	c7 44 24 0c 38 8a 10 	movl   $0xf0108a38,0xc(%esp)$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	f0 $/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	f0 $/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	c7 44 24 04 64 04 00 	movl   $0x464,0x4(%esp)$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	00 $/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	e8 86 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	00 $/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	e8 eb dd ff ff       	call   f01012ba <page_remove>$/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	74 24                	je     f01034fa <mem_init+0x20c0>$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	c7 44 24 0c d8 80 10 	movl   $0xf01080d8,0xc(%esp)$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	f0 $/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	f0 $/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	c7 44 24 04 66 04 00 	movl   $0x466,0x4(%esp)$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	00 $/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	e8 46 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f01034ff	obj/kern/kernel.asm	/^f01034ff:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	89 da                	mov    %ebx,%edx$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	2b 15 9c 4e 2b f0    	sub    0xf02b4e9c,%edx$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	74 24                	je     f010353d <mem_init+0x2103>$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	c7 44 24 0c c0 83 10 	movl   $0xf01083c0,0xc(%esp)$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	f0 $/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	f0 $/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	c7 44 24 04 69 04 00 	movl   $0x469,0x4(%esp)$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	00 $/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	e8 03 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	74 24                	je     f010356e <mem_init+0x2134>$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	c7 44 24 0c 8f 80 10 	movl   $0xf010808f,0xc(%esp)$/;"	l
f0103551	obj/kern/kernel.asm	/^f0103551:	f0 $/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	f0 $/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	c7 44 24 04 6b 04 00 	movl   $0x46b,0x4(%esp)$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	00 $/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	c7 04 24 80 7e 10 f0 	movl   $0xf0107e80,(%esp)$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	e8 d2 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	e8 8a db ff ff       	call   f0101106 <page_free>$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	c7 04 24 64 8a 10 f0 	movl   $0xf0108a64,(%esp)$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	e8 26 0b 00 00       	call   f01040ae <cprintf>$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	eb 1c                	jmp    f01035a6 <mem_init+0x216c>$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	89 da                	mov    %ebx,%edx$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	89 f8                	mov    %edi,%eax$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	e8 33 d6 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	e9 62 fa ff ff       	jmp    f0102ffa <mem_init+0x1bc0>$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	89 da                	mov    %ebx,%edx$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	89 f8                	mov    %edi,%eax$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	e8 25 d6 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	e9 61 f9 ff ff       	jmp    f0102f07 <mem_init+0x1acd>$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	5b                   	pop    %ebx$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	5e                   	pop    %esi$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	5f                   	pop    %edi$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	5d                   	pop    %ebp$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	c3                   	ret    $/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae <user_mem_check>:$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	55                   	push   %ebp$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	89 e5                	mov    %esp,%ebp$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	57                   	push   %edi$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	56                   	push   %esi$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	53                   	push   %ebx$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	89 c3                	mov    %eax,%ebx$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	83 ce 01             	or     $0x1,%esi$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	eb 56                	jmp    f0103623 <user_mem_check+0x75>$/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	77 25                	ja     f01035fa <user_mem_check+0x4c>$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	e8 22 dc ff ff       	call   f010120d <page_lookup>$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	85 c0                	test   %eax,%eax$/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed:	74 0b                	je     f01035fa <user_mem_check+0x4c>$/;"	l
f01035ef	obj/kern/kernel.asm	/^f01035ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	89 f2                	mov    %esi,%edx$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	23 10                	and    (%eax),%edx$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	39 d6                	cmp    %edx,%esi$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	74 0d                	je     f0103607 <user_mem_check+0x59>$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	89 1d 3c 42 2b f0    	mov    %ebx,0xf02b423c$/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	eb 26                	jmp    f010362d <user_mem_check+0x7f>$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	74 0e                	je     f010361d <user_mem_check+0x6f>$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	81 c3 ff 0f 00 00    	add    $0xfff,%ebx$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	eb 06                	jmp    f0103623 <user_mem_check+0x75>$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	72 a5                	jb     f01035cd <user_mem_check+0x1f>$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	5b                   	pop    %ebx$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	5e                   	pop    %esi$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	5f                   	pop    %edi$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	5d                   	pop    %ebp$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	c3                   	ret    $/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635 <user_mem_assert>:$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	55                   	push   %ebp$/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	89 e5                	mov    %esp,%ebp$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	53                   	push   %ebx$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	e8 4f ff ff ff       	call   f01035ae <user_mem_check>$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	85 c0                	test   %eax,%eax$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	79 24                	jns    f0103687 <user_mem_assert+0x52>$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	a1 3c 42 2b f0       	mov    0xf02b423c,%eax$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	c7 04 24 90 8a 10 f0 	movl   $0xf0108a90,(%esp)$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	e8 2f 0a 00 00       	call   f01040ae <cprintf>$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	e8 29 07 00 00       	call   f0103db0 <env_destroy>$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	83 c4 14             	add    $0x14,%esp$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	5b                   	pop    %ebx$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	5d                   	pop    %ebp$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	c3                   	ret    $/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	00 00                	add    %al,(%eax)$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690 <envid2env>:$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	55                   	push   %ebp$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	89 e5                	mov    %esp,%ebp$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	56                   	push   %esi$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	53                   	push   %ebx$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	85 c0                	test   %eax,%eax$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	75 1a                	jne    f01036b9 <envid2env+0x29>$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	e8 f8 30 00 00       	call   f010679c <cpunum>$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	89 01                	mov    %eax,(%ecx)$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	eb 70                	jmp    f0103729 <envid2env+0x99>$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	89 c3                	mov    %eax,%ebx$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	03 1d 48 42 2b f0    	add    0xf02b4248,%ebx$/;"	l
f01036ca	obj/kern/kernel.asm	/^f01036ca:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	74 05                	je     f01036d5 <envid2env+0x45>$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	74 10                	je     f01036e5 <envid2env+0x55>$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	eb 44                	jmp    f0103729 <envid2env+0x99>$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	84 d2                	test   %dl,%dl$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	74 36                	je     f010371f <envid2env+0x8f>$/;"	l
f01036e9	obj/kern/kernel.asm	/^f01036e9:	e8 ae 30 00 00       	call   f010679c <cpunum>$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	39 98 28 50 2b f0    	cmp    %ebx,-0xfd4afd8(%eax)$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	74 26                	je     f010371f <envid2env+0x8f>$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	e8 9b 30 00 00       	call   f010679c <cpunum>$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	74 10                	je     f010371f <envid2env+0x8f>$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	eb 0a                	jmp    f0103729 <envid2env+0x99>$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	5b                   	pop    %ebx$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	5e                   	pop    %esi$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	5d                   	pop    %ebp$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	c3                   	ret    $/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d <env_init_percpu>:$/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	55                   	push   %ebp$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	b8 20 43 12 f0       	mov    $0xf0124320,%eax$/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	8e e8                	mov    %eax,%gs$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	8e e0                	mov    %eax,%fs$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	b0 10                	mov    $0x10,%al$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	8e c0                	mov    %eax,%es$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	8e d8                	mov    %eax,%ds$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	8e d0                	mov    %eax,%ss$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	ea 50 37 10 f0 08 00 	ljmp   $0x8,$0xf0103750$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	b0 00                	mov    $0x0,%al$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	0f 00 d0             	lldt   %ax$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	5d                   	pop    %ebp$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	c3                   	ret    $/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757 <env_init>:$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	55                   	push   %ebp$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	89 e5                	mov    %esp,%ebp$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	56                   	push   %esi$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	53                   	push   %ebx$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	8b 35 48 42 2b f0    	mov    0xf02b4248,%esi$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	8b 0d 4c 42 2b f0    	mov    0xf02b424c,%ecx$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	89 c3                	mov    %eax,%ebx$/;"	l
f0103775	obj/kern/kernel.asm	/^f0103775:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	74 04                	je     f0103792 <env_init+0x3b>$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103790	obj/kern/kernel.asm	/^f0103790:	eb e1                	jmp    f0103773 <env_init+0x1c>$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	89 35 4c 42 2b f0    	mov    %esi,0xf02b424c$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	e8 90 ff ff ff       	call   f010372d <env_init_percpu>$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	5b                   	pop    %ebx$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	5e                   	pop    %esi$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	5d                   	pop    %ebp$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	c3                   	ret    $/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1 <env_alloc>:$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	55                   	push   %ebp$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	56                   	push   %esi$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	53                   	push   %ebx$/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	8b 1d 4c 42 2b f0    	mov    0xf02b424c,%ebx$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	85 db                	test   %ebx,%ebx$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	0f 84 5b 01 00 00    	je     f0103912 <env_alloc+0x171>$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	e8 b2 d8 ff ff       	call   f0101075 <page_alloc>$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	85 c0                	test   %eax,%eax$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	0f 84 4e 01 00 00    	je     f0103919 <env_alloc+0x178>$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	89 c2                	mov    %eax,%edx$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	72 20                	jb     f0103809 <env_alloc+0x68>$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	f0 $/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	00 $/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	e8 37 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	b8 bb 03 00 00       	mov    $0x3bb,%eax$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	ba bb 03 00 00       	mov    $0x3bb,%edx$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	8b 0d 98 4e 2b f0    	mov    0xf02b4e98,%ecx$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	8b 34 91             	mov    (%ecx,%edx,4),%esi$/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	8b 4b 60             	mov    0x60(%ebx),%ecx$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	89 34 91             	mov    %esi,(%ecx,%edx,4)$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	89 c2                	mov    %eax,%edx$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	75 e5                	jne    f010381b <env_alloc+0x7a>$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	77 20                	ja     f0103860 <env_alloc+0xbf>$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	f0 $/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	00 $/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	e8 e0 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	89 da                	mov    %ebx,%edx$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	2b 15 48 42 2b f0    	sub    0xf02b4248,%edx$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	09 d0                	or     %edx,%eax$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	00 $/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	00 $/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	e8 7a 28 00 00       	call   f0106147 <memset>$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	a3 4c 42 2b f0       	mov    %eax,0xf02b424c$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	89 18                	mov    %ebx,(%eax)$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	eb 0c                	jmp    f010391e <env_alloc+0x17d>$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	eb 05                	jmp    f010391e <env_alloc+0x17d>$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	5b                   	pop    %ebx$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	5e                   	pop    %esi$/;"	l
f0103923	obj/kern/kernel.asm	/^f0103923:	5d                   	pop    %ebp$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	c3                   	ret    $/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925 <env_create>:$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	55                   	push   %ebp$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	89 e5                	mov    %esp,%ebp$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	57                   	push   %edi$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	56                   	push   %esi$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	53                   	push   %ebx$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	00 $/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	e8 60 fe ff ff       	call   f01037a1 <env_alloc>$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	85 c0                	test   %eax,%eax$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	79 20                	jns    f0103965 <env_create+0x40>$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	c7 44 24 08 1d 8b 10 	movl   $0xf0108b1d,0x8(%esp)$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	f0 $/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	c7 44 24 04 a7 01 00 	movl   $0x1a7,0x4(%esp)$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	00 $/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	e8 db c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010396e	obj/kern/kernel.asm	/^f010396e:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	74 1c                	je     f0103992 <env_create+0x6d>$/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	c7 44 24 08 c8 8a 10 	movl   $0xf0108ac8,0x8(%esp)$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	f0 $/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	c7 44 24 04 6c 01 00 	movl   $0x16c,0x4(%esp)$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	00 $/;"	l
f0103986	obj/kern/kernel.asm	/^f0103986:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	e8 ae c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	89 c7                	mov    %eax,%edi$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	03 78 1c             	add    0x1c(%eax),%edi$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	01 f8                	add    %edi,%eax$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	e9 8e 01 00 00       	jmp    f0103b39 <env_create+0x214>$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	83 3f 01             	cmpl   $0x1,(%edi)$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	0f 85 82 01 00 00    	jne    f0103b36 <env_create+0x211>$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	89 c3                	mov    %eax,%ebx$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	03 47 14             	add    0x14(%edi),%eax$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	89 c6                	mov    %eax,%esi$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	81 c6 ff 0f 00 00    	add    $0xfff,%esi$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	eb 7e                	jmp    f0103a56 <env_create+0x131>$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01039df	obj/kern/kernel.asm	/^f01039df:	e8 91 d6 ff ff       	call   f0101075 <page_alloc>$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	85 c0                	test   %eax,%eax$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	75 24                	jne    f0103a0c <env_create+0xe7>$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	c7 44 24 0c fc ff ff 	movl   $0xfffffffc,0xc(%esp)$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	ff $/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	c7 44 24 08 2d 8b 10 	movl   $0xf0108b2d,0x8(%esp)$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	f0 $/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
f01039ff	obj/kern/kernel.asm	/^f01039ff:	00 $/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	e8 34 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	00 $/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	e8 0f d9 ff ff       	call   f010133b <page_insert>$/;"	l
f0103a2c	obj/kern/kernel.asm	/^f0103a2c:	85 c0                	test   %eax,%eax$/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	79 20                	jns    f0103a50 <env_create+0x12b>$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	c7 44 24 08 2d 8b 10 	movl   $0xf0108b2d,0x8(%esp)$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	f0 $/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	00 $/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	e8 f0 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	39 de                	cmp    %ebx,%esi$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	0f 87 7a ff ff ff    	ja     f01039d8 <env_create+0xb3>$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	e9 c2 00 00 00       	jmp    f0103b2d <env_create+0x208>$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	00 $/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	89 d8                	mov    %ebx,%eax$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	03 47 08             	add    0x8(%edi),%eax$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	e8 83 d7 ff ff       	call   f010120d <page_lookup>$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	85 c0                	test   %eax,%eax$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	75 1c                	jne    f0103aaa <env_create+0x185>$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	c7 44 24 08 f0 8a 10 	movl   $0xf0108af0,0x8(%esp)$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	f0 $/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	00 $/;"	l
f0103a9e	obj/kern/kernel.asm	/^f0103a9e:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	e8 96 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	2b 05 9c 4e 2b f0    	sub    0xf02b4e9c,%eax$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	89 c2                	mov    %eax,%edx$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	3b 15 94 4e 2b f0    	cmp    0xf02b4e94,%edx$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	72 20                	jb     f0103ae3 <env_create+0x1be>$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	f0 $/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	00 $/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	e8 5d c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	89 da                	mov    %ebx,%edx$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	03 57 08             	add    0x8(%edi),%edx$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	8d 84 10 00 00 00 f0 	lea    -0x10000000(%eax,%edx,1),%eax$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	89 c6                	mov    %eax,%esi$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	29 c6                	sub    %eax,%esi$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	8d 0c 1e             	lea    (%esi,%ebx,1),%ecx$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	8b 57 10             	mov    0x10(%edi),%edx$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	29 da                	sub    %ebx,%edx$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	3b 4f 10             	cmp    0x10(%edi),%ecx$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	0f 47 f2             	cmova  %edx,%esi$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	89 da                	mov    %ebx,%edx$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	03 57 04             	add    0x4(%edi),%edx$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	03 55 08             	add    0x8(%ebp),%edx$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	e8 d1 26 00 00       	call   f01061fc <memcpy>$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	01 f3                	add    %esi,%ebx$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	3b 5f 10             	cmp    0x10(%edi),%ebx$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	0f 82 35 ff ff ff    	jb     f0103a6b <env_create+0x146>$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	83 c7 20             	add    $0x20,%edi$/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	39 7d d0             	cmp    %edi,-0x30(%ebp)$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	0f 87 69 fe ff ff    	ja     f01039ab <env_create+0x86>$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	89 41 30             	mov    %eax,0x30(%ecx)$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	e8 1b d5 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	85 c0                	test   %eax,%eax$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	75 24                	jne    f0103b82 <env_create+0x25d>$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	c7 44 24 0c fc ff ff 	movl   $0xfffffffc,0xc(%esp)$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	ff $/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	c7 44 24 08 3f 8b 10 	movl   $0xf0108b3f,0x8(%esp)$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	f0 $/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	c7 44 24 04 90 01 00 	movl   $0x190,0x4(%esp)$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	00 $/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	e8 be c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	00 $/;"	l
f0103b8a	obj/kern/kernel.asm	/^f0103b8a:	c7 44 24 08 00 d0 bf 	movl   $0xeebfd000,0x8(%esp)$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	ee $/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	e8 97 d7 ff ff       	call   f010133b <page_insert>$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	85 c0                	test   %eax,%eax$/;"	l
f0103ba6	obj/kern/kernel.asm	/^f0103ba6:	79 20                	jns    f0103bc8 <env_create+0x2a3>$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	c7 44 24 08 3f 8b 10 	movl   $0xf0108b3f,0x8(%esp)$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	f0 $/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	c7 44 24 04 95 01 00 	movl   $0x195,0x4(%esp)$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	00 $/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	e8 78 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103bce	obj/kern/kernel.asm	/^f0103bce:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	75 07                	jne    f0103bdd <env_create+0x2b8>$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	5b                   	pop    %ebx$/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	5e                   	pop    %esi$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	5f                   	pop    %edi$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	5d                   	pop    %ebp$/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	c3                   	ret    $/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5 <env_free>:$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	55                   	push   %ebp$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	57                   	push   %edi$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	56                   	push   %esi$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	53                   	push   %ebx$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103bee	obj/kern/kernel.asm	/^f0103bee:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	e8 a6 2b 00 00       	call   f010679c <cpunum>$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	39 b8 28 50 2b f0    	cmp    %edi,-0xfd4afd8(%eax)$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	74 09                	je     f0103c0a <env_free+0x25>$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	eb 36                	jmp    f0103c40 <env_free+0x5b>$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c14	obj/kern/kernel.asm	/^f0103c14:	77 20                	ja     f0103c36 <env_free+0x51>$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	f0 $/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	c7 44 24 04 c1 01 00 	movl   $0x1c1,0x4(%esp)$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	00 $/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	e8 0a c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103c3b	obj/kern/kernel.asm	/^f0103c3b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	eb c1                	jmp    f0103c01 <env_free+0x1c>$/;"	l
f0103c40	obj/kern/kernel.asm	/^f0103c40:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	89 c8                	mov    %ecx,%eax$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	0f 84 b7 00 00 00    	je     f0103d14 <env_free+0x12f>$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	89 f0                	mov    %esi,%eax$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	72 20                	jb     f0103c93 <env_free+0xae>$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	f0 $/;"	l
f0103c7f	obj/kern/kernel.asm	/^f0103c7f:	c7 44 24 04 d0 01 00 	movl   $0x1d0,0x4(%esp)$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	00 $/;"	l
f0103c87	obj/kern/kernel.asm	/^f0103c87:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	e8 ad c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103ca8	obj/kern/kernel.asm	/^f0103ca8:	01 $/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	74 17                	je     f0103cc2 <env_free+0xdd>$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	89 d8                	mov    %ebx,%eax$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	e8 f8 d5 ff ff       	call   f01012ba <page_remove>$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	75 d4                	jne    f0103ca1 <env_free+0xbc>$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	72 1c                	jb     f0103d01 <env_free+0x11c>$/;"	l
f0103ce5	obj/kern/kernel.asm	/^f0103ce5:	c7 44 24 08 6c 82 10 	movl   $0xf010826c,0x8(%esp)$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	f0 $/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	00 $/;"	l
f0103cf5	obj/kern/kernel.asm	/^f0103cf5:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	e8 3f c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	a1 9c 4e 2b f0       	mov    0xf02b4e9c,%eax$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	e8 36 d4 ff ff       	call   f010114a <page_decref>$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103d18	obj/kern/kernel.asm	/^f0103d18:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	0f 85 1b ff ff ff    	jne    f0103c40 <env_free+0x5b>$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	77 20                	ja     f0103d4f <env_free+0x16a>$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	f0 $/;"	l
f0103d3b	obj/kern/kernel.asm	/^f0103d3b:	c7 44 24 04 de 01 00 	movl   $0x1de,0x4(%esp)$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	00 $/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	e8 f1 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	72 1c                	jb     f0103d82 <env_free+0x19d>$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	c7 44 24 08 6c 82 10 	movl   $0xf010826c,0x8(%esp)$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	f0 $/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	00 $/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	c7 04 24 8c 7e 10 f0 	movl   $0xf0107e8c,(%esp)$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	e8 be c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	8b 15 9c 4e 2b f0    	mov    0xf02b4e9c,%edx$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	e8 b7 d3 ff ff       	call   f010114a <page_decref>$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	a1 4c 42 2b f0       	mov    0xf02b424c,%eax$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	89 3d 4c 42 2b f0    	mov    %edi,0xf02b424c$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	5b                   	pop    %ebx$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	5e                   	pop    %esi$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	5f                   	pop    %edi$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	5d                   	pop    %ebp$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	c3                   	ret    $/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0 <env_destroy>:$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	55                   	push   %ebp$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	53                   	push   %ebx$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	75 19                	jne    f0103dd9 <env_destroy+0x29>$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	e8 d7 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103dc5	obj/kern/kernel.asm	/^f0103dc5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	39 98 28 50 2b f0    	cmp    %ebx,-0xfd4afd8(%eax)$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	74 09                	je     f0103dd9 <env_destroy+0x29>$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	eb 2f                	jmp    f0103e08 <env_destroy+0x58>$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	e8 04 fe ff ff       	call   f0103be5 <env_free>$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	e8 b6 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	39 98 28 50 2b f0    	cmp    %ebx,-0xfd4afd8(%eax)$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	75 17                	jne    f0103e08 <env_destroy+0x58>$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	e8 a6 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	c7 80 28 50 2b f0 00 	movl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	00 00 00 $/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	e8 2e 0f 00 00       	call   f0104d36 <sched_yield>$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	5b                   	pop    %ebx$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	5d                   	pop    %ebp$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	c3                   	ret    $/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e <env_pop_tf>:$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	55                   	push   %ebp$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	53                   	push   %ebx$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	e8 82 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	8b 98 28 50 2b f0    	mov    -0xfd4afd8(%eax),%ebx$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	e8 74 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	61                   	popa   $/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	07                   	pop    %es$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	1f                   	pop    %ds$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	cf                   	iret   $/;"	l
f0103e35	obj/kern/kernel.asm	/^f0103e35:	c7 44 24 08 4f 8b 10 	movl   $0xf0108b4f,0x8(%esp)$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	f0 $/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	c7 44 24 04 14 02 00 	movl   $0x214,0x4(%esp)$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	00 $/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	e8 ef c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51 <env_run>:$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	55                   	push   %ebp$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	e8 40 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	83 b8 28 50 2b f0 00 	cmpl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	74 29                	je     f0103e91 <env_run+0x40>$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	e8 2f 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	75 15                	jne    f0103e91 <env_run+0x40>$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	e8 1b 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	e8 06 29 00 00       	call   f010679c <cpunum>$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	89 90 28 50 2b f0    	mov    %edx,-0xfd4afd8(%eax)$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	e8 f5 28 00 00       	call   f010679c <cpunum>$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	e8 e0 28 00 00       	call   f010679c <cpunum>$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	e8 f2 2b 00 00       	call   f0106ac7 <spin_unlock>$/;"	l
f0103ed5	obj/kern/kernel.asm	/^f0103ed5:	f3 90                	pause  $/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	e8 c0 28 00 00       	call   f010679c <cpunum>$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	77 20                	ja     f0103f0f <env_run+0xbe>$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	f0 $/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	c7 44 24 04 3a 02 00 	movl   $0x23a,0x4(%esp)$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	00 $/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	c7 04 24 12 8b 10 f0 	movl   $0xf0108b12,(%esp)$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	e8 31 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	e8 80 28 00 00       	call   f010679c <cpunum>$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	e8 e1 fe ff ff       	call   f0103e0e <env_pop_tf>$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	00 00                	add    %al,(%eax)$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30 <mc146818_read>:$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	55                   	push   %ebp$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	ee                   	out    %al,(%dx)$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	b2 71                	mov    $0x71,%dl$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	ec                   	in     (%dx),%al$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	5d                   	pop    %ebp$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	c3                   	ret    $/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45 <mc146818_write>:$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	55                   	push   %ebp$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	ee                   	out    %al,(%dx)$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	b2 71                	mov    $0x71,%dl$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	ee                   	out    %al,(%dx)$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	5d                   	pop    %ebp$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	c3                   	ret    $/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c <irq_setmask_8259A>:$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	55                   	push   %ebp$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	56                   	push   %esi$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	53                   	push   %ebx$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	66 a3 a8 43 12 f0    	mov    %ax,0xf01243a8$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	80 3d 50 42 2b f0 00 	cmpb   $0x0,0xf02b4250$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	74 4e                	je     f0103fc4 <irq_setmask_8259A+0x68>$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	89 c6                	mov    %eax,%esi$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	ee                   	out    %al,(%dx)$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	ee                   	out    %al,(%dx)$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	c7 04 24 5b 8b 10 f0 	movl   $0xf0108b5b,(%esp)$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	e8 1d 01 00 00       	call   f01040ae <cprintf>$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	f7 d6                	not    %esi$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	73 10                	jae    f0103fb0 <irq_setmask_8259A+0x54>$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	c7 04 24 4f 90 10 f0 	movl   $0xf010904f,(%esp)$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	e8 fe 00 00 00       	call   f01040ae <cprintf>$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103fb3	obj/kern/kernel.asm	/^f0103fb3:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	75 e3                	jne    f0103f9b <irq_setmask_8259A+0x3f>$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	c7 04 24 64 7f 10 f0 	movl   $0xf0107f64,(%esp)$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	e8 ea 00 00 00       	call   f01040ae <cprintf>$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	5b                   	pop    %ebx$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	5e                   	pop    %esi$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	5d                   	pop    %ebp$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	c3                   	ret    $/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb <pic_init>:$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	c6 05 50 42 2b f0 01 	movb   $0x1,0xf02b4250$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	ee                   	out    %al,(%dx)$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	ee                   	out    %al,(%dx)$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	b2 20                	mov    $0x20,%dl$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	ee                   	out    %al,(%dx)$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	b2 21                	mov    $0x21,%dl$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	ee                   	out    %al,(%dx)$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	ee                   	out    %al,(%dx)$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	ee                   	out    %al,(%dx)$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	ee                   	out    %al,(%dx)$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	ee                   	out    %al,(%dx)$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	ee                   	out    %al,(%dx)$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	ee                   	out    %al,(%dx)$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	b2 20                	mov    $0x20,%dl$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	ee                   	out    %al,(%dx)$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	ee                   	out    %al,(%dx)$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	ee                   	out    %al,(%dx)$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	ee                   	out    %al,(%dx)$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	74 12                	je     f0104053 <pic_init+0x88>$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	55                   	push   %ebp$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	89 e5                	mov    %esp,%ebp$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	e8 0a ff ff ff       	call   f0103f5c <irq_setmask_8259A>$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	c9                   	leave  $/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	f3 c3                	repz ret $/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055 <irq_eoi>:$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	55                   	push   %ebp$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	89 e5                	mov    %esp,%ebp$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	ee                   	out    %al,(%dx)$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	ee                   	out    %al,(%dx)$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	5d                   	pop    %ebp$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	c3                   	ret    $/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068 <putch>:$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	55                   	push   %ebp$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	89 e5                	mov    %esp,%ebp$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	e8 70 c7 ff ff       	call   f01007e9 <cputchar>$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	c9                   	leave  $/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	c3                   	ret    $/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b <vcprintf>:$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	55                   	push   %ebp$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	89 e5                	mov    %esp,%ebp$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	c7 04 24 68 40 10 f0 	movl   $0xf0104068,(%esp)$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	e8 e3 19 00 00       	call   f0105a8c <vprintfmt>$/;"	l
f01040a9	obj/kern/kernel.asm	/^f01040a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	c9                   	leave  $/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	c3                   	ret    $/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae <cprintf>:$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	55                   	push   %ebp$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	89 e5                	mov    %esp,%ebp$/;"	l
f01040b1	obj/kern/kernel.asm	/^f01040b1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	e8 b5 ff ff ff       	call   f010407b <vcprintf>$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	c9                   	leave  $/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	c3                   	ret    $/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0 <trap_init_percpu>:$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	55                   	push   %ebp$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	56                   	push   %esi$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	53                   	push   %ebx$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	e8 c2 26 00 00       	call   f010679c <cpunum>$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	0f b6 98 20 50 2b f0 	movzbl -0xfd4afe0(%eax),%ebx$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	0f b6 f3             	movzbl %bl,%esi$/;"	l
f01040e7	obj/kern/kernel.asm	/^f01040e7:	e8 b0 26 00 00       	call   f010679c <cpunum>$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	89 f2                	mov    %esi,%edx$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	f7 da                	neg    %edx$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f01040f6	obj/kern/kernel.asm	/^f01040f6:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	89 90 30 50 2b f0    	mov    %edx,-0xfd4afd0(%eax)$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	66 c7 80 34 50 2b f0 	movw   $0x10,-0xfd4afcc(%eax)$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	10 00 $/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	05 2c 50 2b f0       	add    $0xf02b502c,%eax$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	8d 56 05             	lea    0x5(%esi),%edx$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	66 c7 04 d5 40 43 12 	movw   $0x67,-0xfedbcc0(,%edx,8)$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	f0 67 00 $/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	66 89 04 d5 42 43 12 	mov    %ax,-0xfedbcbe(,%edx,8)$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	f0 $/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	89 c1                	mov    %eax,%ecx$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	88 0c d5 44 43 12 f0 	mov    %cl,-0xfedbcbc(,%edx,8)$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	c6 04 d5 46 43 12 f0 	movb   $0x40,-0xfedbcba(,%edx,8)$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	40 $/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	88 04 d5 47 43 12 f0 	mov    %al,-0xfedbcb9(,%edx,8)$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	c6 04 d5 45 43 12 f0 	movb   $0x89,-0xfedbcbb(,%edx,8)$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	89 $/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	8d 1c dd 28 00 00 00 	lea    0x28(,%ebx,8),%ebx$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	0f 00 db             	ltr    %bx$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	b8 ac 43 12 f0       	mov    $0xf01243ac,%eax$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	5b                   	pop    %ebx$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	5e                   	pop    %esi$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	5d                   	pop    %ebp$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	c3                   	ret    $/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164 <trap_init>:$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	55                   	push   %ebp$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	89 e5                	mov    %esp,%ebp$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	b8 c0 4b 10 f0       	mov    $0xf0104bc0,%eax$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	66 a3 60 42 2b f0    	mov    %ax,0xf02b4260$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	66 c7 05 62 42 2b f0 	movw   $0x8,0xf02b4262$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	08 00 $/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	c6 05 64 42 2b f0 00 	movb   $0x0,0xf02b4264$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	c6 05 65 42 2b f0 8f 	movb   $0x8f,0xf02b4265$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	66 a3 66 42 2b f0    	mov    %ax,0xf02b4266$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	b8 ca 4b 10 f0       	mov    $0xf0104bca,%eax$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	66 a3 68 42 2b f0    	mov    %ax,0xf02b4268$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	66 c7 05 6a 42 2b f0 	movw   $0x8,0xf02b426a$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	08 00 $/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	c6 05 6c 42 2b f0 00 	movb   $0x0,0xf02b426c$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	c6 05 6d 42 2b f0 8f 	movb   $0x8f,0xf02b426d$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	66 a3 6e 42 2b f0    	mov    %ax,0xf02b426e$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	b8 d0 4b 10 f0       	mov    $0xf0104bd0,%eax$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	66 a3 70 42 2b f0    	mov    %ax,0xf02b4270$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	66 c7 05 72 42 2b f0 	movw   $0x8,0xf02b4272$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	08 00 $/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	c6 05 74 42 2b f0 00 	movb   $0x0,0xf02b4274$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	c6 05 75 42 2b f0 8e 	movb   $0x8e,0xf02b4275$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041e5	obj/kern/kernel.asm	/^f01041e5:	66 a3 76 42 2b f0    	mov    %ax,0xf02b4276$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	b8 d6 4b 10 f0       	mov    $0xf0104bd6,%eax$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	66 a3 78 42 2b f0    	mov    %ax,0xf02b4278$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	66 c7 05 7a 42 2b f0 	movw   $0x8,0xf02b427a$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	08 00 $/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	c6 05 7c 42 2b f0 00 	movb   $0x0,0xf02b427c$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	c6 05 7d 42 2b f0 ee 	movb   $0xee,0xf02b427d$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	66 a3 7e 42 2b f0    	mov    %ax,0xf02b427e$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	b8 dc 4b 10 f0       	mov    $0xf0104bdc,%eax$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	66 a3 80 42 2b f0    	mov    %ax,0xf02b4280$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	66 c7 05 82 42 2b f0 	movw   $0x8,0xf02b4282$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	08 00 $/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	c6 05 84 42 2b f0 00 	movb   $0x0,0xf02b4284$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	c6 05 85 42 2b f0 8f 	movb   $0x8f,0xf02b4285$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	66 a3 86 42 2b f0    	mov    %ax,0xf02b4286$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	b8 e2 4b 10 f0       	mov    $0xf0104be2,%eax$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	66 a3 88 42 2b f0    	mov    %ax,0xf02b4288$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	66 c7 05 8a 42 2b f0 	movw   $0x8,0xf02b428a$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	08 00 $/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	c6 05 8c 42 2b f0 00 	movb   $0x0,0xf02b428c$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	c6 05 8d 42 2b f0 8f 	movb   $0x8f,0xf02b428d$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	66 a3 8e 42 2b f0    	mov    %ax,0xf02b428e$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	b8 e8 4b 10 f0       	mov    $0xf0104be8,%eax$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	66 a3 90 42 2b f0    	mov    %ax,0xf02b4290$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	66 c7 05 92 42 2b f0 	movw   $0x8,0xf02b4292$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	08 00 $/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	c6 05 94 42 2b f0 00 	movb   $0x0,0xf02b4294$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	c6 05 95 42 2b f0 8f 	movb   $0x8f,0xf02b4295$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	66 a3 96 42 2b f0    	mov    %ax,0xf02b4296$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	b8 ee 4b 10 f0       	mov    $0xf0104bee,%eax$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	66 a3 98 42 2b f0    	mov    %ax,0xf02b4298$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	66 c7 05 9a 42 2b f0 	movw   $0x8,0xf02b429a$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	08 00 $/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	c6 05 9c 42 2b f0 00 	movb   $0x0,0xf02b429c$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	c6 05 9d 42 2b f0 8f 	movb   $0x8f,0xf02b429d$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	66 a3 9e 42 2b f0    	mov    %ax,0xf02b429e$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	b8 f4 4b 10 f0       	mov    $0xf0104bf4,%eax$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	66 a3 a0 42 2b f0    	mov    %ax,0xf02b42a0$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	66 c7 05 a2 42 2b f0 	movw   $0x8,0xf02b42a2$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	08 00 $/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	c6 05 a4 42 2b f0 00 	movb   $0x0,0xf02b42a4$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	c6 05 a5 42 2b f0 8f 	movb   $0x8f,0xf02b42a5$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	66 a3 a6 42 2b f0    	mov    %ax,0xf02b42a6$/;"	l
f01042ed	obj/kern/kernel.asm	/^f01042ed:	b8 f8 4b 10 f0       	mov    $0xf0104bf8,%eax$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	66 a3 b0 42 2b f0    	mov    %ax,0xf02b42b0$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	66 c7 05 b2 42 2b f0 	movw   $0x8,0xf02b42b2$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	08 00 $/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	c6 05 b4 42 2b f0 00 	movb   $0x0,0xf02b42b4$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	c6 05 b5 42 2b f0 8f 	movb   $0x8f,0xf02b42b5$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	66 a3 b6 42 2b f0    	mov    %ax,0xf02b42b6$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	b8 fc 4b 10 f0       	mov    $0xf0104bfc,%eax$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	66 a3 b8 42 2b f0    	mov    %ax,0xf02b42b8$/;"	l
f0104323	obj/kern/kernel.asm	/^f0104323:	66 c7 05 ba 42 2b f0 	movw   $0x8,0xf02b42ba$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	08 00 $/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	c6 05 bc 42 2b f0 00 	movb   $0x0,0xf02b42bc$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	c6 05 bd 42 2b f0 8f 	movb   $0x8f,0xf02b42bd$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	66 a3 be 42 2b f0    	mov    %ax,0xf02b42be$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	b8 00 4c 10 f0       	mov    $0xf0104c00,%eax$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	66 a3 c0 42 2b f0    	mov    %ax,0xf02b42c0$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	66 c7 05 c2 42 2b f0 	movw   $0x8,0xf02b42c2$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	08 00 $/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	c6 05 c4 42 2b f0 00 	movb   $0x0,0xf02b42c4$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	c6 05 c5 42 2b f0 8f 	movb   $0x8f,0xf02b42c5$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	66 a3 c6 42 2b f0    	mov    %ax,0xf02b42c6$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	b8 04 4c 10 f0       	mov    $0xf0104c04,%eax$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	66 a3 c8 42 2b f0    	mov    %ax,0xf02b42c8$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	66 c7 05 ca 42 2b f0 	movw   $0x8,0xf02b42ca$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	08 00 $/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	c6 05 cc 42 2b f0 00 	movb   $0x0,0xf02b42cc$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	c6 05 cd 42 2b f0 8f 	movb   $0x8f,0xf02b42cd$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	66 a3 ce 42 2b f0    	mov    %ax,0xf02b42ce$/;"	l
f0104399	obj/kern/kernel.asm	/^f0104399:	b8 08 4c 10 f0       	mov    $0xf0104c08,%eax$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	66 a3 d0 42 2b f0    	mov    %ax,0xf02b42d0$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	66 c7 05 d2 42 2b f0 	movw   $0x8,0xf02b42d2$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	08 00 $/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	c6 05 d4 42 2b f0 00 	movb   $0x0,0xf02b42d4$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	c6 05 d5 42 2b f0 8e 	movb   $0x8e,0xf02b42d5$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	66 a3 d6 42 2b f0    	mov    %ax,0xf02b42d6$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	b8 0c 4c 10 f0       	mov    $0xf0104c0c,%eax$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	66 a3 e0 42 2b f0    	mov    %ax,0xf02b42e0$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	66 c7 05 e2 42 2b f0 	movw   $0x8,0xf02b42e2$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	08 00 $/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	c6 05 e4 42 2b f0 00 	movb   $0x0,0xf02b42e4$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	c6 05 e5 42 2b f0 8f 	movb   $0x8f,0xf02b42e5$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	66 a3 e6 42 2b f0    	mov    %ax,0xf02b42e6$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	b8 12 4c 10 f0       	mov    $0xf0104c12,%eax$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	66 a3 e8 42 2b f0    	mov    %ax,0xf02b42e8$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	66 c7 05 ea 42 2b f0 	movw   $0x8,0xf02b42ea$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	08 00 $/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	c6 05 ec 42 2b f0 00 	movb   $0x0,0xf02b42ec$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	c6 05 ed 42 2b f0 8f 	movb   $0x8f,0xf02b42ed$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	66 a3 ee 42 2b f0    	mov    %ax,0xf02b42ee$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	b8 18 4c 10 f0       	mov    $0xf0104c18,%eax$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	66 a3 f0 42 2b f0    	mov    %ax,0xf02b42f0$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	66 c7 05 f2 42 2b f0 	movw   $0x8,0xf02b42f2$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	08 00 $/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	c6 05 f4 42 2b f0 00 	movb   $0x0,0xf02b42f4$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	c6 05 f5 42 2b f0 8f 	movb   $0x8f,0xf02b42f5$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	66 a3 f6 42 2b f0    	mov    %ax,0xf02b42f6$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	b8 1e 4c 10 f0       	mov    $0xf0104c1e,%eax$/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	66 a3 f8 42 2b f0    	mov    %ax,0xf02b42f8$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	66 c7 05 fa 42 2b f0 	movw   $0x8,0xf02b42fa$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	08 00 $/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	c6 05 fc 42 2b f0 00 	movb   $0x0,0xf02b42fc$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	c6 05 fd 42 2b f0 8f 	movb   $0x8f,0xf02b42fd$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	66 a3 fe 42 2b f0    	mov    %ax,0xf02b42fe$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	b8 24 4c 10 f0       	mov    $0xf0104c24,%eax$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	66 a3 e0 43 2b f0    	mov    %ax,0xf02b43e0$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	66 c7 05 e2 43 2b f0 	movw   $0x8,0xf02b43e2$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	08 00 $/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	c6 05 e4 43 2b f0 00 	movb   $0x0,0xf02b43e4$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	c6 05 e5 43 2b f0 ee 	movb   $0xee,0xf02b43e5$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	66 a3 e6 43 2b f0    	mov    %ax,0xf02b43e6$/;"	l
f010449b	obj/kern/kernel.asm	/^f010449b:	b8 2a 4c 10 f0       	mov    $0xf0104c2a,%eax$/;"	l
f01044a0	obj/kern/kernel.asm	/^f01044a0:	66 a3 60 43 2b f0    	mov    %ax,0xf02b4360$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	66 c7 05 62 43 2b f0 	movw   $0x8,0xf02b4362$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	08 00 $/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	c6 05 64 43 2b f0 00 	movb   $0x0,0xf02b4364$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	c6 05 65 43 2b f0 ee 	movb   $0xee,0xf02b4365$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	66 a3 66 43 2b f0    	mov    %ax,0xf02b4366$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	b8 30 4c 10 f0       	mov    $0xf0104c30,%eax$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	66 a3 68 43 2b f0    	mov    %ax,0xf02b4368$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	66 c7 05 6a 43 2b f0 	movw   $0x8,0xf02b436a$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	08 00 $/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	c6 05 6c 43 2b f0 00 	movb   $0x0,0xf02b436c$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	c6 05 6d 43 2b f0 ee 	movb   $0xee,0xf02b436d$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	66 a3 6e 43 2b f0    	mov    %ax,0xf02b436e$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	b8 36 4c 10 f0       	mov    $0xf0104c36,%eax$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	66 a3 80 43 2b f0    	mov    %ax,0xf02b4380$/;"	l
f01044fc	obj/kern/kernel.asm	/^f01044fc:	66 c7 05 82 43 2b f0 	movw   $0x8,0xf02b4382$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	08 00 $/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	c6 05 84 43 2b f0 00 	movb   $0x0,0xf02b4384$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	c6 05 85 43 2b f0 ee 	movb   $0xee,0xf02b4385$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104516	obj/kern/kernel.asm	/^f0104516:	66 a3 86 43 2b f0    	mov    %ax,0xf02b4386$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	b8 3c 4c 10 f0       	mov    $0xf0104c3c,%eax$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	66 a3 98 43 2b f0    	mov    %ax,0xf02b4398$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	66 c7 05 9a 43 2b f0 	movw   $0x8,0xf02b439a$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	08 00 $/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	c6 05 9c 43 2b f0 00 	movb   $0x0,0xf02b439c$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	c6 05 9d 43 2b f0 ee 	movb   $0xee,0xf02b439d$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	66 a3 9e 43 2b f0    	mov    %ax,0xf02b439e$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	b8 42 4c 10 f0       	mov    $0xf0104c42,%eax$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	66 a3 d0 43 2b f0    	mov    %ax,0xf02b43d0$/;"	l
f0104552	obj/kern/kernel.asm	/^f0104552:	66 c7 05 d2 43 2b f0 	movw   $0x8,0xf02b43d2$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	08 00 $/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	c6 05 d4 43 2b f0 00 	movb   $0x0,0xf02b43d4$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	c6 05 d5 43 2b f0 ee 	movb   $0xee,0xf02b43d5$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	66 a3 d6 43 2b f0    	mov    %ax,0xf02b43d6$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	b8 48 4c 10 f0       	mov    $0xf0104c48,%eax$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	66 a3 f8 43 2b f0    	mov    %ax,0xf02b43f8$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	66 c7 05 fa 43 2b f0 	movw   $0x8,0xf02b43fa$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	08 00 $/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	c6 05 fc 43 2b f0 00 	movb   $0x0,0xf02b43fc$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	c6 05 fd 43 2b f0 ee 	movb   $0xee,0xf02b43fd$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	66 a3 fe 43 2b f0    	mov    %ax,0xf02b43fe$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	e8 2e fb ff ff       	call   f01040d0 <trap_init_percpu>$/;"	l
f01045a2	obj/kern/kernel.asm	/^f01045a2:	c9                   	leave  $/;"	l
f01045a3	obj/kern/kernel.asm	/^f01045a3:	c3                   	ret    $/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4 <print_regs>:$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	55                   	push   %ebp$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	53                   	push   %ebx$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	8b 03                	mov    (%ebx),%eax$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	c7 04 24 6f 8b 10 f0 	movl   $0xf0108b6f,(%esp)$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb:	e8 ee fa ff ff       	call   f01040ae <cprintf>$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	c7 04 24 7e 8b 10 f0 	movl   $0xf0108b7e,(%esp)$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	e8 db fa ff ff       	call   f01040ae <cprintf>$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	c7 04 24 8d 8b 10 f0 	movl   $0xf0108b8d,(%esp)$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	e8 c8 fa ff ff       	call   f01040ae <cprintf>$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	c7 04 24 9c 8b 10 f0 	movl   $0xf0108b9c,(%esp)$/;"	l
f01045f4	obj/kern/kernel.asm	/^f01045f4:	e8 b5 fa ff ff       	call   f01040ae <cprintf>$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	c7 04 24 ab 8b 10 f0 	movl   $0xf0108bab,(%esp)$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	e8 a2 fa ff ff       	call   f01040ae <cprintf>$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	c7 04 24 ba 8b 10 f0 	movl   $0xf0108bba,(%esp)$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	e8 8f fa ff ff       	call   f01040ae <cprintf>$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	c7 04 24 c9 8b 10 f0 	movl   $0xf0108bc9,(%esp)$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	e8 7c fa ff ff       	call   f01040ae <cprintf>$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	c7 04 24 d8 8b 10 f0 	movl   $0xf0108bd8,(%esp)$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	e8 69 fa ff ff       	call   f01040ae <cprintf>$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	5b                   	pop    %ebx$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	5d                   	pop    %ebp$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	c3                   	ret    $/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b <print_trapframe>:$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	55                   	push   %ebp$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	89 e5                	mov    %esp,%ebp$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	56                   	push   %esi$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	53                   	push   %ebx$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	e8 41 21 00 00       	call   f010679c <cpunum>$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104663	obj/kern/kernel.asm	/^f0104663:	c7 04 24 3c 8c 10 f0 	movl   $0xf0108c3c,(%esp)$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	e8 3f fa ff ff       	call   f01040ae <cprintf>$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	e8 2d ff ff ff       	call   f01045a4 <print_regs>$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	c7 04 24 5a 8c 10 f0 	movl   $0xf0108c5a,(%esp)$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	e8 23 fa ff ff       	call   f01040ae <cprintf>$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	c7 04 24 6d 8c 10 f0 	movl   $0xf0108c6d,(%esp)$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	e8 0f fa ff ff       	call   f01040ae <cprintf>$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	77 09                	ja     f01046b0 <print_trapframe+0x65>$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	8b 14 85 20 8f 10 f0 	mov    -0xfef70e0(,%eax,4),%edx$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	eb 1f                	jmp    f01046cf <print_trapframe+0x84>$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	74 15                	je     f01046ca <print_trapframe+0x7f>$/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	ba f3 8b 10 f0       	mov    $0xf0108bf3,%edx$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	b9 06 8c 10 f0       	mov    $0xf0108c06,%ecx$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	eb 05                	jmp    f01046cf <print_trapframe+0x84>$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	ba e7 8b 10 f0       	mov    $0xf0108be7,%edx$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	c7 04 24 80 8c 10 f0 	movl   $0xf0108c80,(%esp)$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	e8 cb f9 ff ff       	call   f01040ae <cprintf>$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	3b 1d 60 4a 2b f0    	cmp    0xf02b4a60,%ebx$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	75 19                	jne    f0104704 <print_trapframe+0xb9>$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	75 13                	jne    f0104704 <print_trapframe+0xb9>$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	c7 04 24 92 8c 10 f0 	movl   $0xf0108c92,(%esp)$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	e8 aa f9 ff ff       	call   f01040ae <cprintf>$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	e8 97 f9 ff ff       	call   f01040ae <cprintf>$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	75 51                	jne    f010476e <print_trapframe+0x123>$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	89 c2                	mov    %eax,%edx$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	83 e2 01             	and    $0x1,%edx$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	ba 15 8c 10 f0       	mov    $0xf0108c15,%edx$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	b9 20 8c 10 f0       	mov    $0xf0108c20,%ecx$/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	89 c2                	mov    %eax,%edx$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	ba 2c 8c 10 f0       	mov    $0xf0108c2c,%edx$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	be 32 8c 10 f0       	mov    $0xf0108c32,%esi$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	b8 37 8c 10 f0       	mov    $0xf0108c37,%eax$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	be 6c 8d 10 f0       	mov    $0xf0108d6c,%esi$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	c7 04 24 af 8c 10 f0 	movl   $0xf0108caf,(%esp)$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	e8 42 f9 ff ff       	call   f01040ae <cprintf>$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	eb 0c                	jmp    f010477a <print_trapframe+0x12f>$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	c7 04 24 64 7f 10 f0 	movl   $0xf0107f64,(%esp)$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	e8 34 f9 ff ff       	call   f01040ae <cprintf>$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	c7 04 24 be 8c 10 f0 	movl   $0xf0108cbe,(%esp)$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	e8 21 f9 ff ff       	call   f01040ae <cprintf>$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	c7 04 24 cd 8c 10 f0 	movl   $0xf0108ccd,(%esp)$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	e8 0d f9 ff ff       	call   f01040ae <cprintf>$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	c7 04 24 e0 8c 10 f0 	movl   $0xf0108ce0,(%esp)$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	e8 fa f8 ff ff       	call   f01040ae <cprintf>$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	74 27                	je     f01047e1 <print_trapframe+0x196>$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	c7 04 24 ef 8c 10 f0 	movl   $0xf0108cef,(%esp)$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	e8 e1 f8 ff ff       	call   f01040ae <cprintf>$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	c7 04 24 fe 8c 10 f0 	movl   $0xf0108cfe,(%esp)$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	e8 cd f8 ff ff       	call   f01040ae <cprintf>$/;"	l
f01047e1	obj/kern/kernel.asm	/^f01047e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	5b                   	pop    %ebx$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	5e                   	pop    %esi$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	5d                   	pop    %ebp$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	c3                   	ret    $/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8 <page_fault_handler>:$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	55                   	push   %ebp$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	57                   	push   %edi$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	56                   	push   %esi$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	53                   	push   %ebx$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	66 83 7b 34 08       	cmpw   $0x8,0x34(%ebx)$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	75 1c                	jne    f010481a <page_fault_handler+0x32>$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	c7 44 24 08 b8 8e 10 	movl   $0xf0108eb8,0x8(%esp)$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	f0 $/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	c7 44 24 04 75 01 00 	movl   $0x175,0x4(%esp)$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	00 $/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	c7 04 24 11 8d 10 f0 	movl   $0xf0108d11,(%esp)$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	e8 26 b8 ff ff       	call   f0100040 <_panic>$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	e8 7d 1f 00 00       	call   f010679c <cpunum>$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	75 4f                	jne    f010487d <page_fault_handler+0x95>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	e8 66 1f 00 00       	call   f010679c <cpunum>$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	c7 04 24 e4 8e 10 f0 	movl   $0xf0108ee4,(%esp)$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	e8 54 f8 ff ff       	call   f01040ae <cprintf>$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	e8 e9 fd ff ff       	call   f010464b <print_trapframe>$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	e8 35 1f 00 00       	call   f010679c <cpunum>$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	e8 38 f5 ff ff       	call   f0103db0 <env_destroy>$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	e9 e5 00 00 00       	jmp    f0104962 <page_fault_handler+0x17a>$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	83 e8 04             	sub    $0x4,%eax$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	89 d7                	mov    %edx,%edi$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	8d 42 cc             	lea    -0x34(%edx),%eax$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	e8 f8 1e 00 00       	call   f010679c <cpunum>$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	00 $/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	00 $/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	e8 69 ed ff ff       	call   f0103635 <user_mem_assert>$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	89 77 cc             	mov    %esi,-0x34(%edi)$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01048d5	obj/kern/kernel.asm	/^f01048d5:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	83 ef 2c             	sub    $0x2c,%edi$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	89 de                	mov    %ebx,%esi$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	74 03                	je     f01048ed <page_fault_handler+0x105>$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	b0 1f                	mov    $0x1f,%al$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f01048f3	obj/kern/kernel.asm	/^f01048f3:	74 05                	je     f01048fa <page_fault_handler+0x112>$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	83 e8 02             	sub    $0x2,%eax$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	89 c1                	mov    %eax,%ecx$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	a8 02                	test   $0x2,%al$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	74 0b                	je     f0104915 <page_fault_handler+0x12d>$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	66 89 17             	mov    %dx,(%edi)$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	a8 01                	test   $0x1,%al$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	74 07                	je     f0104920 <page_fault_handler+0x138>$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	89 41 28             	mov    %eax,0x28(%ecx)$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	89 41 2c             	mov    %eax,0x2c(%ecx)$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	89 41 30             	mov    %eax,0x30(%ecx)$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	89 4b 3c             	mov    %ecx,0x3c(%ebx)$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	e8 5f 1e 00 00       	call   f010679c <cpunum>$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	e8 4b 1e 00 00       	call   f010679c <cpunum>$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	e8 ef f4 ff ff       	call   f0103e51 <env_run>$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	5b                   	pop    %ebx$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	5e                   	pop    %esi$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	5f                   	pop    %edi$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	5d                   	pop    %ebp$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	c3                   	ret    $/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a <trap>:$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	55                   	push   %ebp$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	89 e5                	mov    %esp,%ebp$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	57                   	push   %edi$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	56                   	push   %esi$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	fc                   	cld    $/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	83 3d 8c 4e 2b f0 00 	cmpl   $0x0,0xf02b4e8c$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	74 01                	je     f0104980 <trap+0x16>$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	f4                   	hlt    $/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	e8 17 1e 00 00       	call   f010679c <cpunum>$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	81 c2 20 50 2b f0    	add    $0xf02b5020,%edx$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	75 0c                	jne    f01049a8 <trap+0x3e>$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	e8 73 20 00 00       	call   f0106a1b <spin_lock>$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	9c                   	pushf  $/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	58                   	pop    %eax$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	f6 c4 02             	test   $0x2,%ah$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	74 24                	je     f01049d3 <trap+0x69>$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	c7 44 24 0c 1d 8d 10 	movl   $0xf0108d1d,0xc(%esp)$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	f0 $/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	f0 $/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	c7 44 24 04 3d 01 00 	movl   $0x13d,0x4(%esp)$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	00 $/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	c7 04 24 11 8d 10 f0 	movl   $0xf0108d11,(%esp)$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	e8 6d b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	83 e0 03             	and    $0x3,%eax$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	0f 85 a7 00 00 00    	jne    f0104a8b <trap+0x121>$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	e8 2b 20 00 00       	call   f0106a1b <spin_lock>$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	e8 a7 1d 00 00       	call   f010679c <cpunum>$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	83 b8 28 50 2b f0 00 	cmpl   $0x0,-0xfd4afd8(%eax)$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	75 24                	jne    f0104a25 <trap+0xbb>$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	c7 44 24 0c 36 8d 10 	movl   $0xf0108d36,0xc(%esp)$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	f0 $/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	f0 $/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	c7 44 24 04 46 01 00 	movl   $0x146,0x4(%esp)$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	00 $/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	c7 04 24 11 8d 10 f0 	movl   $0xf0108d11,(%esp)$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	e8 1b b6 ff ff       	call   f0100040 <_panic>$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	e8 72 1d 00 00       	call   f010679c <cpunum>$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	75 2d                	jne    f0104a66 <trap+0xfc>$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	e8 5e 1d 00 00       	call   f010679c <cpunum>$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	e8 96 f1 ff ff       	call   f0103be5 <env_free>$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	e8 48 1d 00 00       	call   f010679c <cpunum>$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	c7 80 28 50 2b f0 00 	movl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	00 00 00 $/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	e8 d0 02 00 00       	call   f0104d36 <sched_yield>$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	e8 31 1d 00 00       	call   f010679c <cpunum>$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	89 c7                	mov    %eax,%edi$/;"	l
f0104a7b	obj/kern/kernel.asm	/^f0104a7b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	e8 1a 1d 00 00       	call   f010679c <cpunum>$/;"	l
f0104a82	obj/kern/kernel.asm	/^f0104a82:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	8b b0 28 50 2b f0    	mov    -0xfd4afd8(%eax),%esi$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	89 35 60 4a 2b f0    	mov    %esi,0xf02b4a60$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	74 14                	je     f0104aad <trap+0x143>$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	74 1c                	je     f0104aba <trap+0x150>$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	75 4c                	jne    f0104aef <trap+0x185>$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	e8 55 bf ff ff       	call   f0100a00 <monitor>$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	eb f6                	jmp    f0104aa3 <trap+0x139>$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	e8 33 fd ff ff       	call   f01047e8 <page_fault_handler>$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	e9 c4 00 00 00       	jmp    f0104b7e <trap+0x214>$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	8b 06                	mov    (%esi),%eax$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	e8 6f 03 00 00       	call   f0104e56 <syscall>$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	e9 8f 00 00 00       	jmp    f0104b7e <trap+0x214>$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	75 16                	jne    f0104b0a <trap+0x1a0>$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	c7 04 24 3d 8d 10 f0 	movl   $0xf0108d3d,(%esp)$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	e8 ae f5 ff ff       	call   f01040ae <cprintf>$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	e8 43 fb ff ff       	call   f010464b <print_trapframe>$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	eb 74                	jmp    f0104b7e <trap+0x214>$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	75 10                	jne    f0104b1f <trap+0x1b5>$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	90                   	nop$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	e8 d4 1d 00 00       	call   f01068e9 <lapic_eoi>$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	e8 ad 2a 00 00       	call   f01075c7 <time_tick>$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	e8 17 02 00 00       	call   f0104d36 <sched_yield>$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	75 07                	jne    f0104b2b <trap+0x1c1>$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	e8 35 bb ff ff       	call   f010065e <kbd_intr>$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	eb 53                	jmp    f0104b7e <trap+0x214>$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	66 90                	xchg   %ax,%ax$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	75 07                	jne    f0104b39 <trap+0x1cf>$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	e8 0b bb ff ff       	call   f0100642 <serial_intr>$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	eb 45                	jmp    f0104b7e <trap+0x214>$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	e8 06 fb ff ff       	call   f010464b <print_trapframe>$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	75 1c                	jne    f0104b68 <trap+0x1fe>$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	c7 44 24 08 5a 8d 10 	movl   $0xf0108d5a,0x8(%esp)$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	f0 $/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	c7 44 24 04 23 01 00 	movl   $0x123,0x4(%esp)$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	00 $/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	c7 04 24 11 8d 10 f0 	movl   $0xf0108d11,(%esp)$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	e8 d8 b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	e8 2f 1c 00 00       	call   f010679c <cpunum>$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	e8 32 f2 ff ff       	call   f0103db0 <env_destroy>$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	e8 19 1c 00 00       	call   f010679c <cpunum>$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	83 b8 28 50 2b f0 00 	cmpl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	74 2a                	je     f0104bb9 <trap+0x24f>$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	e8 08 1c 00 00       	call   f010679c <cpunum>$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	75 16                	jne    f0104bb9 <trap+0x24f>$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	e8 f4 1b 00 00       	call   f010679c <cpunum>$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	e8 98 f2 ff ff       	call   f0103e51 <env_run>$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	e8 78 01 00 00       	call   f0104d36 <sched_yield>$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0 <T_DIVIDE_TRAP>:$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	6a 00                	push   $0x0$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	6a 00                	push   $0x0$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	e9 85 00 00 00       	jmp    f0104c4e <_alltraps>$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	90                   	nop$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca <T_DEBUG_TRAP>:$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	6a 00                	push   $0x0$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	6a 01                	push   $0x1$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	eb 7e                	jmp    f0104c4e <_alltraps>$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0 <T_NMI_TRAP>:$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	6a 00                	push   $0x0$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	6a 02                	push   $0x2$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	eb 78                	jmp    f0104c4e <_alltraps>$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6 <T_BRKPT_TRAP>:$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	6a 00                	push   $0x0$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	6a 03                	push   $0x3$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	eb 72                	jmp    f0104c4e <_alltraps>$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc <T_OFLOW_TRAP>:$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	6a 00                	push   $0x0$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	6a 04                	push   $0x4$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	eb 6c                	jmp    f0104c4e <_alltraps>$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2 <T_BOUND_TRAP>:$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	6a 00                	push   $0x0$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	6a 05                	push   $0x5$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	eb 66                	jmp    f0104c4e <_alltraps>$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8 <T_ILLOP_TRAP>:$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	6a 00                	push   $0x0$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	6a 06                	push   $0x6$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	eb 60                	jmp    f0104c4e <_alltraps>$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee <T_DEVICE_TRAP>:$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	6a 00                	push   $0x0$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	6a 07                	push   $0x7$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	eb 5a                	jmp    f0104c4e <_alltraps>$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4 <T_DBLFLT_TRAP>:$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	6a 08                	push   $0x8$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	eb 56                	jmp    f0104c4e <_alltraps>$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8 <T_TSS_TRAP>:$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	6a 0a                	push   $0xa$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	eb 52                	jmp    f0104c4e <_alltraps>$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc <T_SEGNP_TRAP>:$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	6a 0b                	push   $0xb$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	eb 4e                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00 <T_STACK_TRAP>:$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	6a 0c                	push   $0xc$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	eb 4a                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04 <T_GPFLT_TRAP>:$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	6a 0d                	push   $0xd$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	eb 46                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08 <T_PGFLT_TRAP>:$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	6a 0e                	push   $0xe$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	eb 42                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c <T_FPERR_TRAP>:$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	6a 00                	push   $0x0$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	6a 10                	push   $0x10$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	eb 3c                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12 <T_ALIGN_TRAP>:$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	6a 00                	push   $0x0$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	6a 11                	push   $0x11$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	eb 36                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18 <T_MCHK_TRAP>:$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	6a 00                	push   $0x0$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	6a 12                	push   $0x12$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	eb 30                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e <T_SIMDERR_TRAP>:$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	6a 00                	push   $0x0$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	6a 13                	push   $0x13$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	eb 2a                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24 <T_SYSCALL_TRAP>:$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	6a 00                	push   $0x0$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	6a 30                	push   $0x30$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	eb 24                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a <IRQ_TIMER_TRAP>:$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	6a 00                	push   $0x0$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	6a 20                	push   $0x20$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	eb 1e                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30 <IRQ_KBD_TRAP>:$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	6a 00                	push   $0x0$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	6a 21                	push   $0x21$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	eb 18                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36 <IRQ_SERIAL_TRAP>:$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	6a 00                	push   $0x0$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	6a 24                	push   $0x24$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	eb 12                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c <IRQ_SPURIOUS_TRAP>:$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	6a 00                	push   $0x0$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	6a 27                	push   $0x27$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	eb 0c                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42 <IRQ_IDE_TRAP>:$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	6a 00                	push   $0x0$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	6a 2e                	push   $0x2e$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	eb 06                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48 <IRQ_ERROR_TRAP>:$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	6a 00                	push   $0x0$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	6a 33                	push   $0x33$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	eb 00                	jmp    f0104c4e <_alltraps>$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e <_alltraps>:$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	1e                   	push   %ds$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	06                   	push   %es$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	60                   	pusha  $/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	8e d8                	mov    %eax,%ds$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	8e c0                	mov    %eax,%es$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	54                   	push   %esp$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	e8 0b fd ff ff       	call   f010496a <trap>$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60 <sched_halt>:$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	55                   	push   %ebp$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	8b 15 48 42 2b f0    	mov    0xf02b4248,%edx$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	76 0f                	jbe    f0104c8b <sched_halt+0x2b>$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	75 e8                	jne    f0104c71 <sched_halt+0x11>$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	eb 07                	jmp    f0104c92 <sched_halt+0x32>$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	75 1a                	jne    f0104cac <sched_halt+0x4c>$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	c7 04 24 70 8f 10 f0 	movl   $0xf0108f70,(%esp)$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	e8 10 f4 ff ff       	call   f01040ae <cprintf>$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	e8 56 bd ff ff       	call   f0100a00 <monitor>$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	eb f2                	jmp    f0104c9e <sched_halt+0x3e>$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	e8 eb 1a 00 00       	call   f010679c <cpunum>$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	c7 80 28 50 2b f0 00 	movl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	00 00 00 $/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	a1 98 4e 2b f0       	mov    0xf02b4e98,%eax$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	77 20                	ja     f0104cea <sched_halt+0x8a>$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	f0 $/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	00 $/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	c7 04 24 99 8f 10 f0 	movl   $0xf0108f99,(%esp)$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	e8 56 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	e8 a5 1a 00 00       	call   f010679c <cpunum>$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	81 c2 20 50 2b f0    	add    $0xf02b5020,%edx$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	e8 b2 1d 00 00       	call   f0106ac7 <spin_unlock>$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	f3 90                	pause  $/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	e8 80 1a 00 00       	call   f010679c <cpunum>$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	8b 80 30 50 2b f0    	mov    -0xfd4afd0(%eax),%eax$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	89 c4                	mov    %eax,%esp$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	6a 00                	push   $0x0$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	6a 00                	push   $0x0$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	fb                   	sti    $/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	f4                   	hlt    $/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	eb fd                	jmp    f0104d31 <sched_halt+0xd1>$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	c9                   	leave  $/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	c3                   	ret    $/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36 <sched_yield>:$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	55                   	push   %ebp$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	53                   	push   %ebx$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	e8 5a 1a 00 00       	call   f010679c <cpunum>$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	83 b8 28 50 2b f0 00 	cmpl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	74 17                	je     f0104d6a <sched_yield+0x34>$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	e8 44 1a 00 00       	call   f010679c <cpunum>$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	8b 0d 48 42 2b f0    	mov    0xf02b4248,%ecx$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	eb 1b                	jmp    f0104d95 <sched_yield+0x5f>$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	6b d0 7c             	imul   $0x7c,%eax,%edx$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	01 ca                	add    %ecx,%edx$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	83 7a 54 02          	cmpl   $0x2,0x54(%edx)$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	75 08                	jne    f0104d8d <sched_yield+0x57>$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	e8 c4 f0 ff ff       	call   f0103e51 <env_run>$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	75 e1                	jne    f0104d7a <sched_yield+0x44>$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	e8 fe 19 00 00       	call   f010679c <cpunum>$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	83 b8 28 50 2b f0 00 	cmpl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	75 0f                	jne    f0104db9 <sched_yield+0x83>$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	6b c3 7c             	imul   $0x7c,%ebx,%eax$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	03 05 48 42 2b f0    	add    0xf02b4248,%eax$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	74 20                	je     f0104dd9 <sched_yield+0xa3>$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	e8 de 19 00 00       	call   f010679c <cpunum>$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	83 b8 28 50 2b f0 00 	cmpl   $0x0,-0xfd4afd8(%eax)$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	74 20                	je     f0104dea <sched_yield+0xb4>$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	6b c3 7c             	imul   $0x7c,%ebx,%eax$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	03 05 48 42 2b f0    	add    0xf02b4248,%eax$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	75 11                	jne    f0104dea <sched_yield+0xb4>$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	6b c3 7c             	imul   $0x7c,%ebx,%eax$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	03 05 48 42 2b f0    	add    0xf02b4248,%eax$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	e8 67 f0 ff ff       	call   f0103e51 <env_run>$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	e8 71 fe ff ff       	call   f0104c60 <sched_halt>$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	5b                   	pop    %ebx$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	5d                   	pop    %ebp$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	c3                   	ret    $/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00 <sys_try_transmit_pkt>:$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	55                   	push   %ebp$/;"	l
f0104e01	obj/kern/kernel.asm	/^f0104e01:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	56                   	push   %esi$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	53                   	push   %ebx$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	81 fb ee 05 00 00    	cmp    $0x5ee,%ebx$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	77 34                	ja     f0104e4a <sys_try_transmit_pkt+0x4a>$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	e8 81 19 00 00       	call   f010679c <cpunum>$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	00 $/;"	l
f0104e23	obj/kern/kernel.asm	/^f0104e23:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	e8 f9 e7 ff ff       	call   f0103635 <user_mem_assert>$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	e8 1e 20 00 00       	call   f0106e66 <try_transmit_pkt>$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	eb 05                	jmp    f0104e4f <sys_try_transmit_pkt+0x4f>$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	5b                   	pop    %ebx$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	5e                   	pop    %esi$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	5d                   	pop    %ebp$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	c3                   	ret    $/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56 <syscall>:$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	55                   	push   %ebp$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	57                   	push   %edi$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	56                   	push   %esi$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	53                   	push   %ebx$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	0f 87 51 06 00 00    	ja     f01054bc <syscall+0x666>$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	ff 24 85 e8 8f 10 f0 	jmp    *-0xfef7018(,%eax,4)$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	e8 25 19 00 00       	call   f010679c <cpunum>$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	00 $/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	e8 97 e7 ff ff       	call   f0103635 <user_mem_assert>$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	c7 04 24 a6 8f 10 f0 	movl   $0xf0108fa6,(%esp)$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	e8 f6 f1 ff ff       	call   f01040ae <cprintf>$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	e9 45 06 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	e8 a9 b7 ff ff       	call   f0100670 <cons_getc>$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	e9 3b 06 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	e8 c7 18 00 00       	call   f010679c <cpunum>$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	e9 21 06 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	00 $/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	e8 90 e7 ff ff       	call   f0103690 <envid2env>$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	89 c2                	mov    %eax,%edx$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	85 c0                	test   %eax,%eax$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	78 10                	js     f0104f16 <syscall+0xc0>$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	e8 9f ee ff ff       	call   f0103db0 <env_destroy>$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	89 d0                	mov    %edx,%eax$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	e9 ea 05 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	00 $/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	e8 59 e7 ff ff       	call   f0103690 <envid2env>$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	85 c0                	test   %eax,%eax$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	78 67                	js     f0104fa2 <syscall+0x14c>$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	77 62                	ja     f0104fa6 <syscall+0x150>$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	75 60                	jne    f0104fad <syscall+0x157>$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	f6 45 14 05          	testb  $0x5,0x14(%ebp)$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	74 61                	je     f0104fb4 <syscall+0x15e>$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	81 e3 f8 f1 ff ff    	and    $0xfffff1f8,%ebx$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	75 5d                	jne    f0104fbb <syscall+0x165>$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	e8 0b c1 ff ff       	call   f0101075 <page_alloc>$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	89 c6                	mov    %eax,%esi$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	85 c0                	test   %eax,%eax$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	74 52                	je     f0104fc2 <syscall+0x16c>$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	e8 ab c3 ff ff       	call   f010133b <page_insert>$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	89 c7                	mov    %eax,%edi$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	85 c0                	test   %eax,%eax$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	79 31                	jns    f0104fc7 <syscall+0x171>$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	e8 68 c1 ff ff       	call   f0101106 <page_free>$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	89 fb                	mov    %edi,%ebx$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	eb 25                	jmp    f0104fc7 <syscall+0x171>$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	89 c3                	mov    %eax,%ebx$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	eb 21                	jmp    f0104fc7 <syscall+0x171>$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	eb 1a                	jmp    f0104fc7 <syscall+0x171>$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	eb 13                	jmp    f0104fc7 <syscall+0x171>$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	eb 0c                	jmp    f0104fc7 <syscall+0x171>$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	eb 05                	jmp    f0104fc7 <syscall+0x171>$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	89 d8                	mov    %ebx,%eax$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	e9 39 05 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	00 $/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	e8 a8 e6 ff ff       	call   f0103690 <envid2env>$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	89 c2                	mov    %eax,%edx$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	85 d2                	test   %edx,%edx$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	0f 88 15 05 00 00    	js     f0105507 <syscall+0x6b1>$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	00 $/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	e8 84 e6 ff ff       	call   f0103690 <envid2env>$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	85 c0                	test   %eax,%eax$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	0f 88 f3 04 00 00    	js     f0105507 <syscall+0x6b1>$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010501b	obj/kern/kernel.asm	/^f010501b:	0f 87 89 00 00 00    	ja     f01050aa <syscall+0x254>$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	0f 85 86 00 00 00    	jne    f01050b4 <syscall+0x25e>$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	0f 87 83 00 00 00    	ja     f01050be <syscall+0x268>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	0f 85 80 00 00 00    	jne    f01050c8 <syscall+0x272>$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	e8 a9 c1 ff ff       	call   f010120d <page_lookup>$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	85 c0                	test   %eax,%eax$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	74 6a                	je     f01050d2 <syscall+0x27c>$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	f6 45 1c 05          	testb  $0x5,0x1c(%ebp)$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	74 6e                	je     f01050dc <syscall+0x286>$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	f7 45 1c f8 f1 ff ff 	testl  $0xfffff1f8,0x1c(%ebp)$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	75 6f                	jne    f01050e6 <syscall+0x290>$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	74 08                	je     f0105085 <syscall+0x22f>$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	74 6b                	je     f01050f0 <syscall+0x29a>$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	8b 7d 1c             	mov    0x1c(%ebp),%edi$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	e8 96 c2 ff ff       	call   f010133b <page_insert>$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	e9 5d 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	e9 53 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	e9 49 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	e9 3f 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	e9 35 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	e9 2b 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	e9 21 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	e9 17 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	e9 0d 04 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	00 $/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	e8 7c e5 ff ff       	call   f0103690 <envid2env>$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	85 c0                	test   %eax,%eax$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	0f 88 eb 03 00 00    	js     f0105507 <syscall+0x6b1>$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	77 28                	ja     f010514d <syscall+0x2f7>$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	75 29                	jne    f0105157 <syscall+0x301>$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	e8 77 c1 ff ff       	call   f01012ba <page_remove>$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	e9 ba 03 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	e9 b0 03 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	e9 a6 03 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	e8 36 16 00 00       	call   f010679c <cpunum>$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	e8 20 e6 ff ff       	call   f01037a1 <env_alloc>$/;"	l
f0105181	obj/kern/kernel.asm	/^f0105181:	89 c2                	mov    %eax,%edx$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	85 c0                	test   %eax,%eax$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	78 2e                	js     f01051b5 <syscall+0x35f>$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	e8 06 16 00 00       	call   f010679c <cpunum>$/;"	l
f0105196	obj/kern/kernel.asm	/^f0105196:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	8b b0 28 50 2b f0    	mov    -0xfd4afd8(%eax),%esi$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	89 df                	mov    %ebx,%edi$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01051b5	obj/kern/kernel.asm	/^f01051b5:	89 d0                	mov    %edx,%eax$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	e9 4b 03 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	00 $/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	e8 ba e4 ff ff       	call   f0103690 <envid2env>$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	85 c0                	test   %eax,%eax$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	0f 88 29 03 00 00    	js     f0105507 <syscall+0x6b1>$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	74 06                	je     f01051ea <syscall+0x394>$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	75 13                	jne    f01051fd <syscall+0x3a7>$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	89 70 54             	mov    %esi,0x54(%eax)$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	e9 0a 03 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	e9 00 03 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	00 $/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	e8 6f e4 ff ff       	call   f0103690 <envid2env>$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	85 c0                	test   %eax,%eax$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	0f 88 de 02 00 00    	js     f0105507 <syscall+0x6b1>$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233:	00 $/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	e8 c7 bf ff ff       	call   f010120d <page_lookup>$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	85 c0                	test   %eax,%eax$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	75 23                	jne    f010526d <syscall+0x417>$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	c7 44 24 08 bc 8f 10 	movl   $0xf0108fbc,0x8(%esp)$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	f0 $/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	c7 44 24 04 a2 00 00 	movl   $0xa2,0x4(%esp)$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	00 $/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	c7 04 24 ab 8f 10 f0 	movl   $0xf0108fab,(%esp)$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	e8 d3 ad ff ff       	call   f0100040 <_panic>$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	66 83 48 34 03       	orw    $0x3,0x34(%eax)$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	e9 77 02 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	00 $/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	e8 e6 e3 ff ff       	call   f0103690 <envid2env>$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	85 c0                	test   %eax,%eax$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	0f 88 55 02 00 00    	js     f0105507 <syscall+0x6b1>$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	89 48 64             	mov    %ecx,0x64(%eax)$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	e9 42 02 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	e8 6c fa ff ff       	call   f0104d36 <sched_yield>$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	00 $/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	e8 ac e3 ff ff       	call   f0103690 <envid2env>$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	85 c0                	test   %eax,%eax$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	0f 88 1b 02 00 00    	js     f0105507 <syscall+0x6b1>$/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	83 78 54 04          	cmpl   $0x4,0x54(%eax)$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	0f 85 fe 00 00 00    	jne    f01053f7 <syscall+0x5a1>$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	0f 84 fe 00 00 00    	je     f0105401 <syscall+0x5ab>$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	0f 87 c9 01 00 00    	ja     f01054d9 <syscall+0x683>$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	0f 85 ee 00 00 00    	jne    f010540b <syscall+0x5b5>$/;"	l
f010531d	obj/kern/kernel.asm	/^f010531d:	f6 45 18 05          	testb  $0x5,0x18(%ebp)$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	0f 84 ee 00 00 00    	je     f0105415 <syscall+0x5bf>$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	0f 85 eb 00 00 00    	jne    f010541f <syscall+0x5c9>$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	e8 63 14 00 00       	call   f010679c <cpunum>$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	e8 b2 be ff ff       	call   f010120d <page_lookup>$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	85 c0                	test   %eax,%eax$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	0f 85 67 01 00 00    	jne    f01054ca <syscall+0x674>$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	e9 c1 00 00 00       	jmp    f0105429 <syscall+0x5d3>$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	66 90                	xchg   %ax,%ax$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	0f 84 bd 00 00 00    	je     f0105433 <syscall+0x5dd>$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	81 f9 ff ff bf ee    	cmp    $0xeebfffff,%ecx$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	0f 87 51 01 00 00    	ja     f01054d9 <syscall+0x683>$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	e8 99 bf ff ff       	call   f010133b <page_insert>$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	89 c3                	mov    %eax,%ebx$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	85 c0                	test   %eax,%eax$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	0f 88 91 00 00 00    	js     f010543d <syscall+0x5e7>$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	c6 46 68 00          	movb   $0x0,0x68(%esi)$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	e8 e4 13 00 00       	call   f010679c <cpunum>$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	89 46 74             	mov    %eax,0x74(%esi)$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	89 42 70             	mov    %eax,0x70(%edx)$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	83 fb ff             	cmp    $0xffffffff,%ebx$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	0f 45 45 18          	cmovne 0x18(%ebp),%eax$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	89 42 78             	mov    %eax,0x78(%edx)$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	c7 42 1c 00 00 00 00 	movl   $0x0,0x1c(%edx)$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	c7 42 54 02 00 00 00 	movl   $0x2,0x54(%edx)$/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	e9 10 01 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01053f7	obj/kern/kernel.asm	/^f01053f7:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	e9 06 01 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	e9 fc 00 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	e9 f2 00 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	e9 e8 00 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	e9 de 00 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	e9 d4 00 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	e9 ca 00 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	e9 c5 00 00 00       	jmp    f0105507 <syscall+0x6b1>$/;"	l
f0105442	obj/kern/kernel.asm	/^f0105442:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	77 09                	ja     f0105454 <syscall+0x5fe>$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	75 6f                	jne    f01054c3 <syscall+0x66d>$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	e8 43 13 00 00       	call   f010679c <cpunum>$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	e8 31 13 00 00       	call   f010679c <cpunum>$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	0f 46 55 0c          	cmovbe 0xc(%ebp),%edx$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	e8 10 13 00 00       	call   f010679c <cpunum>$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	e8 95 f8 ff ff       	call   f0104d36 <sched_yield>$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	e8 5b 21 00 00       	call   f0107601 <time_msec>$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	eb 5f                	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	e8 46 f9 ff ff       	call   f0104e00 <sys_try_transmit_pkt>$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	eb 4b                	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	eb 44                	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01054c3	obj/kern/kernel.asm	/^f01054c3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	eb 3d                	jmp    f0105507 <syscall+0x6b1>$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	0f 85 94 fe ff ff    	jne    f0105368 <syscall+0x512>$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	e9 9d fe ff ff       	jmp    f0105376 <syscall+0x520>$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	e8 b7 12 00 00       	call   f010679c <cpunum>$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	89 42 70             	mov    %eax,0x70(%edx)$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	e9 d5 fe ff ff       	jmp    f01053dc <syscall+0x586>$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	5b                   	pop    %ebx$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	5e                   	pop    %esi$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	5f                   	pop    %edi$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	5d                   	pop    %ebp$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	c3                   	ret    $/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510 <stab_binsearch>:$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	55                   	push   %ebp$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	89 e5                	mov    %esp,%ebp$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513:	57                   	push   %edi$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	56                   	push   %esi$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	53                   	push   %ebx$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	e9 88 00 00 00       	jmp    f01055c0 <stab_binsearch+0xb0>$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	01 d8                	add    %ebx,%eax$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	89 c7                	mov    %eax,%edi$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	01 c7                	add    %eax,%edi$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	d1 ff                	sar    %edi$/;"	d
f0105546	obj/kern/kernel.asm	/^f0105546:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	89 f8                	mov    %edi,%eax$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	eb 03                	jmp    f0105556 <stab_binsearch+0x46>$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	7f 1f                	jg     f0105579 <stab_binsearch+0x69>$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	75 ee                	jne    f0105553 <stab_binsearch+0x43>$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	76 18                	jbe    f010558f <stab_binsearch+0x7f>$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	eb 05                	jmp    f010557e <stab_binsearch+0x6e>$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	eb 42                	jmp    f01055c0 <stab_binsearch+0xb0>$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	eb 31                	jmp    f01055c0 <stab_binsearch+0xb0>$/;"	l
f010558f	obj/kern/kernel.asm	/^f010558f:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105592	obj/kern/kernel.asm	/^f0105592:	73 17                	jae    f01055ab <stab_binsearch+0x9b>$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	89 07                	mov    %eax,(%edi)$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	eb 15                	jmp    f01055c0 <stab_binsearch+0xb0>$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	89 1f                	mov    %ebx,(%edi)$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	89 c3                	mov    %eax,%ebx$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	0f 8e 6f ff ff ff    	jle    f0105538 <stab_binsearch+0x28>$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	75 0f                	jne    f01055de <stab_binsearch+0xce>$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	8b 00                	mov    (%eax),%eax$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	89 07                	mov    %eax,(%edi)$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	eb 2c                	jmp    f010560a <stab_binsearch+0xfa>$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	8b 00                	mov    (%eax),%eax$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	8b 0f                	mov    (%edi),%ecx$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	eb 03                	jmp    f01055f6 <stab_binsearch+0xe6>$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	39 c8                	cmp    %ecx,%eax$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	7e 0b                	jle    f0105605 <stab_binsearch+0xf5>$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105601	obj/kern/kernel.asm	/^f0105601:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105603	obj/kern/kernel.asm	/^f0105603:	75 ee                	jne    f01055f3 <stab_binsearch+0xe3>$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	89 07                	mov    %eax,(%edi)$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	83 c4 14             	add    $0x14,%esp$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	5b                   	pop    %ebx$/;"	l
f010560e	obj/kern/kernel.asm	/^f010560e:	5e                   	pop    %esi$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	5f                   	pop    %edi$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	5d                   	pop    %ebp$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	c3                   	ret    $/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612 <debuginfo_eip>:$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	55                   	push   %ebp$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	89 e5                	mov    %esp,%ebp$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	57                   	push   %edi$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	56                   	push   %esi$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	53                   	push   %ebx$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	c7 06 28 90 10 f0    	movl   $0xf0109028,(%esi)$/;"	l
f0105627	obj/kern/kernel.asm	/^f0105627:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	c7 46 08 28 90 10 f0 	movl   $0xf0109028,0x8(%esi)$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	0f 87 ca 00 00 00    	ja     f010571c <debuginfo_eip+0x10a>$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	e8 45 11 00 00       	call   f010679c <cpunum>$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	00 $/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	00 $/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	00 $/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	e8 2e df ff ff       	call   f01035ae <user_mem_check>$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	85 c0                	test   %eax,%eax$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	0f 88 52 02 00 00    	js     f01058da <debuginfo_eip+0x2c8>$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105690	obj/kern/kernel.asm	/^f0105690:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	e8 f0 10 00 00       	call   f010679c <cpunum>$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	00 $/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	89 da                	mov    %ebx,%edx$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01056b9	obj/kern/kernel.asm	/^f01056b9:	29 ca                	sub    %ecx,%edx$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	e8 d1 de ff ff       	call   f01035ae <user_mem_check>$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	85 c0                	test   %eax,%eax$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	0f 88 fc 01 00 00    	js     f01058e1 <debuginfo_eip+0x2cf>$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	e8 b2 10 00 00       	call   f010679c <cpunum>$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	00 $/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	29 ca                	sub    %ecx,%edx$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	8b 80 28 50 2b f0    	mov    -0xfd4afd8(%eax),%eax$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	e8 9b de ff ff       	call   f01035ae <user_mem_check>$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	85 c0                	test   %eax,%eax$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	79 1f                	jns    f0105736 <debuginfo_eip+0x124>$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	e9 cc 01 00 00       	jmp    f01058e8 <debuginfo_eip+0x2d6>$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	c7 45 bc 92 97 11 f0 	movl   $0xf0119792,-0x44(%ebp)$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	c7 45 c0 85 54 11 f0 	movl   $0xf0115485,-0x40(%ebp)$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	bb 84 54 11 f0       	mov    $0xf0115484,%ebx$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	c7 45 c4 50 98 10 f0 	movl   $0xf0109850,-0x3c(%ebp)$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	39 45 c0             	cmp    %eax,-0x40(%ebp)$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	0f 83 ad 01 00 00    	jae    f01058ef <debuginfo_eip+0x2dd>$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	0f 85 aa 01 00 00    	jne    f01058f6 <debuginfo_eip+0x2e4>$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	89 d8                	mov    %ebx,%eax$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	e8 90 fd ff ff       	call   f0105510 <stab_binsearch>$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	85 c0                	test   %eax,%eax$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	0f 84 72 01 00 00    	je     f01058fd <debuginfo_eip+0x2eb>$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	89 d8                	mov    %ebx,%eax$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	e8 64 fd ff ff       	call   f0105510 <stab_binsearch>$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	39 d0                	cmp    %edx,%eax$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	7f 32                	jg     f01057e8 <debuginfo_eip+0x1d6>$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	8d 0c 8b             	lea    (%ebx,%ecx,4),%ecx$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	8b 19                	mov    (%ecx),%ebx$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	89 5d b8             	mov    %ebx,-0x48(%ebp)$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	8b 5d bc             	mov    -0x44(%ebp),%ebx$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	2b 5d c0             	sub    -0x40(%ebp),%ebx$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	39 5d b8             	cmp    %ebx,-0x48(%ebp)$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	73 09                	jae    f01057d8 <debuginfo_eip+0x1c6>$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	03 5d c0             	add    -0x40(%ebp),%ebx$/;"	l
f01057d5	obj/kern/kernel.asm	/^f01057d5:	89 5e 08             	mov    %ebx,0x8(%esi)$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
f01057db	obj/kern/kernel.asm	/^f01057db:	89 4e 10             	mov    %ecx,0x10(%esi)$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	29 cf                	sub    %ecx,%edi$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	eb 0f                	jmp    f01057f7 <debuginfo_eip+0x1e5>$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	00 $/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	e8 21 09 00 00       	call   f010612b <strfind>$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	89 f8                	mov    %edi,%eax$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	e8 e5 fc ff ff       	call   f0105510 <stab_binsearch>$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	0f 8f cd 00 00 00    	jg     f0105904 <debuginfo_eip+0x2f2>$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	29 d8                	sub    %ebx,%eax$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	89 46 04             	mov    %eax,0x4(%esi)$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	89 de                	mov    %ebx,%esi$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	eb 06                	jmp    f0105855 <debuginfo_eip+0x243>$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	89 c7                	mov    %eax,%edi$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	39 c6                	cmp    %eax,%esi$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	7f 3c                	jg     f0105897 <debuginfo_eip+0x285>$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	75 08                	jne    f010586c <debuginfo_eip+0x25a>$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	eb 11                	jmp    f010587d <debuginfo_eip+0x26b>$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	75 de                	jne    f010584f <debuginfo_eip+0x23d>$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	74 d8                	je     f010584f <debuginfo_eip+0x23d>$/;"	l
f0105877	obj/kern/kernel.asm	/^f0105877:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010587a	obj/kern/kernel.asm	/^f010587a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	8b 04 87             	mov    (%edi,%eax,4),%eax$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	39 d0                	cmp    %edx,%eax$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	73 0a                	jae    f010589a <debuginfo_eip+0x288>$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	89 06                	mov    %eax,(%esi)$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	eb 03                	jmp    f010589a <debuginfo_eip+0x288>$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	39 da                	cmp    %ebx,%edx$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	7d 67                	jge    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	89 d0                	mov    %edx,%eax$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	eb 04                	jmp    f01058c0 <debuginfo_eip+0x2ae>$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	7e 47                	jle    f010590b <debuginfo_eip+0x2f9>$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	83 c2 0c             	add    $0xc,%edx$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	74 e9                	je     f01058bc <debuginfo_eip+0x2aa>$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	eb 36                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	eb 2f                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	eb 28                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	eb 21                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	eb 1a                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	eb 13                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	eb 0c                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	eb 05                	jmp    f0105910 <debuginfo_eip+0x2fe>$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	5b                   	pop    %ebx$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	5e                   	pop    %esi$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	5f                   	pop    %edi$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	5d                   	pop    %ebp$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	c3                   	ret    $/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920 <printnum>:$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	55                   	push   %ebp$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	89 e5                	mov    %esp,%ebp$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	57                   	push   %edi$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	56                   	push   %esi$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	53                   	push   %ebx$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	89 d7                	mov    %edx,%edi$/;"	l
f010592e	obj/kern/kernel.asm	/^f010592e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105937	obj/kern/kernel.asm	/^f0105937:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010593a	obj/kern/kernel.asm	/^f010593a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	39 c1                	cmp    %eax,%ecx$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	72 05                	jb     f0105954 <printnum+0x34>$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	3b 5d e0             	cmp    -0x20(%ebp),%ebx$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	77 69                	ja     f01059bd <printnum+0x9d>$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	89 c3                	mov    %eax,%ebx$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	89 d6                	mov    %edx,%esi$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105975	obj/kern/kernel.asm	/^f0105975:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	e8 7e 1c 00 00       	call   f0107610 <__udivdi3>$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105994	obj/kern/kernel.asm	/^f0105994:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	89 fa                	mov    %edi,%edx$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	e8 73 ff ff ff       	call   f0105920 <printnum>$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	eb 1b                	jmp    f01059ca <printnum+0xaa>$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	ff d3                	call   *%ebx$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	eb 03                	jmp    f01059c0 <printnum+0xa0>$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	85 f6                	test   %esi,%esi$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	7f e8                	jg     f01059af <printnum+0x8f>$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01059ce	obj/kern/kernel.asm	/^f01059ce:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	e8 4e 1d 00 00       	call   f0107740 <__umoddi3>$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	0f be 80 32 90 10 f0 	movsbl -0xfef6fce(%eax),%eax$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	ff d0                	call   *%eax$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	5b                   	pop    %ebx$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	5e                   	pop    %esi$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	5f                   	pop    %edi$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	5d                   	pop    %ebp$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	c3                   	ret    $/;"	l
f0105a0d	obj/kern/kernel.asm	/^f0105a0d <getuint>:$/;"	l
f0105a0d	obj/kern/kernel.asm	/^f0105a0d:	55                   	push   %ebp$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	7e 0e                	jle    f0105a23 <getuint+0x16>$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	8b 02                	mov    (%edx),%eax$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	eb 22                	jmp    f0105a45 <getuint+0x38>$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	85 d2                	test   %edx,%edx$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	74 10                	je     f0105a37 <getuint+0x2a>$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	8b 02                	mov    (%edx),%eax$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	eb 0e                	jmp    f0105a45 <getuint+0x38>$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	8b 02                	mov    (%edx),%eax$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	5d                   	pop    %ebp$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	c3                   	ret    $/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47 <sprintputch>:$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	55                   	push   %ebp$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	73 0a                	jae    f0105a62 <sprintputch+0x1b>$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a5d	obj/kern/kernel.asm	/^f0105a5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	88 02                	mov    %al,(%edx)$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	5d                   	pop    %ebp$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	c3                   	ret    $/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64 <printfmt>:$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	55                   	push   %ebp$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a67	obj/kern/kernel.asm	/^f0105a67:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105a6d	obj/kern/kernel.asm	/^f0105a6d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	e8 02 00 00 00       	call   f0105a8c <vprintfmt>$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	c9                   	leave  $/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	c3                   	ret    $/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c <vprintfmt>:$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	55                   	push   %ebp$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	57                   	push   %edi$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	56                   	push   %esi$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	53                   	push   %ebx$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	eb 14                	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	85 c0                	test   %eax,%eax$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	0f 84 b3 03 00 00    	je     f0105e58 <vprintfmt+0x3cc>$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	89 f3                	mov    %esi,%ebx$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105ab4	obj/kern/kernel.asm	/^f0105ab4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105ab7	obj/kern/kernel.asm	/^f0105ab7:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	75 e1                	jne    f0105a9d <vprintfmt+0x11>$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	eb 1d                	jmp    f0105af9 <vprintfmt+0x6d>$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	89 de                	mov    %ebx,%esi$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	eb 15                	jmp    f0105af9 <vprintfmt+0x6d>$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	89 de                	mov    %ebx,%esi$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	eb 0d                	jmp    f0105af9 <vprintfmt+0x6d>$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105af2	obj/kern/kernel.asm	/^f0105af2:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	83 e9 23             	sub    $0x23,%ecx$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	80 f9 55             	cmp    $0x55,%cl$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	0f 87 2a 03 00 00    	ja     f0105e38 <vprintfmt+0x3ac>$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	ff 24 8d 80 91 10 f0 	jmp    *-0xfef6e80(,%ecx,4)$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	89 de                	mov    %ebx,%esi$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	8d 4c 48 d0          	lea    -0x30(%eax,%ecx,2),%ecx$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	8d 58 d0             	lea    -0x30(%eax),%ebx$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	77 36                	ja     f0105b67 <vprintfmt+0xdb>$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	eb e9                	jmp    f0105b1f <vprintfmt+0x93>$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	89 de                	mov    %ebx,%esi$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	eb 22                	jmp    f0105b6a <vprintfmt+0xde>$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105b4b	obj/kern/kernel.asm	/^f0105b4b:	85 c9                	test   %ecx,%ecx$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	89 de                	mov    %ebx,%esi$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	eb 9d                	jmp    f0105af9 <vprintfmt+0x6d>$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	89 de                	mov    %ebx,%esi$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	eb 92                	jmp    f0105af9 <vprintfmt+0x6d>$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	79 89                	jns    f0105af9 <vprintfmt+0x6d>$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	e9 77 ff ff ff       	jmp    f0105aec <vprintfmt+0x60>$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	89 de                	mov    %ebx,%esi$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	e9 7a ff ff ff       	jmp    f0105af9 <vprintfmt+0x6d>$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	e9 18 ff ff ff       	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	99                   	cltd   $/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	31 d0                	xor    %edx,%eax$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	29 d0                	sub    %edx,%eax$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	7f 0b                	jg     f0105bb9 <vprintfmt+0x12d>$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	8b 14 85 e0 92 10 f0 	mov    -0xfef6d20(,%eax,4),%edx$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	85 d2                	test   %edx,%edx$/;"	l
f0105bb7	obj/kern/kernel.asm	/^f0105bb7:	75 20                	jne    f0105bd9 <vprintfmt+0x14d>$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105bbd	obj/kern/kernel.asm	/^f0105bbd:	c7 44 24 08 4a 90 10 	movl   $0xf010904a,0x8(%esp)$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	f0 $/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105bc9	obj/kern/kernel.asm	/^f0105bc9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	e8 90 fe ff ff       	call   f0105a64 <printfmt>$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	e9 d8 fe ff ff       	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	c7 44 24 08 b8 7e 10 	movl   $0xf0107eb8,0x8(%esp)$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	f0 $/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	e8 70 fe ff ff       	call   f0105a64 <printfmt>$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	e9 b8 fe ff ff       	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	8b 30                	mov    (%eax),%esi$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	85 f6                	test   %esi,%esi$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	b8 43 90 10 f0       	mov    $0xf0109043,%eax$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	0f 84 97 00 00 00    	je     f0105cb8 <vprintfmt+0x22c>$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	0f 8e 9b 00 00 00    	jle    f0105cc6 <vprintfmt+0x23a>$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	e8 a1 03 00 00       	call   f0105fd8 <strnlen>$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	29 c2                	sub    %eax,%edx$/;"	l
f0105c3c	obj/kern/kernel.asm	/^f0105c3c:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	89 d3                	mov    %edx,%ebx$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	eb 0f                	jmp    f0105c62 <vprintfmt+0x1d6>$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	ff d6                	call   *%esi$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	85 db                	test   %ebx,%ebx$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	7f ed                	jg     f0105c53 <vprintfmt+0x1c7>$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	85 d2                	test   %edx,%edx$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	29 c2                	sub    %eax,%edx$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	89 d7                	mov    %edx,%edi$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	eb 50                	jmp    f0105cd2 <vprintfmt+0x246>$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	74 1e                	je     f0105ca6 <vprintfmt+0x21a>$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	76 13                	jbe    f0105ca6 <vprintfmt+0x21a>$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	eb 0d                	jmp    f0105cb3 <vprintfmt+0x227>$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105cb6	obj/kern/kernel.asm	/^f0105cb6:	eb 1a                	jmp    f0105cd2 <vprintfmt+0x246>$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	eb 0c                	jmp    f0105cd2 <vprintfmt+0x246>$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	0f be c2             	movsbl %dl,%eax$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	85 c0                	test   %eax,%eax$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	74 27                	je     f0105d07 <vprintfmt+0x27b>$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	85 db                	test   %ebx,%ebx$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	78 9e                	js     f0105c82 <vprintfmt+0x1f6>$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	79 99                	jns    f0105c82 <vprintfmt+0x1f6>$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	89 f8                	mov    %edi,%eax$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	89 c3                	mov    %eax,%ebx$/;"	l
f0105cf3	obj/kern/kernel.asm	/^f0105cf3:	eb 1a                	jmp    f0105d0f <vprintfmt+0x283>$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	ff d6                	call   *%esi$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	eb 08                	jmp    f0105d0f <vprintfmt+0x283>$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	89 fb                	mov    %edi,%ebx$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	85 db                	test   %ebx,%ebx$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	7f e2                	jg     f0105cf5 <vprintfmt+0x269>$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	e9 93 fd ff ff       	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105d21	obj/kern/kernel.asm	/^f0105d21:	7e 16                	jle    f0105d39 <vprintfmt+0x2ad>$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105d2f	obj/kern/kernel.asm	/^f0105d2f:	8b 00                	mov    (%eax),%eax$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105d34	obj/kern/kernel.asm	/^f0105d34:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	eb 32                	jmp    f0105d6b <vprintfmt+0x2df>$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	85 d2                	test   %edx,%edx$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	74 18                	je     f0105d55 <vprintfmt+0x2c9>$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d40	obj/kern/kernel.asm	/^f0105d40:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105d43	obj/kern/kernel.asm	/^f0105d43:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	8b 30                	mov    (%eax),%esi$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	89 f0                	mov    %esi,%eax$/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	eb 16                	jmp    f0105d6b <vprintfmt+0x2df>$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	8b 30                	mov    (%eax),%esi$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	89 f0                	mov    %esi,%eax$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	0f 89 80 00 00 00    	jns    f0105e00 <vprintfmt+0x374>$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	f7 d8                	neg    %eax$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	f7 da                	neg    %edx$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	eb 5e                	jmp    f0105e00 <vprintfmt+0x374>$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	e8 63 fc ff ff       	call   f0105a0d <getuint>$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	eb 4f                	jmp    f0105e00 <vprintfmt+0x374>$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	e8 54 fc ff ff       	call   f0105a0d <getuint>$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	eb 40                	jmp    f0105e00 <vprintfmt+0x374>$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	8b 00                	mov    (%eax),%eax$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	eb 0d                	jmp    f0105e00 <vprintfmt+0x374>$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	e8 12 fc ff ff       	call   f0105a0d <getuint>$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0105e08	obj/kern/kernel.asm	/^f0105e08:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	89 fa                	mov    %edi,%edx$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	e8 fc fa ff ff       	call   f0105920 <printnum>$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	e9 88 fc ff ff       	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	e9 79 fc ff ff       	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105e43	obj/kern/kernel.asm	/^f0105e43:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	89 f3                	mov    %esi,%ebx$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	eb 03                	jmp    f0105e4d <vprintfmt+0x3c1>$/;"	l
f0105e4a	obj/kern/kernel.asm	/^f0105e4a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	75 f7                	jne    f0105e4a <vprintfmt+0x3be>$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	e9 59 fc ff ff       	jmp    f0105ab1 <vprintfmt+0x25>$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	5b                   	pop    %ebx$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	5e                   	pop    %esi$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	5f                   	pop    %edi$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	5d                   	pop    %ebp$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	c3                   	ret    $/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60 <vsnprintf>:$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	55                   	push   %ebp$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	85 c0                	test   %eax,%eax$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	74 30                	je     f0105eb1 <vsnprintf+0x51>$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	85 d2                	test   %edx,%edx$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	7e 2c                	jle    f0105eb1 <vsnprintf+0x51>$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e88	obj/kern/kernel.asm	/^f0105e88:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	c7 04 24 47 5a 10 f0 	movl   $0xf0105a47,(%esp)$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	e8 e6 fb ff ff       	call   f0105a8c <vprintfmt>$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	eb 05                	jmp    f0105eb6 <vsnprintf+0x56>$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	c9                   	leave  $/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	c3                   	ret    $/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8 <snprintf>:$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	55                   	push   %ebp$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105ebe	obj/kern/kernel.asm	/^f0105ebe:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	e8 82 ff ff ff       	call   f0105e60 <vsnprintf>$/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede:	c9                   	leave  $/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	c3                   	ret    $/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0 <readline>:$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	55                   	push   %ebp$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	57                   	push   %edi$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	56                   	push   %esi$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	53                   	push   %ebx$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	85 c0                	test   %eax,%eax$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	74 10                	je     f0105f00 <readline+0x20>$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	c7 04 24 b8 7e 10 f0 	movl   $0xf0107eb8,(%esp)$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	e8 ae e1 ff ff       	call   f01040ae <cprintf>$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	e8 fe a8 ff ff       	call   f010080a <iscons>$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	89 c7                	mov    %eax,%edi$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	e8 e1 a8 ff ff       	call   f01007f9 <getchar>$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	85 c0                	test   %eax,%eax$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	79 25                	jns    f0105f43 <readline+0x63>$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	0f 84 89 00 00 00    	je     f0105fb5 <readline+0xd5>$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	c7 04 24 3f 93 10 f0 	movl   $0xf010933f,(%esp)$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	e8 72 e1 ff ff       	call   f01040ae <cprintf>$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	eb 72                	jmp    f0105fb5 <readline+0xd5>$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	74 05                	je     f0105f4d <readline+0x6d>$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	75 1a                	jne    f0105f67 <readline+0x87>$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	85 f6                	test   %esi,%esi$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	90                   	nop$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	7e 15                	jle    f0105f67 <readline+0x87>$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	85 ff                	test   %edi,%edi$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	74 0c                	je     f0105f62 <readline+0x82>$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	e8 87 a8 ff ff       	call   f01007e9 <cputchar>$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	eb ac                	jmp    f0105f13 <readline+0x33>$/;"	l
f0105f67	obj/kern/kernel.asm	/^f0105f67:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	7f 1c                	jg     f0105f8b <readline+0xab>$/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	7e 17                	jle    f0105f8b <readline+0xab>$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	85 ff                	test   %edi,%edi$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	74 08                	je     f0105f80 <readline+0xa0>$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	e8 69 a8 ff ff       	call   f01007e9 <cputchar>$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	88 9e 80 4a 2b f0    	mov    %bl,-0xfd4b580(%esi)$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	eb 88                	jmp    f0105f13 <readline+0x33>$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	74 09                	je     f0105f99 <readline+0xb9>$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	0f 85 7a ff ff ff    	jne    f0105f13 <readline+0x33>$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	85 ff                	test   %edi,%edi$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	74 0c                	je     f0105fa9 <readline+0xc9>$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	e8 40 a8 ff ff       	call   f01007e9 <cputchar>$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	c6 86 80 4a 2b f0 00 	movb   $0x0,-0xfd4b580(%esi)$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	b8 80 4a 2b f0       	mov    $0xf02b4a80,%eax$/;"	l
f0105fb5	obj/kern/kernel.asm	/^f0105fb5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	5b                   	pop    %ebx$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	5e                   	pop    %esi$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	5f                   	pop    %edi$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	5d                   	pop    %ebp$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	c3                   	ret    $/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	00 00                	add    %al,(%eax)$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0 <strlen>:$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	55                   	push   %ebp$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	eb 03                	jmp    f0105fd0 <strlen+0x10>$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105fd4	obj/kern/kernel.asm	/^f0105fd4:	75 f7                	jne    f0105fcd <strlen+0xd>$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	5d                   	pop    %ebp$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	c3                   	ret    $/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8 <strnlen>:$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	55                   	push   %ebp$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	eb 03                	jmp    f0105feb <strnlen+0x13>$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	39 d0                	cmp    %edx,%eax$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	74 06                	je     f0105ff5 <strnlen+0x1d>$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	75 f3                	jne    f0105fe8 <strnlen+0x10>$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	5d                   	pop    %ebp$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	c3                   	ret    $/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7 <strcpy>:$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	55                   	push   %ebp$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	53                   	push   %ebx$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	89 c2                	mov    %eax,%edx$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	84 db                	test   %bl,%bl$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	75 ef                	jne    f0106003 <strcpy+0xc>$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	5b                   	pop    %ebx$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	5d                   	pop    %ebp$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	c3                   	ret    $/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017 <strcat>:$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	55                   	push   %ebp$/;"	l
f0106018	obj/kern/kernel.asm	/^f0106018:	89 e5                	mov    %esp,%ebp$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	53                   	push   %ebx$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	e8 97 ff ff ff       	call   f0105fc0 <strlen>$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	01 d8                	add    %ebx,%eax$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	e8 bd ff ff ff       	call   f0105ff7 <strcpy>$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	89 d8                	mov    %ebx,%eax$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	5b                   	pop    %ebx$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	5d                   	pop    %ebp$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	c3                   	ret    $/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042 <strncpy>:$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	55                   	push   %ebp$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	89 e5                	mov    %esp,%ebp$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	56                   	push   %esi$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	53                   	push   %ebx$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	89 f3                	mov    %esi,%ebx$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	89 f2                	mov    %esi,%edx$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	eb 0f                	jmp    f0106065 <strncpy+0x23>$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	39 da                	cmp    %ebx,%edx$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	75 ed                	jne    f0106056 <strncpy+0x14>$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	89 f0                	mov    %esi,%eax$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	5b                   	pop    %ebx$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	5e                   	pop    %esi$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	5d                   	pop    %ebp$/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e:	c3                   	ret    $/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f <strlcpy>:$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	55                   	push   %ebp$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	89 e5                	mov    %esp,%ebp$/;"	l
f0106072	obj/kern/kernel.asm	/^f0106072:	56                   	push   %esi$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	53                   	push   %ebx$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	89 f0                	mov    %esi,%eax$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	85 c9                	test   %ecx,%ecx$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	75 0b                	jne    f0106092 <strlcpy+0x23>$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	eb 1d                	jmp    f01060a6 <strlcpy+0x37>$/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	83 c0 01             	add    $0x1,%eax$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	74 0b                	je     f01060a1 <strlcpy+0x32>$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	84 c9                	test   %cl,%cl$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	75 ec                	jne    f0106089 <strlcpy+0x1a>$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	89 c2                	mov    %eax,%edx$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	eb 02                	jmp    f01060a3 <strlcpy+0x34>$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	89 c2                	mov    %eax,%edx$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	29 f0                	sub    %esi,%eax$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	5b                   	pop    %ebx$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	5e                   	pop    %esi$/;"	l
f01060aa	obj/kern/kernel.asm	/^f01060aa:	5d                   	pop    %ebp$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	c3                   	ret    $/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac <strcmp>:$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	55                   	push   %ebp$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	eb 06                	jmp    f01060bd <strcmp+0x11>$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	83 c2 01             	add    $0x1,%edx$/;"	l
f01060bd	obj/kern/kernel.asm	/^f01060bd:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	84 c0                	test   %al,%al$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	74 04                	je     f01060c8 <strcmp+0x1c>$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	3a 02                	cmp    (%edx),%al$/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	74 ef                	je     f01060b7 <strcmp+0xb>$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	29 d0                	sub    %edx,%eax$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	5d                   	pop    %ebp$/;"	l
f01060d1	obj/kern/kernel.asm	/^f01060d1:	c3                   	ret    $/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2 <strncmp>:$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	55                   	push   %ebp$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	53                   	push   %ebx$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	89 c3                	mov    %eax,%ebx$/;"	l
f01060de	obj/kern/kernel.asm	/^f01060de:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	eb 06                	jmp    f01060e9 <strncmp+0x17>$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	39 d8                	cmp    %ebx,%eax$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	74 15                	je     f0106102 <strncmp+0x30>$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	84 c9                	test   %cl,%cl$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	74 04                	je     f01060f8 <strncmp+0x26>$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	3a 0a                	cmp    (%edx),%cl$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	74 eb                	je     f01060e3 <strncmp+0x11>$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	29 d0                	sub    %edx,%eax$/;"	l
f0106100	obj/kern/kernel.asm	/^f0106100:	eb 05                	jmp    f0106107 <strncmp+0x35>$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	5b                   	pop    %ebx$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	5d                   	pop    %ebp$/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	c3                   	ret    $/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a <strchr>:$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	55                   	push   %ebp$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	89 e5                	mov    %esp,%ebp$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	eb 07                	jmp    f010611d <strchr+0x13>$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	38 ca                	cmp    %cl,%dl$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	74 0f                	je     f0106129 <strchr+0x1f>$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	84 d2                	test   %dl,%dl$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	75 f2                	jne    f0106116 <strchr+0xc>$/;"	l
f0106124	obj/kern/kernel.asm	/^f0106124:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	5d                   	pop    %ebp$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	c3                   	ret    $/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b <strfind>:$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	55                   	push   %ebp$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	89 e5                	mov    %esp,%ebp$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106131	obj/kern/kernel.asm	/^f0106131:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	eb 07                	jmp    f010613e <strfind+0x13>$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	38 ca                	cmp    %cl,%dl$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	74 0a                	je     f0106145 <strfind+0x1a>$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	84 d2                	test   %dl,%dl$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	75 f2                	jne    f0106137 <strfind+0xc>$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	5d                   	pop    %ebp$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	c3                   	ret    $/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147 <memset>:$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	55                   	push   %ebp$/;"	l
f0106148	obj/kern/kernel.asm	/^f0106148:	89 e5                	mov    %esp,%ebp$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	57                   	push   %edi$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	56                   	push   %esi$/;"	l
f010614c	obj/kern/kernel.asm	/^f010614c:	53                   	push   %ebx$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	85 c9                	test   %ecx,%ecx$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	74 36                	je     f010618d <memset+0x46>$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	75 28                	jne    f0106187 <memset+0x40>$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	75 23                	jne    f0106187 <memset+0x40>$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	89 d3                	mov    %edx,%ebx$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	89 d6                	mov    %edx,%esi$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	89 d0                	mov    %edx,%eax$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	09 f0                	or     %esi,%eax$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	09 c2                	or     %eax,%edx$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	89 d0                	mov    %edx,%eax$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	09 d8                	or     %ebx,%eax$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	fc                   	cld    $/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	eb 06                	jmp    f010618d <memset+0x46>$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	fc                   	cld    $/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	89 f8                	mov    %edi,%eax$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	5b                   	pop    %ebx$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	5e                   	pop    %esi$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	5f                   	pop    %edi$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	5d                   	pop    %ebp$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	c3                   	ret    $/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194 <memmove>:$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	55                   	push   %ebp$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	89 e5                	mov    %esp,%ebp$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	57                   	push   %edi$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	56                   	push   %esi$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010619c	obj/kern/kernel.asm	/^f010619c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	39 c6                	cmp    %eax,%esi$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	73 35                	jae    f01061db <memmove+0x47>$/;"	l
f01061a6	obj/kern/kernel.asm	/^f01061a6:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	39 d0                	cmp    %edx,%eax$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	73 2e                	jae    f01061db <memmove+0x47>$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	89 d6                	mov    %edx,%esi$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	09 fe                	or     %edi,%esi$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	75 13                	jne    f01061cf <memmove+0x3b>$/;"	l
f01061bc	obj/kern/kernel.asm	/^f01061bc:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	75 0e                	jne    f01061cf <memmove+0x3b>$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01061c7	obj/kern/kernel.asm	/^f01061c7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	fd                   	std    $/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	eb 09                	jmp    f01061d8 <memmove+0x44>$/;"	l
f01061cf	obj/kern/kernel.asm	/^f01061cf:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	fd                   	std    $/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	fc                   	cld    $/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	eb 1d                	jmp    f01061f8 <memmove+0x64>$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	89 f2                	mov    %esi,%edx$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	09 c2                	or     %eax,%edx$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	75 0f                	jne    f01061f3 <memmove+0x5f>$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	75 0a                	jne    f01061f3 <memmove+0x5f>$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	89 c7                	mov    %eax,%edi$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	fc                   	cld    $/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	eb 05                	jmp    f01061f8 <memmove+0x64>$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	89 c7                	mov    %eax,%edi$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	fc                   	cld    $/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	5e                   	pop    %esi$/;"	l
f01061f9	obj/kern/kernel.asm	/^f01061f9:	5f                   	pop    %edi$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	5d                   	pop    %ebp$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	c3                   	ret    $/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc <memcpy>:$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	55                   	push   %ebp$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	e8 79 ff ff ff       	call   f0106194 <memmove>$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	c9                   	leave  $/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	c3                   	ret    $/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d <memcmp>:$/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d:	55                   	push   %ebp$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	56                   	push   %esi$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	53                   	push   %ebx$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	89 d6                	mov    %edx,%esi$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	eb 1a                	jmp    f0106249 <memcmp+0x2c>$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0106235	obj/kern/kernel.asm	/^f0106235:	38 d8                	cmp    %bl,%al$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	74 0a                	je     f0106243 <memcmp+0x26>$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010623f	obj/kern/kernel.asm	/^f010623f:	29 d8                	sub    %ebx,%eax$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	eb 0f                	jmp    f0106252 <memcmp+0x35>$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106246	obj/kern/kernel.asm	/^f0106246:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	39 f2                	cmp    %esi,%edx$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	75 e2                	jne    f010622f <memcmp+0x12>$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	5b                   	pop    %ebx$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	5e                   	pop    %esi$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	5d                   	pop    %ebp$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	c3                   	ret    $/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256 <memfind>:$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	55                   	push   %ebp$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	89 e5                	mov    %esp,%ebp$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	89 c2                	mov    %eax,%edx$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	eb 07                	jmp    f010626d <memfind+0x17>$/;"	l
f0106266	obj/kern/kernel.asm	/^f0106266:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	74 07                	je     f0106271 <memfind+0x1b>$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	39 d0                	cmp    %edx,%eax$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	72 f5                	jb     f0106266 <memfind+0x10>$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	5d                   	pop    %ebp$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	c3                   	ret    $/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273 <strtol>:$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	55                   	push   %ebp$/;"	l
f0106274	obj/kern/kernel.asm	/^f0106274:	89 e5                	mov    %esp,%ebp$/;"	l
f0106276	obj/kern/kernel.asm	/^f0106276:	57                   	push   %edi$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	56                   	push   %esi$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	53                   	push   %ebx$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	eb 03                	jmp    f0106284 <strtol+0x11>$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	74 f5                	je     f0106281 <strtol+0xe>$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	74 f0                	je     f0106281 <strtol+0xe>$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	75 0a                	jne    f01062a0 <strtol+0x2d>$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106299	obj/kern/kernel.asm	/^f0106299:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	eb 11                	jmp    f01062b1 <strtol+0x3e>$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	75 07                	jne    f01062b1 <strtol+0x3e>$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	75 15                	jne    f01062cd <strtol+0x5a>$/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	75 10                	jne    f01062cd <strtol+0x5a>$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	75 0a                	jne    f01062cd <strtol+0x5a>$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	83 c2 02             	add    $0x2,%edx$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	eb 10                	jmp    f01062dd <strtol+0x6a>$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	85 c0                	test   %eax,%eax$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	75 0c                	jne    f01062dd <strtol+0x6a>$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	b0 0a                	mov    $0xa,%al$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	75 05                	jne    f01062dd <strtol+0x6a>$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	b0 08                	mov    $0x8,%al$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f01062eb	obj/kern/kernel.asm	/^f01062eb:	89 f0                	mov    %esi,%eax$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	3c 09                	cmp    $0x9,%al$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	77 08                	ja     f01062f9 <strtol+0x86>$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	eb 20                	jmp    f0106319 <strtol+0xa6>$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	89 f0                	mov    %esi,%eax$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	3c 19                	cmp    $0x19,%al$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	77 08                	ja     f010630a <strtol+0x97>$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	eb 0f                	jmp    f0106319 <strtol+0xa6>$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	89 f0                	mov    %esi,%eax$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	3c 19                	cmp    $0x19,%al$/;"	l
f0106311	obj/kern/kernel.asm	/^f0106311:	77 16                	ja     f0106329 <strtol+0xb6>$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0106319	obj/kern/kernel.asm	/^f0106319:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	7d 0f                	jge    f010632d <strtol+0xba>$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	01 cb                	add    %ecx,%ebx$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	eb bc                	jmp    f01062e5 <strtol+0x72>$/;"	l
f0106329	obj/kern/kernel.asm	/^f0106329:	89 d8                	mov    %ebx,%eax$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	eb 02                	jmp    f010632f <strtol+0xbc>$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	89 d8                	mov    %ebx,%eax$/;"	l
f010632f	obj/kern/kernel.asm	/^f010632f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	74 05                	je     f010633a <strtol+0xc7>$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106338	obj/kern/kernel.asm	/^f0106338:	89 16                	mov    %edx,(%esi)$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	f7 d8                	neg    %eax$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	85 ff                	test   %edi,%edi$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	5b                   	pop    %ebx$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	5e                   	pop    %esi$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	5f                   	pop    %edi$/;"	l
f0106344	obj/kern/kernel.asm	/^f0106344:	5d                   	pop    %ebp$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	c3                   	ret    $/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348 <mpentry_start>:$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	fa                   	cli    $/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	31 c0                	xor    %eax,%eax$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	8e d8                	mov    %eax,%ds$/;"	l
f010634d	obj/kern/kernel.asm	/^f010634d:	8e c0                	mov    %eax,%es$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	8e d0                	mov    %eax,%ss$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106354	obj/kern/kernel.asm	/^f0106354:	74 70                	je     f01063c6 <mpentry_end+0x4>$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106359	obj/kern/kernel.asm	/^f0106359:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	08 00                	or     %al,(%eax)$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368 <start32>:$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	8e d8                	mov    %eax,%ds$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	8e c0                	mov    %eax,%es$/;"	l
f0106370	obj/kern/kernel.asm	/^f0106370:	8e d0                	mov    %eax,%ss$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	8e e0                	mov    %eax,%fs$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	8e e8                	mov    %eax,%gs$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	b8 00 20 12 00       	mov    $0x122000,%eax$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106385	obj/kern/kernel.asm	/^f0106385:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	8b 25 90 4e 2b f0    	mov    0xf02b4e90,%esp$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	b8 1a 02 10 f0       	mov    $0xf010021a,%eax$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	ff d0                	call   *%eax$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f <spin>:$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	eb fe                	jmp    f010639f <spin>$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4 <gdt>:$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	ff                   	(bad)  $/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	ff 00                	incl   (%eax)$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	00 00                	add    %al,(%eax)$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc <gdtdesc>:$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	17                   	pop    %ss$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2 <mpentry_end>:$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	90                   	nop$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0 <mpsearch1>:$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	55                   	push   %ebp$/;"	l
f01063d1	obj/kern/kernel.asm	/^f01063d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01063d3	obj/kern/kernel.asm	/^f01063d3:	56                   	push   %esi$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	53                   	push   %ebx$/;"	l
f01063d5	obj/kern/kernel.asm	/^f01063d5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	8b 0d 94 4e 2b f0    	mov    0xf02b4e94,%ecx$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	89 c3                	mov    %eax,%ebx$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	72 20                	jb     f0106407 <mpsearch1+0x37>$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	f0 $/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	00 $/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	c7 04 24 dd 94 10 f0 	movl   $0xf01094dd,(%esp)$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	e8 39 9c ff ff       	call   f0100040 <_panic>$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	01 d0                	add    %edx,%eax$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	89 c2                	mov    %eax,%edx$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106416	obj/kern/kernel.asm	/^f0106416:	77 20                	ja     f0106438 <mpsearch1+0x68>$/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	f0 $/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	00 $/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	c7 04 24 dd 94 10 f0 	movl   $0xf01094dd,(%esp)$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	e8 08 9c ff ff       	call   f0100040 <_panic>$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	eb 36                	jmp    f0106476 <mpsearch1+0xa6>$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	00 $/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	c7 44 24 04 ed 94 10 	movl   $0xf01094ed,0x4(%esp)$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	f0 $/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	e8 c5 fd ff ff       	call   f010621d <memcmp>$/;"	l
f0106458	obj/kern/kernel.asm	/^f0106458:	85 c0                	test   %eax,%eax$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a:	75 17                	jne    f0106473 <mpsearch1+0xa3>$/;"	l
f010645c	obj/kern/kernel.asm	/^f010645c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	01 c8                	add    %ecx,%eax$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	83 c2 01             	add    $0x1,%edx$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	75 f2                	jne    f0106461 <mpsearch1+0x91>$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	84 c0                	test   %al,%al$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	74 0e                	je     f0106481 <mpsearch1+0xb1>$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	72 c6                	jb     f0106440 <mpsearch1+0x70>$/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010647f	obj/kern/kernel.asm	/^f010647f:	eb 02                	jmp    f0106483 <mpsearch1+0xb3>$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	89 d8                	mov    %ebx,%eax$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	5b                   	pop    %ebx$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	5e                   	pop    %esi$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	5d                   	pop    %ebp$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	c3                   	ret    $/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a <mp_init>:$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	55                   	push   %ebp$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	89 e5                	mov    %esp,%ebp$/;"	l
f010648d	obj/kern/kernel.asm	/^f010648d:	57                   	push   %edi$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	56                   	push   %esi$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	53                   	push   %ebx$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	c7 05 c0 53 2b f0 20 	movl   $0xf02b5020,0xf02b53c0$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	50 2b f0 $/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	83 3d 94 4e 2b f0 00 	cmpl   $0x0,0xf02b4e94$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	75 24                	jne    f01064ca <mp_init+0x40>$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	00 $/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	f0 $/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	00 $/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	c7 04 24 dd 94 10 f0 	movl   $0xf01094dd,(%esp)$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	e8 76 9b ff ff       	call   f0100040 <_panic>$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	85 c0                	test   %eax,%eax$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	74 16                	je     f01064eb <mp_init+0x61>$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	e8 ee fe ff ff       	call   f01063d0 <mpsearch1>$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	85 c0                	test   %eax,%eax$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	75 3c                	jne    f0106525 <mp_init+0x9b>$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	eb 20                	jmp    f010650b <mp_init+0x81>$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01064ff	obj/kern/kernel.asm	/^f01064ff:	e8 cc fe ff ff       	call   f01063d0 <mpsearch1>$/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	85 c0                	test   %eax,%eax$/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	75 1a                	jne    f0106525 <mp_init+0x9b>$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106515	obj/kern/kernel.asm	/^f0106515:	e8 b6 fe ff ff       	call   f01063d0 <mpsearch1>$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	85 c0                	test   %eax,%eax$/;"	l
f010651f	obj/kern/kernel.asm	/^f010651f:	0f 84 54 02 00 00    	je     f0106779 <mp_init+0x2ef>$/;"	l
f0106525	obj/kern/kernel.asm	/^f0106525:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	85 f6                	test   %esi,%esi$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	74 06                	je     f0106535 <mp_init+0xab>$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	74 11                	je     f0106546 <mp_init+0xbc>$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	c7 04 24 50 93 10 f0 	movl   $0xf0109350,(%esp)$/;"	l
f010653c	obj/kern/kernel.asm	/^f010653c:	e8 6d db ff ff       	call   f01040ae <cprintf>$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	e9 33 02 00 00       	jmp    f0106779 <mp_init+0x2ef>$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	89 f0                	mov    %esi,%eax$/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	3b 05 94 4e 2b f0    	cmp    0xf02b4e94,%eax$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	72 20                	jb     f0106573 <mp_init+0xe9>$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f010655e	obj/kern/kernel.asm	/^f010655e:	f0 $/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106566	obj/kern/kernel.asm	/^f0106566:	00 $/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	c7 04 24 dd 94 10 f0 	movl   $0xf01094dd,(%esp)$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	e8 cd 9a ff ff       	call   f0100040 <_panic>$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106580	obj/kern/kernel.asm	/^f0106580:	00 $/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	c7 44 24 04 f2 94 10 	movl   $0xf01094f2,0x4(%esp)$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	f0 $/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	e8 8c fc ff ff       	call   f010621d <memcmp>$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	85 c0                	test   %eax,%eax$/;"	l
f0106593	obj/kern/kernel.asm	/^f0106593:	74 11                	je     f01065a6 <mp_init+0x11c>$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	c7 04 24 80 93 10 f0 	movl   $0xf0109380,(%esp)$/;"	l
f010659c	obj/kern/kernel.asm	/^f010659c:	e8 0d db ff ff       	call   f01040ae <cprintf>$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	e9 d3 01 00 00       	jmp    f0106779 <mp_init+0x2ef>$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f01065ae	obj/kern/kernel.asm	/^f01065ae:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	eb 0d                	jmp    f01065ca <mp_init+0x140>$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	f0 $/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	01 ca                	add    %ecx,%edx$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	39 c7                	cmp    %eax,%edi$/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	7f ef                	jg     f01065bd <mp_init+0x133>$/;"	l
f01065ce	obj/kern/kernel.asm	/^f01065ce:	84 d2                	test   %dl,%dl$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	74 11                	je     f01065e3 <mp_init+0x159>$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	c7 04 24 b4 93 10 f0 	movl   $0xf01093b4,(%esp)$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	e8 d0 da ff ff       	call   f01040ae <cprintf>$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	e9 96 01 00 00       	jmp    f0106779 <mp_init+0x2ef>$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	3c 04                	cmp    $0x4,%al$/;"	l
f01065e9	obj/kern/kernel.asm	/^f01065e9:	74 1f                	je     f010660a <mp_init+0x180>$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	3c 01                	cmp    $0x1,%al$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01065f0	obj/kern/kernel.asm	/^f01065f0:	74 18                	je     f010660a <mp_init+0x180>$/;"	l
f01065f2	obj/kern/kernel.asm	/^f01065f2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	c7 04 24 d8 93 10 f0 	movl   $0xf01093d8,(%esp)$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	e8 a9 da ff ff       	call   f01040ae <cprintf>$/;"	l
f0106605	obj/kern/kernel.asm	/^f0106605:	e9 6f 01 00 00       	jmp    f0106779 <mp_init+0x2ef>$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	01 df                	add    %ebx,%edi$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	eb 09                	jmp    f0106629 <mp_init+0x19f>$/;"	l
f0106620	obj/kern/kernel.asm	/^f0106620:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	01 ca                	add    %ecx,%edx$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	39 c6                	cmp    %eax,%esi$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	7f f3                	jg     f0106620 <mp_init+0x196>$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	84 d2                	test   %dl,%dl$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	74 11                	je     f0106645 <mp_init+0x1bb>$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	c7 04 24 f8 93 10 f0 	movl   $0xf01093f8,(%esp)$/;"	l
f010663b	obj/kern/kernel.asm	/^f010663b:	e8 6e da ff ff       	call   f01040ae <cprintf>$/;"	l
f0106640	obj/kern/kernel.asm	/^f0106640:	e9 34 01 00 00       	jmp    f0106779 <mp_init+0x2ef>$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	85 db                	test   %ebx,%ebx$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	0f 84 2c 01 00 00    	je     f0106779 <mp_init+0x2ef>$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	c7 05 00 50 2b f0 01 	movl   $0x1,0xf02b5000$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	00 00 00 $/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	a3 00 60 2f f0       	mov    %eax,0xf02f6000$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106662	obj/kern/kernel.asm	/^f0106662:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	e9 86 00 00 00       	jmp    f01066f2 <mp_init+0x268>$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	84 c0                	test   %al,%al$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	74 06                	je     f0106679 <mp_init+0x1ef>$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	3c 04                	cmp    $0x4,%al$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	77 57                	ja     f01066ce <mp_init+0x244>$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	eb 50                	jmp    f01066c9 <mp_init+0x23f>$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	74 11                	je     f0106693 <mp_init+0x209>$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	6b 05 c4 53 2b f0 74 	imul   $0x74,0xf02b53c4,%eax$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	05 20 50 2b f0       	add    $0xf02b5020,%eax$/;"	l
f010668e	obj/kern/kernel.asm	/^f010668e:	a3 c0 53 2b f0       	mov    %eax,0xf02b53c0$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	a1 c4 53 2b f0       	mov    0xf02b53c4,%eax$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	7f 13                	jg     f01066b0 <mp_init+0x226>$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	88 82 20 50 2b f0    	mov    %al,-0xfd4afe0(%edx)$/;"	l
f01066a6	obj/kern/kernel.asm	/^f01066a6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	a3 c4 53 2b f0       	mov    %eax,0xf02b53c4$/;"	l
f01066ae	obj/kern/kernel.asm	/^f01066ae:	eb 14                	jmp    f01066c4 <mp_init+0x23a>$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	c7 04 24 28 94 10 f0 	movl   $0xf0109428,(%esp)$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	e8 ea d9 ff ff       	call   f01040ae <cprintf>$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	83 c7 14             	add    $0x14,%edi$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	eb 26                	jmp    f01066ef <mp_init+0x265>$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	83 c7 08             	add    $0x8,%edi$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	eb 21                	jmp    f01066ef <mp_init+0x265>$/;"	l
f01066ce	obj/kern/kernel.asm	/^f01066ce:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01066d1	obj/kern/kernel.asm	/^f01066d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01066d5	obj/kern/kernel.asm	/^f01066d5:	c7 04 24 50 94 10 f0 	movl   $0xf0109450,(%esp)$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	e8 cd d9 ff ff       	call   f01040ae <cprintf>$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	c7 05 00 50 2b f0 00 	movl   $0x0,0xf02b5000$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	00 00 00 $/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	83 c6 01             	add    $0x1,%esi$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	39 c6                	cmp    %eax,%esi$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	0f 82 6e ff ff ff    	jb     f010666c <mp_init+0x1e2>$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	a1 c0 53 2b f0       	mov    0xf02b53c0,%eax$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	83 3d 00 50 2b f0 00 	cmpl   $0x0,0xf02b5000$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	75 22                	jne    f0106735 <mp_init+0x2ab>$/;"	l
f0106713	obj/kern/kernel.asm	/^f0106713:	c7 05 c4 53 2b f0 01 	movl   $0x1,0xf02b53c4$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	00 00 00 $/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	c7 05 00 60 2f f0 00 	movl   $0x0,0xf02f6000$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	00 00 00 $/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727:	c7 04 24 70 94 10 f0 	movl   $0xf0109470,(%esp)$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	e8 7b d9 ff ff       	call   f01040ae <cprintf>$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	eb 44                	jmp    f0106779 <mp_init+0x2ef>$/;"	l
f0106735	obj/kern/kernel.asm	/^f0106735:	8b 15 c4 53 2b f0    	mov    0xf02b53c4,%edx$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	c7 04 24 f7 94 10 f0 	movl   $0xf01094f7,(%esp)$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	e8 5c d9 ff ff       	call   f01040ae <cprintf>$/;"	l
f0106752	obj/kern/kernel.asm	/^f0106752:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106759	obj/kern/kernel.asm	/^f0106759:	74 1e                	je     f0106779 <mp_init+0x2ef>$/;"	l
f010675b	obj/kern/kernel.asm	/^f010675b:	c7 04 24 9c 94 10 f0 	movl   $0xf010949c,(%esp)$/;"	l
f0106762	obj/kern/kernel.asm	/^f0106762:	e8 47 d9 ff ff       	call   f01040ae <cprintf>$/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	ee                   	out    %al,(%dx)$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	b2 23                	mov    $0x23,%dl$/;"	l
f0106774	obj/kern/kernel.asm	/^f0106774:	ec                   	in     (%dx),%al$/;"	l
f0106775	obj/kern/kernel.asm	/^f0106775:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	ee                   	out    %al,(%dx)$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	5b                   	pop    %ebx$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	5e                   	pop    %esi$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	5f                   	pop    %edi$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	5d                   	pop    %ebp$/;"	l
f0106780	obj/kern/kernel.asm	/^f0106780:	c3                   	ret    $/;"	l
f0106781	obj/kern/kernel.asm	/^f0106781:	00 00                	add    %al,(%eax)$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784 <lapicw>:$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	55                   	push   %ebp$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	89 e5                	mov    %esp,%ebp$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	8b 0d 04 60 2f f0    	mov    0xf02f6004,%ecx$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790:	89 10                	mov    %edx,(%eax)$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	a1 04 60 2f f0       	mov    0xf02f6004,%eax$/;"	l
f0106797	obj/kern/kernel.asm	/^f0106797:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	5d                   	pop    %ebp$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	c3                   	ret    $/;"	l
f010679c	obj/kern/kernel.asm	/^f010679c <cpunum>:$/;"	l
f010679c	obj/kern/kernel.asm	/^f010679c:	55                   	push   %ebp$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	89 e5                	mov    %esp,%ebp$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	a1 04 60 2f f0       	mov    0xf02f6004,%eax$/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	85 c0                	test   %eax,%eax$/;"	l
f01067a6	obj/kern/kernel.asm	/^f01067a6:	74 08                	je     f01067b0 <cpunum+0x14>$/;"	l
f01067a8	obj/kern/kernel.asm	/^f01067a8:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	eb 05                	jmp    f01067b5 <cpunum+0x19>$/;"	l
f01067b0	obj/kern/kernel.asm	/^f01067b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	5d                   	pop    %ebp$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	c3                   	ret    $/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7 <lapic_init>:$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	a1 00 60 2f f0       	mov    0xf02f6000,%eax$/;"	l
f01067bc	obj/kern/kernel.asm	/^f01067bc:	85 c0                	test   %eax,%eax$/;"	l
f01067be	obj/kern/kernel.asm	/^f01067be:	0f 84 23 01 00 00    	je     f01068e7 <lapic_init+0x130>$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	55                   	push   %ebp$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	00 $/;"	l
f01067d2	obj/kern/kernel.asm	/^f01067d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01067d5	obj/kern/kernel.asm	/^f01067d5:	e8 d0 ab ff ff       	call   f01013aa <mmio_map_region>$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	a3 04 60 2f f0       	mov    %eax,0xf02f6004$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	e8 96 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	e8 87 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	e8 78 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	e8 69 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	e8 7c ff ff ff       	call   f010679c <cpunum>$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	05 20 50 2b f0       	add    $0xf02b5020,%eax$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	39 05 c0 53 2b f0    	cmp    %eax,0xf02b53c0$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	74 0f                	je     f010683f <lapic_init+0x88>$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	e8 45 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106844	obj/kern/kernel.asm	/^f0106844:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	e8 36 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	a1 04 60 2f f0       	mov    0xf02f6004,%eax$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	3c 03                	cmp    $0x3,%al$/;"	l
f010685b	obj/kern/kernel.asm	/^f010685b:	76 0f                	jbe    f010686c <lapic_init+0xb5>$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	e8 18 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f010686c	obj/kern/kernel.asm	/^f010686c:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	e8 09 ff ff ff       	call   f0106784 <lapicw>$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	e8 fa fe ff ff       	call   f0106784 <lapicw>$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106894	obj/kern/kernel.asm	/^f0106894:	e8 eb fe ff ff       	call   f0106784 <lapicw>$/;"	l
f0106899	obj/kern/kernel.asm	/^f0106899:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010689e	obj/kern/kernel.asm	/^f010689e:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	e8 dc fe ff ff       	call   f0106784 <lapicw>$/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068ad	obj/kern/kernel.asm	/^f01068ad:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	e8 cd fe ff ff       	call   f0106784 <lapicw>$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01068c1	obj/kern/kernel.asm	/^f01068c1:	e8 be fe ff ff       	call   f0106784 <lapicw>$/;"	l
f01068c6	obj/kern/kernel.asm	/^f01068c6:	8b 15 04 60 2f f0    	mov    0xf02f6004,%edx$/;"	l
f01068cc	obj/kern/kernel.asm	/^f01068cc:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	75 f5                	jne    f01068cc <lapic_init+0x115>$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01068e1	obj/kern/kernel.asm	/^f01068e1:	e8 9e fe ff ff       	call   f0106784 <lapicw>$/;"	l
f01068e6	obj/kern/kernel.asm	/^f01068e6:	c9                   	leave  $/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	f3 c3                	repz ret $/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9 <lapic_eoi>:$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	83 3d 04 60 2f f0 00 	cmpl   $0x0,0xf02f6004$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	74 13                	je     f0106905 <lapic_eoi+0x1c>$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	55                   	push   %ebp$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01068f5	obj/kern/kernel.asm	/^f01068f5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068fa	obj/kern/kernel.asm	/^f01068fa:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	e8 80 fe ff ff       	call   f0106784 <lapicw>$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	5d                   	pop    %ebp$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	f3 c3                	repz ret $/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907 <lapic_startap>:$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	55                   	push   %ebp$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	89 e5                	mov    %esp,%ebp$/;"	l
f010690a	obj/kern/kernel.asm	/^f010690a:	56                   	push   %esi$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	53                   	push   %ebx$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106915	obj/kern/kernel.asm	/^f0106915:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010691f	obj/kern/kernel.asm	/^f010691f:	ee                   	out    %al,(%dx)$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	b2 71                	mov    $0x71,%dl$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	ee                   	out    %al,(%dx)$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	83 3d 94 4e 2b f0 00 	cmpl   $0x0,0xf02b4e94$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	75 24                	jne    f0106955 <lapic_startap+0x4e>$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106938	obj/kern/kernel.asm	/^f0106938:	00 $/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	c7 44 24 08 c4 78 10 	movl   $0xf01078c4,0x8(%esp)$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	f0 $/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	00 $/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	c7 04 24 14 95 10 f0 	movl   $0xf0109514,(%esp)$/;"	l
f0106950	obj/kern/kernel.asm	/^f0106950:	e8 eb 96 ff ff       	call   f0100040 <_panic>$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	00 00 $/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	89 f0                	mov    %esi,%eax$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106963	obj/kern/kernel.asm	/^f0106963:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	89 da                	mov    %ebx,%edx$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973:	e8 0c fe ff ff       	call   f0106784 <lapicw>$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106982	obj/kern/kernel.asm	/^f0106982:	e8 fd fd ff ff       	call   f0106784 <lapicw>$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106991	obj/kern/kernel.asm	/^f0106991:	e8 ee fd ff ff       	call   f0106784 <lapicw>$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106999	obj/kern/kernel.asm	/^f0106999:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f010699f	obj/kern/kernel.asm	/^f010699f:	89 da                	mov    %ebx,%edx$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	e8 d9 fd ff ff       	call   f0106784 <lapicw>$/;"	l
f01069ab	obj/kern/kernel.asm	/^f01069ab:	89 f2                	mov    %esi,%edx$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	e8 cd fd ff ff       	call   f0106784 <lapicw>$/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7:	89 da                	mov    %ebx,%edx$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	e8 c1 fd ff ff       	call   f0106784 <lapicw>$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	89 f2                	mov    %esi,%edx$/;"	l
f01069c5	obj/kern/kernel.asm	/^f01069c5:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01069ca	obj/kern/kernel.asm	/^f01069ca:	e8 b5 fd ff ff       	call   f0106784 <lapicw>$/;"	l
f01069cf	obj/kern/kernel.asm	/^f01069cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	5b                   	pop    %ebx$/;"	l
f01069d3	obj/kern/kernel.asm	/^f01069d3:	5e                   	pop    %esi$/;"	l
f01069d4	obj/kern/kernel.asm	/^f01069d4:	5d                   	pop    %ebp$/;"	l
f01069d5	obj/kern/kernel.asm	/^f01069d5:	c3                   	ret    $/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6 <lapic_ipi>:$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	55                   	push   %ebp$/;"	l
f01069d7	obj/kern/kernel.asm	/^f01069d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01069d9	obj/kern/kernel.asm	/^f01069d9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01069dc	obj/kern/kernel.asm	/^f01069dc:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	e8 98 fd ff ff       	call   f0106784 <lapicw>$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	8b 15 04 60 2f f0    	mov    0xf02f6004,%edx$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01069f8	obj/kern/kernel.asm	/^f01069f8:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01069fb	obj/kern/kernel.asm	/^f01069fb:	75 f5                	jne    f01069f2 <lapic_ipi+0x1c>$/;"	l
f01069fd	obj/kern/kernel.asm	/^f01069fd:	5d                   	pop    %ebp$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	c3                   	ret    $/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00 <__spin_initlock>:$/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00:	55                   	push   %ebp$/;"	l
f0106a01	obj/kern/kernel.asm	/^f0106a01:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a06	obj/kern/kernel.asm	/^f0106a06:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106a12	obj/kern/kernel.asm	/^f0106a12:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106a19	obj/kern/kernel.asm	/^f0106a19:	5d                   	pop    %ebp$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	c3                   	ret    $/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b <spin_lock>:$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	55                   	push   %ebp$/;"	l
f0106a1c	obj/kern/kernel.asm	/^f0106a1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a1e	obj/kern/kernel.asm	/^f0106a1e:	56                   	push   %esi$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	53                   	push   %ebx$/;"	l
f0106a20	obj/kern/kernel.asm	/^f0106a20:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	75 07                	jne    f0106a32 <spin_lock+0x17>$/;"	l
f0106a2b	obj/kern/kernel.asm	/^f0106a2b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106a30	obj/kern/kernel.asm	/^f0106a30:	eb 42                	jmp    f0106a74 <spin_lock+0x59>$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	e8 62 fd ff ff       	call   f010679c <cpunum>$/;"	l
f0106a3a	obj/kern/kernel.asm	/^f0106a3a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	05 20 50 2b f0       	add    $0xf02b5020,%eax$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	39 c6                	cmp    %eax,%esi$/;"	l
f0106a44	obj/kern/kernel.asm	/^f0106a44:	75 e5                	jne    f0106a2b <spin_lock+0x10>$/;"	l
f0106a46	obj/kern/kernel.asm	/^f0106a46:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	e8 4e fd ff ff       	call   f010679c <cpunum>$/;"	l
f0106a4e	obj/kern/kernel.asm	/^f0106a4e:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106a52	obj/kern/kernel.asm	/^f0106a52:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106a56	obj/kern/kernel.asm	/^f0106a56:	c7 44 24 08 24 95 10 	movl   $0xf0109524,0x8(%esp)$/;"	l
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	f0 $/;"	l
f0106a5e	obj/kern/kernel.asm	/^f0106a5e:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0106a65	obj/kern/kernel.asm	/^f0106a65:	00 $/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	c7 04 24 86 95 10 f0 	movl   $0xf0109586,(%esp)$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	e8 ce 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72:	f3 90                	pause  $/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	89 d0                	mov    %edx,%eax$/;"	l
f0106a76	obj/kern/kernel.asm	/^f0106a76:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79:	85 c0                	test   %eax,%eax$/;"	l
f0106a7b	obj/kern/kernel.asm	/^f0106a7b:	75 f5                	jne    f0106a72 <spin_lock+0x57>$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	e8 1a fd ff ff       	call   f010679c <cpunum>$/;"	l
f0106a82	obj/kern/kernel.asm	/^f0106a82:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106a85	obj/kern/kernel.asm	/^f0106a85:	05 20 50 2b f0       	add    $0xf02b5020,%eax$/;"	l
f0106a8a	obj/kern/kernel.asm	/^f0106a8a:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0106a90	obj/kern/kernel.asm	/^f0106a90:	89 ea                	mov    %ebp,%edx$/;"	l
f0106a92	obj/kern/kernel.asm	/^f0106a92:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a97	obj/kern/kernel.asm	/^f0106a97:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	76 12                	jbe    f0106ab1 <spin_lock+0x96>$/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0106aa5	obj/kern/kernel.asm	/^f0106aa5:	8b 12                	mov    (%edx),%edx$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106aad	obj/kern/kernel.asm	/^f0106aad:	75 e8                	jne    f0106a97 <spin_lock+0x7c>$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	eb 0f                	jmp    f0106ac0 <spin_lock+0xa5>$/;"	l
f0106ab1	obj/kern/kernel.asm	/^f0106ab1:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106abe	obj/kern/kernel.asm	/^f0106abe:	7e f1                	jle    f0106ab1 <spin_lock+0x96>$/;"	l
f0106ac0	obj/kern/kernel.asm	/^f0106ac0:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	5b                   	pop    %ebx$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	5e                   	pop    %esi$/;"	l
f0106ac5	obj/kern/kernel.asm	/^f0106ac5:	5d                   	pop    %ebp$/;"	l
f0106ac6	obj/kern/kernel.asm	/^f0106ac6:	c3                   	ret    $/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7 <spin_unlock>:$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	55                   	push   %ebp$/;"	l
f0106ac8	obj/kern/kernel.asm	/^f0106ac8:	89 e5                	mov    %esp,%ebp$/;"	l
f0106aca	obj/kern/kernel.asm	/^f0106aca:	57                   	push   %edi$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	56                   	push   %esi$/;"	l
f0106acc	obj/kern/kernel.asm	/^f0106acc:	53                   	push   %ebx$/;"	l
f0106acd	obj/kern/kernel.asm	/^f0106acd:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106ad6	obj/kern/kernel.asm	/^f0106ad6:	74 18                	je     f0106af0 <spin_unlock+0x29>$/;"	l
f0106ad8	obj/kern/kernel.asm	/^f0106ad8:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb:	e8 bc fc ff ff       	call   f010679c <cpunum>$/;"	l
f0106ae0	obj/kern/kernel.asm	/^f0106ae0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106ae3	obj/kern/kernel.asm	/^f0106ae3:	05 20 50 2b f0       	add    $0xf02b5020,%eax$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106aea	obj/kern/kernel.asm	/^f0106aea:	0f 84 ce 00 00 00    	je     f0106bbe <spin_unlock+0xf7>$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106af7	obj/kern/kernel.asm	/^f0106af7:	00 $/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106aff	obj/kern/kernel.asm	/^f0106aff:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0106b02	obj/kern/kernel.asm	/^f0106b02:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106b05	obj/kern/kernel.asm	/^f0106b05:	e8 8a f6 ff ff       	call   f0106194 <memmove>$/;"	l
f0106b0a	obj/kern/kernel.asm	/^f0106b0a:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106b10	obj/kern/kernel.asm	/^f0106b10:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0106b13	obj/kern/kernel.asm	/^f0106b13:	e8 84 fc ff ff       	call   f010679c <cpunum>$/;"	l
f0106b18	obj/kern/kernel.asm	/^f0106b18:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106b20	obj/kern/kernel.asm	/^f0106b20:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b24	obj/kern/kernel.asm	/^f0106b24:	c7 04 24 50 95 10 f0 	movl   $0xf0109550,(%esp)$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	e8 7e d5 ff ff       	call   f01040ae <cprintf>$/;"	l
f0106b30	obj/kern/kernel.asm	/^f0106b30:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106b33	obj/kern/kernel.asm	/^f0106b33:	eb 65                	jmp    f0106b9a <spin_unlock+0xd3>$/;"	l
f0106b35	obj/kern/kernel.asm	/^f0106b35:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106b3c	obj/kern/kernel.asm	/^f0106b3c:	e8 d1 ea ff ff       	call   f0105612 <debuginfo_eip>$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	85 c0                	test   %eax,%eax$/;"	l
f0106b43	obj/kern/kernel.asm	/^f0106b43:	78 39                	js     f0106b7e <spin_unlock+0xb7>$/;"	l
f0106b45	obj/kern/kernel.asm	/^f0106b45:	8b 06                	mov    (%esi),%eax$/;"	l
f0106b47	obj/kern/kernel.asm	/^f0106b47:	89 c2                	mov    %eax,%edx$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0106b4c	obj/kern/kernel.asm	/^f0106b4c:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106b50	obj/kern/kernel.asm	/^f0106b50:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106b57	obj/kern/kernel.asm	/^f0106b57:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106b5e	obj/kern/kernel.asm	/^f0106b5e:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106b65	obj/kern/kernel.asm	/^f0106b65:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b70	obj/kern/kernel.asm	/^f0106b70:	c7 04 24 96 95 10 f0 	movl   $0xf0109596,(%esp)$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	e8 32 d5 ff ff       	call   f01040ae <cprintf>$/;"	l
f0106b7c	obj/kern/kernel.asm	/^f0106b7c:	eb 12                	jmp    f0106b90 <spin_unlock+0xc9>$/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e:	8b 06                	mov    (%esi),%eax$/;"	l
f0106b80	obj/kern/kernel.asm	/^f0106b80:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	c7 04 24 ad 95 10 f0 	movl   $0xf01095ad,(%esp)$/;"	l
f0106b8b	obj/kern/kernel.asm	/^f0106b8b:	e8 1e d5 ff ff       	call   f01040ae <cprintf>$/;"	l
f0106b90	obj/kern/kernel.asm	/^f0106b90:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	74 08                	je     f0106ba2 <spin_unlock+0xdb>$/;"	l
f0106b9a	obj/kern/kernel.asm	/^f0106b9a:	89 de                	mov    %ebx,%esi$/;"	l
f0106b9c	obj/kern/kernel.asm	/^f0106b9c:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106b9e	obj/kern/kernel.asm	/^f0106b9e:	85 c0                	test   %eax,%eax$/;"	l
f0106ba0	obj/kern/kernel.asm	/^f0106ba0:	75 93                	jne    f0106b35 <spin_unlock+0x6e>$/;"	l
f0106ba2	obj/kern/kernel.asm	/^f0106ba2:	c7 44 24 08 b5 95 10 	movl   $0xf01095b5,0x8(%esp)$/;"	l
f0106ba9	obj/kern/kernel.asm	/^f0106ba9:	f0 $/;"	l
f0106baa	obj/kern/kernel.asm	/^f0106baa:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0106bb1	obj/kern/kernel.asm	/^f0106bb1:	00 $/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	c7 04 24 86 95 10 f0 	movl   $0xf0109586,(%esp)$/;"	l
f0106bb9	obj/kern/kernel.asm	/^f0106bb9:	e8 82 94 ff ff       	call   f0100040 <_panic>$/;"	l
f0106bbe	obj/kern/kernel.asm	/^f0106bbe:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0106bc5	obj/kern/kernel.asm	/^f0106bc5:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106bd7	obj/kern/kernel.asm	/^f0106bd7:	5b                   	pop    %ebx$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	5e                   	pop    %esi$/;"	l
f0106bd9	obj/kern/kernel.asm	/^f0106bd9:	5f                   	pop    %edi$/;"	l
f0106bda	obj/kern/kernel.asm	/^f0106bda:	5d                   	pop    %ebp$/;"	l
f0106bdb	obj/kern/kernel.asm	/^f0106bdb:	c3                   	ret    $/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc <pci_e1000_attach>:$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	55                   	push   %ebp$/;"	l
f0106bdd	obj/kern/kernel.asm	/^f0106bdd:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bdf	obj/kern/kernel.asm	/^f0106bdf:	56                   	push   %esi$/;"	l
f0106be0	obj/kern/kernel.asm	/^f0106be0:	53                   	push   %ebx$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106be7	obj/kern/kernel.asm	/^f0106be7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106bea	obj/kern/kernel.asm	/^f0106bea:	e8 3f 08 00 00       	call   f010742e <pci_func_enable>$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0106bf2	obj/kern/kernel.asm	/^f0106bf2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0106bf9	obj/kern/kernel.asm	/^f0106bf9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	e8 a9 a7 ff ff       	call   f01013aa <mmio_map_region>$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	a3 00 c8 2f f0       	mov    %eax,0xf02fc800$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0106c09	obj/kern/kernel.asm	/^f0106c09:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106c0d	obj/kern/kernel.asm	/^f0106c0d:	c7 04 24 cd 95 10 f0 	movl   $0xf01095cd,(%esp)$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	e8 95 d4 ff ff       	call   f01040ae <cprintf>$/;"	l
f0106c19	obj/kern/kernel.asm	/^f0106c19:	b8 0c bf 2f f0       	mov    $0xf02fbf0c,%eax$/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	ba 0c c0 2f f0       	mov    $0xf02fc00c,%edx$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23:	80 08 01             	orb    $0x1,(%eax)$/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	83 c0 10             	add    $0x10,%eax$/;"	l
f0106c29	obj/kern/kernel.asm	/^f0106c29:	39 d0                	cmp    %edx,%eax$/;"	l
f0106c2b	obj/kern/kernel.asm	/^f0106c2b:	75 f6                	jne    f0106c23 <pci_e1000_attach+0x47>$/;"	l
f0106c2d	obj/kern/kernel.asm	/^f0106c2d:	8b 15 00 c8 2f f0    	mov    0xf02fc800,%edx$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	b8 00 bf 2f f0       	mov    $0xf02fbf00,%eax$/;"	l
f0106c38	obj/kern/kernel.asm	/^f0106c38:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0106c3d	obj/kern/kernel.asm	/^f0106c3d:	77 20                	ja     f0106c5f <pci_e1000_attach+0x83>$/;"	l
f0106c3f	obj/kern/kernel.asm	/^f0106c3f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	f0 $/;"	l
f0106c4b	obj/kern/kernel.asm	/^f0106c4b:	c7 44 24 04 26 00 00 	movl   $0x26,0x4(%esp)$/;"	l
f0106c52	obj/kern/kernel.asm	/^f0106c52:	00 $/;"	l
f0106c53	obj/kern/kernel.asm	/^f0106c53:	c7 04 24 eb 95 10 f0 	movl   $0xf01095eb,(%esp)$/;"	l
f0106c5a	obj/kern/kernel.asm	/^f0106c5a:	e8 e1 93 ff ff       	call   f0100040 <_panic>$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	c7 82 00 38 00 00 00 	movl   $0x2fbf00,0x3800(%edx)$/;"	l
f0106c66	obj/kern/kernel.asm	/^f0106c66:	bf 2f 00 $/;"	l
f0106c69	obj/kern/kernel.asm	/^f0106c69:	c7 82 04 38 00 00 00 	movl   $0x0,0x3804(%edx)$/;"	l
f0106c70	obj/kern/kernel.asm	/^f0106c70:	00 00 00 $/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	c7 82 08 38 00 00 00 	movl   $0x100,0x3808(%edx)$/;"	l
f0106c7a	obj/kern/kernel.asm	/^f0106c7a:	01 00 00 $/;"	l
f0106c7d	obj/kern/kernel.asm	/^f0106c7d:	c7 82 10 38 00 00 00 	movl   $0x0,0x3810(%edx)$/;"	l
f0106c84	obj/kern/kernel.asm	/^f0106c84:	00 00 00 $/;"	l
f0106c87	obj/kern/kernel.asm	/^f0106c87:	c7 82 18 38 00 00 00 	movl   $0x0,0x3818(%edx)$/;"	l
f0106c8e	obj/kern/kernel.asm	/^f0106c8e:	00 00 00 $/;"	l
f0106c91	obj/kern/kernel.asm	/^f0106c91:	c7 82 00 04 00 00 00 	movl   $0x0,0x400(%edx)$/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	00 00 00 $/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106ca1	obj/kern/kernel.asm	/^f0106ca1:	83 c8 02             	or     $0x2,%eax$/;"	l
f0106ca4	obj/kern/kernel.asm	/^f0106ca4:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	83 c8 08             	or     $0x8,%eax$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	80 cc 01             	or     $0x1,%ah$/;"	l
f0106cc2	obj/kern/kernel.asm	/^f0106cc2:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106cce	obj/kern/kernel.asm	/^f0106cce:	0d 00 00 04 00       	or     $0x40000,%eax$/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106cd9	obj/kern/kernel.asm	/^f0106cd9:	c7 82 10 04 00 00 00 	movl   $0x0,0x410(%edx)$/;"	l
f0106ce0	obj/kern/kernel.asm	/^f0106ce0:	00 00 00 $/;"	l
f0106ce3	obj/kern/kernel.asm	/^f0106ce3:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0106ce9	obj/kern/kernel.asm	/^f0106ce9:	83 c8 0a             	or     $0xa,%eax$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f0106cf2	obj/kern/kernel.asm	/^f0106cf2:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0106cf8	obj/kern/kernel.asm	/^f0106cf8:	80 cc 20             	or     $0x20,%ah$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f0106d01	obj/kern/kernel.asm	/^f0106d01:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0106d07	obj/kern/kernel.asm	/^f0106d07:	0d 00 00 60 00       	or     $0x600000,%eax$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	b8 20 c8 2f f0       	mov    $0xf02fc820,%eax$/;"	l
f0106d17	obj/kern/kernel.asm	/^f0106d17:	b9 0c c0 2f f0       	mov    $0xf02fc00c,%ecx$/;"	l
f0106d1c	obj/kern/kernel.asm	/^f0106d1c:	be 20 c8 33 f0       	mov    $0xf033c820,%esi$/;"	l
f0106d21	obj/kern/kernel.asm	/^f0106d21:	c6 01 00             	movb   $0x0,(%ecx)$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	77 20                	ja     f0106d4b <pci_e1000_attach+0x16f>$/;"	l
f0106d2b	obj/kern/kernel.asm	/^f0106d2b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106d2f	obj/kern/kernel.asm	/^f0106d2f:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0106d36	obj/kern/kernel.asm	/^f0106d36:	f0 $/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	00 $/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f:	c7 04 24 eb 95 10 f0 	movl   $0xf01095eb,(%esp)$/;"	l
f0106d46	obj/kern/kernel.asm	/^f0106d46:	e8 f5 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	89 59 f4             	mov    %ebx,-0xc(%ecx)$/;"	l
f0106d54	obj/kern/kernel.asm	/^f0106d54:	c7 41 f8 00 00 00 00 	movl   $0x0,-0x8(%ecx)$/;"	l
f0106d5b	obj/kern/kernel.asm	/^f0106d5b:	05 00 08 00 00       	add    $0x800,%eax$/;"	l
f0106d60	obj/kern/kernel.asm	/^f0106d60:	83 c1 10             	add    $0x10,%ecx$/;"	l
f0106d63	obj/kern/kernel.asm	/^f0106d63:	39 f0                	cmp    %esi,%eax$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	75 ba                	jne    f0106d21 <pci_e1000_attach+0x145>$/;"	l
f0106d67	obj/kern/kernel.asm	/^f0106d67:	c7 82 00 54 00 00 52 	movl   $0x12005452,0x5400(%edx)$/;"	l
f0106d6e	obj/kern/kernel.asm	/^f0106d6e:	54 00 12 $/;"	l
f0106d71	obj/kern/kernel.asm	/^f0106d71:	c7 82 04 54 00 00 34 	movl   $0x5634,0x5404(%edx)$/;"	l
f0106d78	obj/kern/kernel.asm	/^f0106d78:	56 00 00 $/;"	l
f0106d7b	obj/kern/kernel.asm	/^f0106d7b:	8b 82 04 54 00 00    	mov    0x5404(%edx),%eax$/;"	l
f0106d81	obj/kern/kernel.asm	/^f0106d81:	0d 00 00 00 80       	or     $0x80000000,%eax$/;"	l
f0106d86	obj/kern/kernel.asm	/^f0106d86:	89 82 04 54 00 00    	mov    %eax,0x5404(%edx)$/;"	l
f0106d8c	obj/kern/kernel.asm	/^f0106d8c:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0106d93	obj/kern/kernel.asm	/^f0106d93:	00 $/;"	l
f0106d94	obj/kern/kernel.asm	/^f0106d94:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	00 $/;"	l
f0106d9c	obj/kern/kernel.asm	/^f0106d9c:	81 c2 00 52 00 00    	add    $0x5200,%edx$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106da5	obj/kern/kernel.asm	/^f0106da5:	e8 9d f3 ff ff       	call   f0106147 <memset>$/;"	l
f0106daa	obj/kern/kernel.asm	/^f0106daa:	a1 00 c8 2f f0       	mov    0xf02fc800,%eax$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	ba 00 c0 2f f0       	mov    $0xf02fc000,%edx$/;"	l
f0106db4	obj/kern/kernel.asm	/^f0106db4:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	77 20                	ja     f0106ddc <pci_e1000_attach+0x200>$/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106dc0	obj/kern/kernel.asm	/^f0106dc0:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0106dc7	obj/kern/kernel.asm	/^f0106dc7:	f0 $/;"	l
f0106dc8	obj/kern/kernel.asm	/^f0106dc8:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
f0106dcf	obj/kern/kernel.asm	/^f0106dcf:	00 $/;"	l
f0106dd0	obj/kern/kernel.asm	/^f0106dd0:	c7 04 24 eb 95 10 f0 	movl   $0xf01095eb,(%esp)$/;"	l
f0106dd7	obj/kern/kernel.asm	/^f0106dd7:	e8 64 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	c7 80 00 28 00 00 00 	movl   $0x2fc000,0x2800(%eax)$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	c0 2f 00 $/;"	l
f0106de6	obj/kern/kernel.asm	/^f0106de6:	c7 80 04 28 00 00 00 	movl   $0x0,0x2804(%eax)$/;"	l
f0106ded	obj/kern/kernel.asm	/^f0106ded:	00 00 00 $/;"	l
f0106df0	obj/kern/kernel.asm	/^f0106df0:	c7 80 08 28 00 00 00 	movl   $0x800,0x2808(%eax)$/;"	l
f0106df7	obj/kern/kernel.asm	/^f0106df7:	08 00 00 $/;"	l
f0106dfa	obj/kern/kernel.asm	/^f0106dfa:	c7 80 10 28 00 00 00 	movl   $0x0,0x2810(%eax)$/;"	l
f0106e01	obj/kern/kernel.asm	/^f0106e01:	00 00 00 $/;"	l
f0106e04	obj/kern/kernel.asm	/^f0106e04:	c7 80 18 28 00 00 7f 	movl   $0x7f,0x2818(%eax)$/;"	l
f0106e0b	obj/kern/kernel.asm	/^f0106e0b:	00 00 00 $/;"	l
f0106e0e	obj/kern/kernel.asm	/^f0106e0e:	c7 80 00 01 00 00 00 	movl   $0x0,0x100(%eax)$/;"	l
f0106e15	obj/kern/kernel.asm	/^f0106e15:	00 00 00 $/;"	l
f0106e18	obj/kern/kernel.asm	/^f0106e18:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106e1e	obj/kern/kernel.asm	/^f0106e1e:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106e24	obj/kern/kernel.asm	/^f0106e24:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106e2a	obj/kern/kernel.asm	/^f0106e2a:	80 ce 80             	or     $0x80,%dh$/;"	l
f0106e2d	obj/kern/kernel.asm	/^f0106e2d:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106e33	obj/kern/kernel.asm	/^f0106e33:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106e39	obj/kern/kernel.asm	/^f0106e39:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106e3f	obj/kern/kernel.asm	/^f0106e3f:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0106e45	obj/kern/kernel.asm	/^f0106e45:	81 ca 00 00 00 04    	or     $0x4000000,%edx$/;"	l
f0106e4b	obj/kern/kernel.asm	/^f0106e4b:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0106e51	obj/kern/kernel.asm	/^f0106e51:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
f0106e54	obj/kern/kernel.asm	/^f0106e54:	83 ca 02             	or     $0x2,%edx$/;"	l
f0106e57	obj/kern/kernel.asm	/^f0106e57:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0106e5a	obj/kern/kernel.asm	/^f0106e5a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e62	obj/kern/kernel.asm	/^f0106e62:	5b                   	pop    %ebx$/;"	l
f0106e63	obj/kern/kernel.asm	/^f0106e63:	5e                   	pop    %esi$/;"	l
f0106e64	obj/kern/kernel.asm	/^f0106e64:	5d                   	pop    %ebp$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	c3                   	ret    $/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66 <try_transmit_pkt>:$/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66:	55                   	push   %ebp$/;"	l
f0106e67	obj/kern/kernel.asm	/^f0106e67:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	57                   	push   %edi$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	56                   	push   %esi$/;"	l
f0106e6b	obj/kern/kernel.asm	/^f0106e6b:	53                   	push   %ebx$/;"	l
f0106e6c	obj/kern/kernel.asm	/^f0106e6c:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	a1 00 c8 2f f0       	mov    0xf02fc800,%eax$/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77:	8b b8 18 38 00 00    	mov    0x3818(%eax),%edi$/;"	l
f0106e7d	obj/kern/kernel.asm	/^f0106e7d:	89 f8                	mov    %edi,%eax$/;"	l
f0106e7f	obj/kern/kernel.asm	/^f0106e7f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106e82	obj/kern/kernel.asm	/^f0106e82:	f6 80 0c bf 2f f0 01 	testb  $0x1,-0xfd040f4(%eax)$/;"	l
f0106e89	obj/kern/kernel.asm	/^f0106e89:	0f 84 aa 00 00 00    	je     f0106f39 <try_transmit_pkt+0xd3>$/;"	l
f0106e8f	obj/kern/kernel.asm	/^f0106e8f:	69 df ee 05 00 00    	imul   $0x5ee,%edi,%ebx$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	81 c3 20 60 2f f0    	add    $0xf02f6020,%ebx$/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106e9f	obj/kern/kernel.asm	/^f0106e9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106ea9	obj/kern/kernel.asm	/^f0106ea9:	e8 e6 f2 ff ff       	call   f0106194 <memmove>$/;"	l
f0106eae	obj/kern/kernel.asm	/^f0106eae:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0106eb4	obj/kern/kernel.asm	/^f0106eb4:	77 20                	ja     f0106ed6 <try_transmit_pkt+0x70>$/;"	l
f0106eb6	obj/kern/kernel.asm	/^f0106eb6:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	c7 44 24 08 e8 78 10 	movl   $0xf01078e8,0x8(%esp)$/;"	l
f0106ec1	obj/kern/kernel.asm	/^f0106ec1:	f0 $/;"	l
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	c7 44 24 04 ac 00 00 	movl   $0xac,0x4(%esp)$/;"	l
f0106ec9	obj/kern/kernel.asm	/^f0106ec9:	00 $/;"	l
f0106eca	obj/kern/kernel.asm	/^f0106eca:	c7 04 24 eb 95 10 f0 	movl   $0xf01095eb,(%esp)$/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	e8 6a 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106ed6	obj/kern/kernel.asm	/^f0106ed6:	c1 e7 04             	shl    $0x4,%edi$/;"	l
f0106ed9	obj/kern/kernel.asm	/^f0106ed9:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f0106edf	obj/kern/kernel.asm	/^f0106edf:	89 9f 00 bf 2f f0    	mov    %ebx,-0xfd04100(%edi)$/;"	l
f0106ee5	obj/kern/kernel.asm	/^f0106ee5:	c7 87 04 bf 2f f0 00 	movl   $0x0,-0xfd040fc(%edi)$/;"	l
f0106eec	obj/kern/kernel.asm	/^f0106eec:	00 00 00 $/;"	l
f0106eef	obj/kern/kernel.asm	/^f0106eef:	66 89 b7 08 bf 2f f0 	mov    %si,-0xfd040f8(%edi)$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	c6 87 0a bf 2f f0 00 	movb   $0x0,-0xfd040f6(%edi)$/;"	l
f0106efd	obj/kern/kernel.asm	/^f0106efd:	c6 87 0b bf 2f f0 09 	movb   $0x9,-0xfd040f5(%edi)$/;"	l
f0106f04	obj/kern/kernel.asm	/^f0106f04:	c6 87 0d bf 2f f0 00 	movb   $0x0,-0xfd040f3(%edi)$/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	66 c7 87 0e bf 2f f0 	movw   $0x0,-0xfd040f2(%edi)$/;"	l
f0106f12	obj/kern/kernel.asm	/^f0106f12:	00 00 $/;"	l
f0106f14	obj/kern/kernel.asm	/^f0106f14:	c6 87 0c bf 2f f0 00 	movb   $0x0,-0xfd040f4(%edi)$/;"	l
f0106f1b	obj/kern/kernel.asm	/^f0106f1b:	a1 00 c8 2f f0       	mov    0xf02fc800,%eax$/;"	l
f0106f20	obj/kern/kernel.asm	/^f0106f20:	8b 90 18 38 00 00    	mov    0x3818(%eax),%edx$/;"	l
f0106f26	obj/kern/kernel.asm	/^f0106f26:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	83 e2 0f             	and    $0xf,%edx$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	89 90 18 38 00 00    	mov    %edx,0x3818(%eax)$/;"	l
f0106f32	obj/kern/kernel.asm	/^f0106f32:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106f37	obj/kern/kernel.asm	/^f0106f37:	eb 05                	jmp    f0106f3e <try_transmit_pkt+0xd8>$/;"	l
f0106f39	obj/kern/kernel.asm	/^f0106f39:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0106f3e	obj/kern/kernel.asm	/^f0106f3e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106f41	obj/kern/kernel.asm	/^f0106f41:	5b                   	pop    %ebx$/;"	l
f0106f42	obj/kern/kernel.asm	/^f0106f42:	5e                   	pop    %esi$/;"	l
f0106f43	obj/kern/kernel.asm	/^f0106f43:	5f                   	pop    %edi$/;"	l
f0106f44	obj/kern/kernel.asm	/^f0106f44:	5d                   	pop    %ebp$/;"	l
f0106f45	obj/kern/kernel.asm	/^f0106f45:	c3                   	ret    $/;"	l
f0106f46	obj/kern/kernel.asm	/^f0106f46 <try_receive_pkt>:$/;"	l
f0106f46	obj/kern/kernel.asm	/^f0106f46:	55                   	push   %ebp$/;"	l
f0106f47	obj/kern/kernel.asm	/^f0106f47:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f49	obj/kern/kernel.asm	/^f0106f49:	57                   	push   %edi$/;"	l
f0106f4a	obj/kern/kernel.asm	/^f0106f4a:	56                   	push   %esi$/;"	l
f0106f4b	obj/kern/kernel.asm	/^f0106f4b:	53                   	push   %ebx$/;"	l
f0106f4c	obj/kern/kernel.asm	/^f0106f4c:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106f4f	obj/kern/kernel.asm	/^f0106f4f:	a1 00 c8 2f f0       	mov    0xf02fc800,%eax$/;"	l
f0106f54	obj/kern/kernel.asm	/^f0106f54:	8b 98 18 28 00 00    	mov    0x2818(%eax),%ebx$/;"	l
f0106f5a	obj/kern/kernel.asm	/^f0106f5a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106f5d	obj/kern/kernel.asm	/^f0106f5d:	83 e3 7f             	and    $0x7f,%ebx$/;"	l
f0106f60	obj/kern/kernel.asm	/^f0106f60:	89 d8                	mov    %ebx,%eax$/;"	l
f0106f62	obj/kern/kernel.asm	/^f0106f62:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106f65	obj/kern/kernel.asm	/^f0106f65:	f6 80 0c c0 2f f0 01 	testb  $0x1,-0xfd03ff4(%eax)$/;"	l
f0106f6c	obj/kern/kernel.asm	/^f0106f6c:	74 3e                	je     f0106fac <try_receive_pkt+0x66>$/;"	l
f0106f6e	obj/kern/kernel.asm	/^f0106f6e:	89 d8                	mov    %ebx,%eax$/;"	l
f0106f70	obj/kern/kernel.asm	/^f0106f70:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106f73	obj/kern/kernel.asm	/^f0106f73:	8d b8 00 c0 2f f0    	lea    -0xfd04000(%eax),%edi$/;"	l
f0106f79	obj/kern/kernel.asm	/^f0106f79:	0f b7 b0 08 c0 2f f0 	movzwl -0xfd03ff8(%eax),%esi$/;"	l
f0106f80	obj/kern/kernel.asm	/^f0106f80:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106f84	obj/kern/kernel.asm	/^f0106f84:	8b 80 00 c0 2f f0    	mov    -0xfd04000(%eax),%eax$/;"	l
f0106f8a	obj/kern/kernel.asm	/^f0106f8a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f8e	obj/kern/kernel.asm	/^f0106f8e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106f91	obj/kern/kernel.asm	/^f0106f91:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	e8 fb f1 ff ff       	call   f0106194 <memmove>$/;"	l
f0106f99	obj/kern/kernel.asm	/^f0106f99:	c6 47 0c 00          	movb   $0x0,0xc(%edi)$/;"	l
f0106f9d	obj/kern/kernel.asm	/^f0106f9d:	a1 00 c8 2f f0       	mov    0xf02fc800,%eax$/;"	l
f0106fa2	obj/kern/kernel.asm	/^f0106fa2:	89 98 18 28 00 00    	mov    %ebx,0x2818(%eax)$/;"	l
f0106fa8	obj/kern/kernel.asm	/^f0106fa8:	89 f0                	mov    %esi,%eax$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	eb 05                	jmp    f0106fb1 <try_receive_pkt+0x6b>$/;"	l
f0106fac	obj/kern/kernel.asm	/^f0106fac:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4:	5b                   	pop    %ebx$/;"	l
f0106fb5	obj/kern/kernel.asm	/^f0106fb5:	5e                   	pop    %esi$/;"	l
f0106fb6	obj/kern/kernel.asm	/^f0106fb6:	5f                   	pop    %edi$/;"	l
f0106fb7	obj/kern/kernel.asm	/^f0106fb7:	5d                   	pop    %ebp$/;"	l
f0106fb8	obj/kern/kernel.asm	/^f0106fb8:	c3                   	ret    $/;"	l
f0106fb9	obj/kern/kernel.asm	/^f0106fb9:	00 00                	add    %al,(%eax)$/;"	l
f0106fbc	obj/kern/kernel.asm	/^f0106fbc <pci_attach_match>:$/;"	l
f0106fbc	obj/kern/kernel.asm	/^f0106fbc:	55                   	push   %ebp$/;"	l
f0106fbd	obj/kern/kernel.asm	/^f0106fbd:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fbf	obj/kern/kernel.asm	/^f0106fbf:	57                   	push   %edi$/;"	l
f0106fc0	obj/kern/kernel.asm	/^f0106fc0:	56                   	push   %esi$/;"	l
f0106fc1	obj/kern/kernel.asm	/^f0106fc1:	53                   	push   %ebx$/;"	l
f0106fc2	obj/kern/kernel.asm	/^f0106fc2:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106fc8	obj/kern/kernel.asm	/^f0106fc8:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106fcb	obj/kern/kernel.asm	/^f0106fcb:	eb 41                	jmp    f010700e <pci_attach_match+0x52>$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	39 3b                	cmp    %edi,(%ebx)$/;"	l
f0106fcf	obj/kern/kernel.asm	/^f0106fcf:	75 3a                	jne    f010700b <pci_attach_match+0x4f>$/;"	l
f0106fd1	obj/kern/kernel.asm	/^f0106fd1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106fd4	obj/kern/kernel.asm	/^f0106fd4:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f0106fd7	obj/kern/kernel.asm	/^f0106fd7:	75 32                	jne    f010700b <pci_attach_match+0x4f>$/;"	l
f0106fd9	obj/kern/kernel.asm	/^f0106fd9:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0106fdc	obj/kern/kernel.asm	/^f0106fdc:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0106fdf	obj/kern/kernel.asm	/^f0106fdf:	ff d0                	call   *%eax$/;"	l
f0106fe1	obj/kern/kernel.asm	/^f0106fe1:	85 c0                	test   %eax,%eax$/;"	l
f0106fe3	obj/kern/kernel.asm	/^f0106fe3:	7f 32                	jg     f0107017 <pci_attach_match+0x5b>$/;"	l
f0106fe5	obj/kern/kernel.asm	/^f0106fe5:	85 c0                	test   %eax,%eax$/;"	l
f0106fe7	obj/kern/kernel.asm	/^f0106fe7:	79 22                	jns    f010700b <pci_attach_match+0x4f>$/;"	l
f0106fe9	obj/kern/kernel.asm	/^f0106fe9:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0106fed	obj/kern/kernel.asm	/^f0106fed:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106ff0	obj/kern/kernel.asm	/^f0106ff0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106ffb	obj/kern/kernel.asm	/^f0106ffb:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106fff	obj/kern/kernel.asm	/^f0106fff:	c7 04 24 f8 95 10 f0 	movl   $0xf01095f8,(%esp)$/;"	l
f0107006	obj/kern/kernel.asm	/^f0107006:	e8 a3 d0 ff ff       	call   f01040ae <cprintf>$/;"	l
f010700b	obj/kern/kernel.asm	/^f010700b:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010700e	obj/kern/kernel.asm	/^f010700e:	89 de                	mov    %ebx,%esi$/;"	l
f0107010	obj/kern/kernel.asm	/^f0107010:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	85 c0                	test   %eax,%eax$/;"	l
f0107015	obj/kern/kernel.asm	/^f0107015:	75 b6                	jne    f0106fcd <pci_attach_match+0x11>$/;"	l
f0107017	obj/kern/kernel.asm	/^f0107017:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010701a	obj/kern/kernel.asm	/^f010701a:	5b                   	pop    %ebx$/;"	l
f010701b	obj/kern/kernel.asm	/^f010701b:	5e                   	pop    %esi$/;"	l
f010701c	obj/kern/kernel.asm	/^f010701c:	5f                   	pop    %edi$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	5d                   	pop    %ebp$/;"	l
f010701e	obj/kern/kernel.asm	/^f010701e:	c3                   	ret    $/;"	l
f010701f	obj/kern/kernel.asm	/^f010701f <pci_conf1_set_addr>:$/;"	l
f010701f	obj/kern/kernel.asm	/^f010701f:	55                   	push   %ebp$/;"	l
f0107020	obj/kern/kernel.asm	/^f0107020:	89 e5                	mov    %esp,%ebp$/;"	l
f0107022	obj/kern/kernel.asm	/^f0107022:	56                   	push   %esi$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	53                   	push   %ebx$/;"	l
f0107024	obj/kern/kernel.asm	/^f0107024:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010702a	obj/kern/kernel.asm	/^f010702a:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f010702f	obj/kern/kernel.asm	/^f010702f:	76 24                	jbe    f0107055 <pci_conf1_set_addr+0x36>$/;"	l
f0107031	obj/kern/kernel.asm	/^f0107031:	c7 44 24 0c 50 97 10 	movl   $0xf0109750,0xc(%esp)$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	f0 $/;"	l
f0107039	obj/kern/kernel.asm	/^f0107039:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0107040	obj/kern/kernel.asm	/^f0107040:	f0 $/;"	l
f0107041	obj/kern/kernel.asm	/^f0107041:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f0107048	obj/kern/kernel.asm	/^f0107048:	00 $/;"	l
f0107049	obj/kern/kernel.asm	/^f0107049:	c7 04 24 5a 97 10 f0 	movl   $0xf010975a,(%esp)$/;"	l
f0107050	obj/kern/kernel.asm	/^f0107050:	e8 eb 8f ff ff       	call   f0100040 <_panic>$/;"	l
f0107055	obj/kern/kernel.asm	/^f0107055:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0107058	obj/kern/kernel.asm	/^f0107058:	76 24                	jbe    f010707e <pci_conf1_set_addr+0x5f>$/;"	l
f010705a	obj/kern/kernel.asm	/^f010705a:	c7 44 24 0c 65 97 10 	movl   $0xf0109765,0xc(%esp)$/;"	l
f0107061	obj/kern/kernel.asm	/^f0107061:	f0 $/;"	l
f0107062	obj/kern/kernel.asm	/^f0107062:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0107069	obj/kern/kernel.asm	/^f0107069:	f0 $/;"	l
f010706a	obj/kern/kernel.asm	/^f010706a:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f0107071	obj/kern/kernel.asm	/^f0107071:	00 $/;"	l
f0107072	obj/kern/kernel.asm	/^f0107072:	c7 04 24 5a 97 10 f0 	movl   $0xf010975a,(%esp)$/;"	l
f0107079	obj/kern/kernel.asm	/^f0107079:	e8 c2 8f ff ff       	call   f0100040 <_panic>$/;"	l
f010707e	obj/kern/kernel.asm	/^f010707e:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f0107081	obj/kern/kernel.asm	/^f0107081:	76 24                	jbe    f01070a7 <pci_conf1_set_addr+0x88>$/;"	l
f0107083	obj/kern/kernel.asm	/^f0107083:	c7 44 24 0c 6e 97 10 	movl   $0xf010976e,0xc(%esp)$/;"	l
f010708a	obj/kern/kernel.asm	/^f010708a:	f0 $/;"	l
f010708b	obj/kern/kernel.asm	/^f010708b:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f0107092	obj/kern/kernel.asm	/^f0107092:	f0 $/;"	l
f0107093	obj/kern/kernel.asm	/^f0107093:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f010709a	obj/kern/kernel.asm	/^f010709a:	00 $/;"	l
f010709b	obj/kern/kernel.asm	/^f010709b:	c7 04 24 5a 97 10 f0 	movl   $0xf010975a,(%esp)$/;"	l
f01070a2	obj/kern/kernel.asm	/^f01070a2:	e8 99 8f ff ff       	call   f0100040 <_panic>$/;"	l
f01070a7	obj/kern/kernel.asm	/^f01070a7:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f01070ad	obj/kern/kernel.asm	/^f01070ad:	76 24                	jbe    f01070d3 <pci_conf1_set_addr+0xb4>$/;"	l
f01070af	obj/kern/kernel.asm	/^f01070af:	c7 44 24 0c 77 97 10 	movl   $0xf0109777,0xc(%esp)$/;"	l
f01070b6	obj/kern/kernel.asm	/^f01070b6:	f0 $/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01070be	obj/kern/kernel.asm	/^f01070be:	f0 $/;"	l
f01070bf	obj/kern/kernel.asm	/^f01070bf:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f01070c6	obj/kern/kernel.asm	/^f01070c6:	00 $/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	c7 04 24 5a 97 10 f0 	movl   $0xf010975a,(%esp)$/;"	l
f01070ce	obj/kern/kernel.asm	/^f01070ce:	e8 6d 8f ff ff       	call   f0100040 <_panic>$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	f6 c3 03             	test   $0x3,%bl$/;"	l
f01070d6	obj/kern/kernel.asm	/^f01070d6:	74 24                	je     f01070fc <pci_conf1_set_addr+0xdd>$/;"	l
f01070d8	obj/kern/kernel.asm	/^f01070d8:	c7 44 24 0c 84 97 10 	movl   $0xf0109784,0xc(%esp)$/;"	l
f01070df	obj/kern/kernel.asm	/^f01070df:	f0 $/;"	l
f01070e0	obj/kern/kernel.asm	/^f01070e0:	c7 44 24 08 a6 7e 10 	movl   $0xf0107ea6,0x8(%esp)$/;"	l
f01070e7	obj/kern/kernel.asm	/^f01070e7:	f0 $/;"	l
f01070e8	obj/kern/kernel.asm	/^f01070e8:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)$/;"	l
f01070ef	obj/kern/kernel.asm	/^f01070ef:	00 $/;"	l
f01070f0	obj/kern/kernel.asm	/^f01070f0:	c7 04 24 5a 97 10 f0 	movl   $0xf010975a,(%esp)$/;"	l
f01070f7	obj/kern/kernel.asm	/^f01070f7:	e8 44 8f ff ff       	call   f0100040 <_panic>$/;"	l
f01070fc	obj/kern/kernel.asm	/^f01070fc:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f0107102	obj/kern/kernel.asm	/^f0107102:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0107105	obj/kern/kernel.asm	/^f0107105:	09 cb                	or     %ecx,%ebx$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	89 d6                	mov    %edx,%esi$/;"	l
f0107109	obj/kern/kernel.asm	/^f0107109:	c1 e6 0b             	shl    $0xb,%esi$/;"	l
f010710c	obj/kern/kernel.asm	/^f010710c:	09 f3                	or     %esi,%ebx$/;"	l
f010710e	obj/kern/kernel.asm	/^f010710e:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0107111	obj/kern/kernel.asm	/^f0107111:	89 c6                	mov    %eax,%esi$/;"	l
f0107113	obj/kern/kernel.asm	/^f0107113:	89 d8                	mov    %ebx,%eax$/;"	l
f0107115	obj/kern/kernel.asm	/^f0107115:	09 f0                	or     %esi,%eax$/;"	l
f0107117	obj/kern/kernel.asm	/^f0107117:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f010711c	obj/kern/kernel.asm	/^f010711c:	ef                   	out    %eax,(%dx)$/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107120	obj/kern/kernel.asm	/^f0107120:	5b                   	pop    %ebx$/;"	l
f0107121	obj/kern/kernel.asm	/^f0107121:	5e                   	pop    %esi$/;"	l
f0107122	obj/kern/kernel.asm	/^f0107122:	5d                   	pop    %ebp$/;"	l
f0107123	obj/kern/kernel.asm	/^f0107123:	c3                   	ret    $/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124 <pci_conf_read>:$/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124:	55                   	push   %ebp$/;"	l
f0107125	obj/kern/kernel.asm	/^f0107125:	89 e5                	mov    %esp,%ebp$/;"	l
f0107127	obj/kern/kernel.asm	/^f0107127:	53                   	push   %ebx$/;"	l
f0107128	obj/kern/kernel.asm	/^f0107128:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010712b	obj/kern/kernel.asm	/^f010712b:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010712e	obj/kern/kernel.asm	/^f010712e:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0107131	obj/kern/kernel.asm	/^f0107131:	8b 00                	mov    (%eax),%eax$/;"	l
f0107133	obj/kern/kernel.asm	/^f0107133:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107136	obj/kern/kernel.asm	/^f0107136:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107139	obj/kern/kernel.asm	/^f0107139:	89 da                	mov    %ebx,%edx$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	e8 df fe ff ff       	call   f010701f <pci_conf1_set_addr>$/;"	l
f0107140	obj/kern/kernel.asm	/^f0107140:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107145	obj/kern/kernel.asm	/^f0107145:	ed                   	in     (%dx),%eax$/;"	l
f0107146	obj/kern/kernel.asm	/^f0107146:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107149	obj/kern/kernel.asm	/^f0107149:	5b                   	pop    %ebx$/;"	l
f010714a	obj/kern/kernel.asm	/^f010714a:	5d                   	pop    %ebp$/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b:	c3                   	ret    $/;"	l
f010714c	obj/kern/kernel.asm	/^f010714c <pci_scan_bus>:$/;"	l
f010714c	obj/kern/kernel.asm	/^f010714c:	55                   	push   %ebp$/;"	l
f010714d	obj/kern/kernel.asm	/^f010714d:	89 e5                	mov    %esp,%ebp$/;"	l
f010714f	obj/kern/kernel.asm	/^f010714f:	57                   	push   %edi$/;"	l
f0107150	obj/kern/kernel.asm	/^f0107150:	56                   	push   %esi$/;"	l
f0107151	obj/kern/kernel.asm	/^f0107151:	53                   	push   %ebx$/;"	l
f0107152	obj/kern/kernel.asm	/^f0107152:	81 ec 1c 01 00 00    	sub    $0x11c,%esp$/;"	l
f0107158	obj/kern/kernel.asm	/^f0107158:	89 c3                	mov    %eax,%ebx$/;"	l
f010715a	obj/kern/kernel.asm	/^f010715a:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f0107161	obj/kern/kernel.asm	/^f0107161:	00 $/;"	l
f0107162	obj/kern/kernel.asm	/^f0107162:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107169	obj/kern/kernel.asm	/^f0107169:	00 $/;"	l
f010716a	obj/kern/kernel.asm	/^f010716a:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f010716d	obj/kern/kernel.asm	/^f010716d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107170	obj/kern/kernel.asm	/^f0107170:	e8 d2 ef ff ff       	call   f0106147 <memset>$/;"	l
f0107175	obj/kern/kernel.asm	/^f0107175:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0107178	obj/kern/kernel.asm	/^f0107178:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f010717f	obj/kern/kernel.asm	/^f010717f:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f0107186	obj/kern/kernel.asm	/^f0107186:	00 00 00 $/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f010718e	obj/kern/kernel.asm	/^f010718e:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107191	obj/kern/kernel.asm	/^f0107191:	e8 8e ff ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	89 c2                	mov    %eax,%edx$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010719b	obj/kern/kernel.asm	/^f010719b:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f010719e	obj/kern/kernel.asm	/^f010719e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01071a1	obj/kern/kernel.asm	/^f01071a1:	0f 87 6f 01 00 00    	ja     f0107316 <pci_scan_bus+0x1ca>$/;"	l
f01071a7	obj/kern/kernel.asm	/^f01071a7:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f01071ae	obj/kern/kernel.asm	/^f01071ae:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01071b3	obj/kern/kernel.asm	/^f01071b3:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f01071b9	obj/kern/kernel.asm	/^f01071b9:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f01071bc	obj/kern/kernel.asm	/^f01071bc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01071be	obj/kern/kernel.asm	/^f01071be:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f01071c5	obj/kern/kernel.asm	/^f01071c5:	00 00 00 $/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f01071d3	obj/kern/kernel.asm	/^f01071d3:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f01071d9	obj/kern/kernel.asm	/^f01071d9:	e9 1d 01 00 00       	jmp    f01072fb <pci_scan_bus+0x1af>$/;"	l
f01071de	obj/kern/kernel.asm	/^f01071de:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01071e3	obj/kern/kernel.asm	/^f01071e3:	89 df                	mov    %ebx,%edi$/;"	l
f01071e5	obj/kern/kernel.asm	/^f01071e5:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f01071eb	obj/kern/kernel.asm	/^f01071eb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01071ed	obj/kern/kernel.asm	/^f01071ed:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01071f2	obj/kern/kernel.asm	/^f01071f2:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f01071f8	obj/kern/kernel.asm	/^f01071f8:	e8 27 ff ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f01071fd	obj/kern/kernel.asm	/^f01071fd:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f0107203	obj/kern/kernel.asm	/^f0107203:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0107207	obj/kern/kernel.asm	/^f0107207:	0f 84 e7 00 00 00    	je     f01072f4 <pci_scan_bus+0x1a8>$/;"	l
f010720d	obj/kern/kernel.asm	/^f010720d:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f0107212	obj/kern/kernel.asm	/^f0107212:	89 d8                	mov    %ebx,%eax$/;"	l
f0107214	obj/kern/kernel.asm	/^f0107214:	e8 0b ff ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f0107219	obj/kern/kernel.asm	/^f0107219:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f010721c	obj/kern/kernel.asm	/^f010721c:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0107221	obj/kern/kernel.asm	/^f0107221:	89 d8                	mov    %ebx,%eax$/;"	l
f0107223	obj/kern/kernel.asm	/^f0107223:	e8 fc fe ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f0107228	obj/kern/kernel.asm	/^f0107228:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f010722e	obj/kern/kernel.asm	/^f010722e:	89 c2                	mov    %eax,%edx$/;"	l
f0107230	obj/kern/kernel.asm	/^f0107230:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f0107233	obj/kern/kernel.asm	/^f0107233:	b9 98 97 10 f0       	mov    $0xf0109798,%ecx$/;"	l
f0107238	obj/kern/kernel.asm	/^f0107238:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f010723b	obj/kern/kernel.asm	/^f010723b:	77 07                	ja     f0107244 <pci_scan_bus+0xf8>$/;"	l
f010723d	obj/kern/kernel.asm	/^f010723d:	8b 0c 95 0c 98 10 f0 	mov    -0xfef67f4(,%edx,4),%ecx$/;"	l
f0107244	obj/kern/kernel.asm	/^f0107244:	8b b5 64 ff ff ff    	mov    -0x9c(%ebp),%esi$/;"	l
f010724a	obj/kern/kernel.asm	/^f010724a:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f010724e	obj/kern/kernel.asm	/^f010724e:	89 7c 24 24          	mov    %edi,0x24(%esp)$/;"	l
f0107252	obj/kern/kernel.asm	/^f0107252:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f0107256	obj/kern/kernel.asm	/^f0107256:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107259	obj/kern/kernel.asm	/^f0107259:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0107260	obj/kern/kernel.asm	/^f0107260:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0107264	obj/kern/kernel.asm	/^f0107264:	89 f0                	mov    %esi,%eax$/;"	l
f0107266	obj/kern/kernel.asm	/^f0107266:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107269	obj/kern/kernel.asm	/^f0107269:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010726d	obj/kern/kernel.asm	/^f010726d:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0107274	obj/kern/kernel.asm	/^f0107274:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f010727a	obj/kern/kernel.asm	/^f010727a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010727e	obj/kern/kernel.asm	/^f010727e:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax$/;"	l
f0107284	obj/kern/kernel.asm	/^f0107284:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107288	obj/kern/kernel.asm	/^f0107288:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f010728e	obj/kern/kernel.asm	/^f010728e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107291	obj/kern/kernel.asm	/^f0107291:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107295	obj/kern/kernel.asm	/^f0107295:	c7 04 24 24 96 10 f0 	movl   $0xf0109624,(%esp)$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	e8 0d ce ff ff       	call   f01040ae <cprintf>$/;"	l
f01072a1	obj/kern/kernel.asm	/^f01072a1:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01072ab	obj/kern/kernel.asm	/^f01072ab:	c7 44 24 08 0c 44 12 	movl   $0xf012440c,0x8(%esp)$/;"	l
f01072b2	obj/kern/kernel.asm	/^f01072b2:	f0 $/;"	l
f01072b3	obj/kern/kernel.asm	/^f01072b3:	89 c2                	mov    %eax,%edx$/;"	l
f01072b5	obj/kern/kernel.asm	/^f01072b5:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01072b8	obj/kern/kernel.asm	/^f01072b8:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01072bb	obj/kern/kernel.asm	/^f01072bb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01072bf	obj/kern/kernel.asm	/^f01072bf:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01072c2	obj/kern/kernel.asm	/^f01072c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01072c5	obj/kern/kernel.asm	/^f01072c5:	e8 f2 fc ff ff       	call   f0106fbc <pci_attach_match>$/;"	l
f01072ca	obj/kern/kernel.asm	/^f01072ca:	85 c0                	test   %eax,%eax$/;"	l
f01072cc	obj/kern/kernel.asm	/^f01072cc:	75 26                	jne    f01072f4 <pci_scan_bus+0x1a8>$/;"	l
f01072ce	obj/kern/kernel.asm	/^f01072ce:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f01072d4	obj/kern/kernel.asm	/^f01072d4:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01072d8	obj/kern/kernel.asm	/^f01072d8:	c7 44 24 08 f4 43 12 	movl   $0xf01243f4,0x8(%esp)$/;"	l
f01072df	obj/kern/kernel.asm	/^f01072df:	f0 $/;"	l
f01072e0	obj/kern/kernel.asm	/^f01072e0:	89 c2                	mov    %eax,%edx$/;"	l
f01072e2	obj/kern/kernel.asm	/^f01072e2:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01072e5	obj/kern/kernel.asm	/^f01072e5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01072e9	obj/kern/kernel.asm	/^f01072e9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01072ec	obj/kern/kernel.asm	/^f01072ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	e8 c8 fc ff ff       	call   f0106fbc <pci_attach_match>$/;"	l
f01072f4	obj/kern/kernel.asm	/^f01072f4:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f01072fb	obj/kern/kernel.asm	/^f01072fb:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)$/;"	l
f0107302	obj/kern/kernel.asm	/^f0107302:	19 c0                	sbb    %eax,%eax$/;"	l
f0107304	obj/kern/kernel.asm	/^f0107304:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107307	obj/kern/kernel.asm	/^f0107307:	83 c0 08             	add    $0x8,%eax$/;"	l
f010730a	obj/kern/kernel.asm	/^f010730a:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310:	0f 87 c8 fe ff ff    	ja     f01071de <pci_scan_bus+0x92>$/;"	l
f0107316	obj/kern/kernel.asm	/^f0107316:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0107319	obj/kern/kernel.asm	/^f0107319:	83 c0 01             	add    $0x1,%eax$/;"	l
f010731c	obj/kern/kernel.asm	/^f010731c:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f010731f	obj/kern/kernel.asm	/^f010731f:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0107322	obj/kern/kernel.asm	/^f0107322:	0f 86 61 fe ff ff    	jbe    f0107189 <pci_scan_bus+0x3d>$/;"	l
f0107328	obj/kern/kernel.asm	/^f0107328:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f010732e	obj/kern/kernel.asm	/^f010732e:	81 c4 1c 01 00 00    	add    $0x11c,%esp$/;"	l
f0107334	obj/kern/kernel.asm	/^f0107334:	5b                   	pop    %ebx$/;"	l
f0107335	obj/kern/kernel.asm	/^f0107335:	5e                   	pop    %esi$/;"	l
f0107336	obj/kern/kernel.asm	/^f0107336:	5f                   	pop    %edi$/;"	l
f0107337	obj/kern/kernel.asm	/^f0107337:	5d                   	pop    %ebp$/;"	l
f0107338	obj/kern/kernel.asm	/^f0107338:	c3                   	ret    $/;"	l
f0107339	obj/kern/kernel.asm	/^f0107339 <pci_bridge_attach>:$/;"	l
f0107339	obj/kern/kernel.asm	/^f0107339:	55                   	push   %ebp$/;"	l
f010733a	obj/kern/kernel.asm	/^f010733a:	89 e5                	mov    %esp,%ebp$/;"	l
f010733c	obj/kern/kernel.asm	/^f010733c:	57                   	push   %edi$/;"	l
f010733d	obj/kern/kernel.asm	/^f010733d:	56                   	push   %esi$/;"	l
f010733e	obj/kern/kernel.asm	/^f010733e:	53                   	push   %ebx$/;"	l
f010733f	obj/kern/kernel.asm	/^f010733f:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0107342	obj/kern/kernel.asm	/^f0107342:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107345	obj/kern/kernel.asm	/^f0107345:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f010734a	obj/kern/kernel.asm	/^f010734a:	89 d8                	mov    %ebx,%eax$/;"	l
f010734c	obj/kern/kernel.asm	/^f010734c:	e8 d3 fd ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f0107351	obj/kern/kernel.asm	/^f0107351:	89 c7                	mov    %eax,%edi$/;"	l
f0107353	obj/kern/kernel.asm	/^f0107353:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0107358	obj/kern/kernel.asm	/^f0107358:	89 d8                	mov    %ebx,%eax$/;"	l
f010735a	obj/kern/kernel.asm	/^f010735a:	e8 c5 fd ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f010735f	obj/kern/kernel.asm	/^f010735f:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0107362	obj/kern/kernel.asm	/^f0107362:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0107365	obj/kern/kernel.asm	/^f0107365:	75 2a                	jne    f0107391 <pci_bridge_attach+0x58>$/;"	l
f0107367	obj/kern/kernel.asm	/^f0107367:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010736a	obj/kern/kernel.asm	/^f010736a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010736e	obj/kern/kernel.asm	/^f010736e:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107371	obj/kern/kernel.asm	/^f0107371:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107375	obj/kern/kernel.asm	/^f0107375:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107377	obj/kern/kernel.asm	/^f0107377:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010737a	obj/kern/kernel.asm	/^f010737a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010737e	obj/kern/kernel.asm	/^f010737e:	c7 04 24 60 96 10 f0 	movl   $0xf0109660,(%esp)$/;"	l
f0107385	obj/kern/kernel.asm	/^f0107385:	e8 24 cd ff ff       	call   f01040ae <cprintf>$/;"	l
f010738a	obj/kern/kernel.asm	/^f010738a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010738f	obj/kern/kernel.asm	/^f010738f:	eb 67                	jmp    f01073f8 <pci_bridge_attach+0xbf>$/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	89 c6                	mov    %eax,%esi$/;"	l
f0107393	obj/kern/kernel.asm	/^f0107393:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f010739a	obj/kern/kernel.asm	/^f010739a:	00 $/;"	l
f010739b	obj/kern/kernel.asm	/^f010739b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01073a2	obj/kern/kernel.asm	/^f01073a2:	00 $/;"	l
f01073a3	obj/kern/kernel.asm	/^f01073a3:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f01073a6	obj/kern/kernel.asm	/^f01073a6:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01073a9	obj/kern/kernel.asm	/^f01073a9:	e8 99 ed ff ff       	call   f0106147 <memset>$/;"	l
f01073ae	obj/kern/kernel.asm	/^f01073ae:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f01073b1	obj/kern/kernel.asm	/^f01073b1:	89 f0                	mov    %esi,%eax$/;"	l
f01073b3	obj/kern/kernel.asm	/^f01073b3:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f01073b6	obj/kern/kernel.asm	/^f01073b6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01073b9	obj/kern/kernel.asm	/^f01073b9:	89 f2                	mov    %esi,%edx$/;"	l
f01073bb	obj/kern/kernel.asm	/^f01073bb:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01073be	obj/kern/kernel.asm	/^f01073be:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f01073c1	obj/kern/kernel.asm	/^f01073c1:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f01073c5	obj/kern/kernel.asm	/^f01073c5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01073c9	obj/kern/kernel.asm	/^f01073c9:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01073cc	obj/kern/kernel.asm	/^f01073cc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01073d0	obj/kern/kernel.asm	/^f01073d0:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01073d3	obj/kern/kernel.asm	/^f01073d3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01073d7	obj/kern/kernel.asm	/^f01073d7:	8b 03                	mov    (%ebx),%eax$/;"	l
f01073d9	obj/kern/kernel.asm	/^f01073d9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01073dc	obj/kern/kernel.asm	/^f01073dc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01073e0	obj/kern/kernel.asm	/^f01073e0:	c7 04 24 94 96 10 f0 	movl   $0xf0109694,(%esp)$/;"	l
f01073e7	obj/kern/kernel.asm	/^f01073e7:	e8 c2 cc ff ff       	call   f01040ae <cprintf>$/;"	l
f01073ec	obj/kern/kernel.asm	/^f01073ec:	89 f8                	mov    %edi,%eax$/;"	l
f01073ee	obj/kern/kernel.asm	/^f01073ee:	e8 59 fd ff ff       	call   f010714c <pci_scan_bus>$/;"	l
f01073f3	obj/kern/kernel.asm	/^f01073f3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01073f8	obj/kern/kernel.asm	/^f01073f8:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01073fb	obj/kern/kernel.asm	/^f01073fb:	5b                   	pop    %ebx$/;"	l
f01073fc	obj/kern/kernel.asm	/^f01073fc:	5e                   	pop    %esi$/;"	l
f01073fd	obj/kern/kernel.asm	/^f01073fd:	5f                   	pop    %edi$/;"	l
f01073fe	obj/kern/kernel.asm	/^f01073fe:	5d                   	pop    %ebp$/;"	l
f01073ff	obj/kern/kernel.asm	/^f01073ff:	c3                   	ret    $/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400 <pci_conf_write>:$/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400:	55                   	push   %ebp$/;"	l
f0107401	obj/kern/kernel.asm	/^f0107401:	89 e5                	mov    %esp,%ebp$/;"	l
f0107403	obj/kern/kernel.asm	/^f0107403:	56                   	push   %esi$/;"	l
f0107404	obj/kern/kernel.asm	/^f0107404:	53                   	push   %ebx$/;"	l
f0107405	obj/kern/kernel.asm	/^f0107405:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107408	obj/kern/kernel.asm	/^f0107408:	89 cb                	mov    %ecx,%ebx$/;"	l
f010740a	obj/kern/kernel.asm	/^f010740a:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010740d	obj/kern/kernel.asm	/^f010740d:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0107410	obj/kern/kernel.asm	/^f0107410:	8b 00                	mov    (%eax),%eax$/;"	l
f0107412	obj/kern/kernel.asm	/^f0107412:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107415	obj/kern/kernel.asm	/^f0107415:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107418	obj/kern/kernel.asm	/^f0107418:	89 f2                	mov    %esi,%edx$/;"	l
f010741a	obj/kern/kernel.asm	/^f010741a:	e8 00 fc ff ff       	call   f010701f <pci_conf1_set_addr>$/;"	l
f010741f	obj/kern/kernel.asm	/^f010741f:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107424	obj/kern/kernel.asm	/^f0107424:	89 d8                	mov    %ebx,%eax$/;"	l
f0107426	obj/kern/kernel.asm	/^f0107426:	ef                   	out    %eax,(%dx)$/;"	l
f0107427	obj/kern/kernel.asm	/^f0107427:	83 c4 10             	add    $0x10,%esp$/;"	l
f010742a	obj/kern/kernel.asm	/^f010742a:	5b                   	pop    %ebx$/;"	l
f010742b	obj/kern/kernel.asm	/^f010742b:	5e                   	pop    %esi$/;"	l
f010742c	obj/kern/kernel.asm	/^f010742c:	5d                   	pop    %ebp$/;"	l
f010742d	obj/kern/kernel.asm	/^f010742d:	c3                   	ret    $/;"	l
f010742e	obj/kern/kernel.asm	/^f010742e <pci_func_enable>:$/;"	l
f010742e	obj/kern/kernel.asm	/^f010742e:	55                   	push   %ebp$/;"	l
f010742f	obj/kern/kernel.asm	/^f010742f:	89 e5                	mov    %esp,%ebp$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	57                   	push   %edi$/;"	l
f0107432	obj/kern/kernel.asm	/^f0107432:	56                   	push   %esi$/;"	l
f0107433	obj/kern/kernel.asm	/^f0107433:	53                   	push   %ebx$/;"	l
f0107434	obj/kern/kernel.asm	/^f0107434:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0107437	obj/kern/kernel.asm	/^f0107437:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010743a	obj/kern/kernel.asm	/^f010743a:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f010743f	obj/kern/kernel.asm	/^f010743f:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0107444	obj/kern/kernel.asm	/^f0107444:	89 f8                	mov    %edi,%eax$/;"	l
f0107446	obj/kern/kernel.asm	/^f0107446:	e8 b5 ff ff ff       	call   f0107400 <pci_conf_write>$/;"	l
f010744b	obj/kern/kernel.asm	/^f010744b:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0107450	obj/kern/kernel.asm	/^f0107450:	89 f2                	mov    %esi,%edx$/;"	l
f0107452	obj/kern/kernel.asm	/^f0107452:	89 f8                	mov    %edi,%eax$/;"	l
f0107454	obj/kern/kernel.asm	/^f0107454:	e8 cb fc ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f0107459	obj/kern/kernel.asm	/^f0107459:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010745c	obj/kern/kernel.asm	/^f010745c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0107461	obj/kern/kernel.asm	/^f0107461:	89 f2                	mov    %esi,%edx$/;"	l
f0107463	obj/kern/kernel.asm	/^f0107463:	89 f8                	mov    %edi,%eax$/;"	l
f0107465	obj/kern/kernel.asm	/^f0107465:	e8 96 ff ff ff       	call   f0107400 <pci_conf_write>$/;"	l
f010746a	obj/kern/kernel.asm	/^f010746a:	89 f2                	mov    %esi,%edx$/;"	l
f010746c	obj/kern/kernel.asm	/^f010746c:	89 f8                	mov    %edi,%eax$/;"	l
f010746e	obj/kern/kernel.asm	/^f010746e:	e8 b1 fc ff ff       	call   f0107124 <pci_conf_read>$/;"	l
f0107473	obj/kern/kernel.asm	/^f0107473:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107478	obj/kern/kernel.asm	/^f0107478:	85 c0                	test   %eax,%eax$/;"	l
f010747a	obj/kern/kernel.asm	/^f010747a:	0f 84 c1 00 00 00    	je     f0107541 <pci_func_enable+0x113>$/;"	l
f0107480	obj/kern/kernel.asm	/^f0107480:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107483	obj/kern/kernel.asm	/^f0107483:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107486	obj/kern/kernel.asm	/^f0107486:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107489	obj/kern/kernel.asm	/^f0107489:	a8 01                	test   $0x1,%al$/;"	l
f010748b	obj/kern/kernel.asm	/^f010748b:	75 2c                	jne    f01074b9 <pci_func_enable+0x8b>$/;"	l
f010748d	obj/kern/kernel.asm	/^f010748d:	89 c2                	mov    %eax,%edx$/;"	l
f010748f	obj/kern/kernel.asm	/^f010748f:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107492	obj/kern/kernel.asm	/^f0107492:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107495	obj/kern/kernel.asm	/^f0107495:	0f 94 c3             	sete   %bl$/;"	l
f0107498	obj/kern/kernel.asm	/^f0107498:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010749b	obj/kern/kernel.asm	/^f010749b:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f01074a2	obj/kern/kernel.asm	/^f01074a2:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f01074a5	obj/kern/kernel.asm	/^f01074a5:	89 c2                	mov    %eax,%edx$/;"	l
f01074a7	obj/kern/kernel.asm	/^f01074a7:	f7 da                	neg    %edx$/;"	l
f01074a9	obj/kern/kernel.asm	/^f01074a9:	21 d0                	and    %edx,%eax$/;"	l
f01074ab	obj/kern/kernel.asm	/^f01074ab:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01074ae	obj/kern/kernel.asm	/^f01074ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01074b1	obj/kern/kernel.asm	/^f01074b1:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f01074b4	obj/kern/kernel.asm	/^f01074b4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	eb 1a                	jmp    f01074d3 <pci_func_enable+0xa5>$/;"	l
f01074b9	obj/kern/kernel.asm	/^f01074b9:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f01074bc	obj/kern/kernel.asm	/^f01074bc:	89 c2                	mov    %eax,%edx$/;"	l
f01074be	obj/kern/kernel.asm	/^f01074be:	f7 da                	neg    %edx$/;"	l
f01074c0	obj/kern/kernel.asm	/^f01074c0:	21 d0                	and    %edx,%eax$/;"	l
f01074c2	obj/kern/kernel.asm	/^f01074c2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01074c5	obj/kern/kernel.asm	/^f01074c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01074c8	obj/kern/kernel.asm	/^f01074c8:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f01074cb	obj/kern/kernel.asm	/^f01074cb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01074ce	obj/kern/kernel.asm	/^f01074ce:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f01074d3	obj/kern/kernel.asm	/^f01074d3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01074d6	obj/kern/kernel.asm	/^f01074d6:	89 f2                	mov    %esi,%edx$/;"	l
f01074d8	obj/kern/kernel.asm	/^f01074d8:	89 f8                	mov    %edi,%eax$/;"	l
f01074da	obj/kern/kernel.asm	/^f01074da:	e8 21 ff ff ff       	call   f0107400 <pci_conf_write>$/;"	l
f01074df	obj/kern/kernel.asm	/^f01074df:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01074e2	obj/kern/kernel.asm	/^f01074e2:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f01074e5	obj/kern/kernel.asm	/^f01074e5:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f01074e8	obj/kern/kernel.asm	/^f01074e8:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f01074eb	obj/kern/kernel.asm	/^f01074eb:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01074ee	obj/kern/kernel.asm	/^f01074ee:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f01074f1	obj/kern/kernel.asm	/^f01074f1:	85 c9                	test   %ecx,%ecx$/;"	l
f01074f3	obj/kern/kernel.asm	/^f01074f3:	75 4c                	jne    f0107541 <pci_func_enable+0x113>$/;"	l
f01074f5	obj/kern/kernel.asm	/^f01074f5:	85 d2                	test   %edx,%edx$/;"	l
f01074f7	obj/kern/kernel.asm	/^f01074f7:	74 48                	je     f0107541 <pci_func_enable+0x113>$/;"	l
f01074f9	obj/kern/kernel.asm	/^f01074f9:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f01074fc	obj/kern/kernel.asm	/^f01074fc:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0107500	obj/kern/kernel.asm	/^f0107500:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107503	obj/kern/kernel.asm	/^f0107503:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0107507	obj/kern/kernel.asm	/^f0107507:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010750a	obj/kern/kernel.asm	/^f010750a:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f010750e	obj/kern/kernel.asm	/^f010750e:	89 c2                	mov    %eax,%edx$/;"	l
f0107510	obj/kern/kernel.asm	/^f0107510:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107513	obj/kern/kernel.asm	/^f0107513:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107517	obj/kern/kernel.asm	/^f0107517:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010751a	obj/kern/kernel.asm	/^f010751a:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010751e	obj/kern/kernel.asm	/^f010751e:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107521	obj/kern/kernel.asm	/^f0107521:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107525	obj/kern/kernel.asm	/^f0107525:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107528	obj/kern/kernel.asm	/^f0107528:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010752c	obj/kern/kernel.asm	/^f010752c:	8b 07                	mov    (%edi),%eax$/;"	l
f010752e	obj/kern/kernel.asm	/^f010752e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107531	obj/kern/kernel.asm	/^f0107531:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107535	obj/kern/kernel.asm	/^f0107535:	c7 04 24 c4 96 10 f0 	movl   $0xf01096c4,(%esp)$/;"	l
f010753c	obj/kern/kernel.asm	/^f010753c:	e8 6d cb ff ff       	call   f01040ae <cprintf>$/;"	l
f0107541	obj/kern/kernel.asm	/^f0107541:	01 de                	add    %ebx,%esi$/;"	l
f0107543	obj/kern/kernel.asm	/^f0107543:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0107546	obj/kern/kernel.asm	/^f0107546:	0f 86 04 ff ff ff    	jbe    f0107450 <pci_func_enable+0x22>$/;"	l
f010754c	obj/kern/kernel.asm	/^f010754c:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f010754f	obj/kern/kernel.asm	/^f010754f:	89 c2                	mov    %eax,%edx$/;"	l
f0107551	obj/kern/kernel.asm	/^f0107551:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107554	obj/kern/kernel.asm	/^f0107554:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107558	obj/kern/kernel.asm	/^f0107558:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010755b	obj/kern/kernel.asm	/^f010755b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010755f	obj/kern/kernel.asm	/^f010755f:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107562	obj/kern/kernel.asm	/^f0107562:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107566	obj/kern/kernel.asm	/^f0107566:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107569	obj/kern/kernel.asm	/^f0107569:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010756d	obj/kern/kernel.asm	/^f010756d:	8b 07                	mov    (%edi),%eax$/;"	l
f010756f	obj/kern/kernel.asm	/^f010756f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107572	obj/kern/kernel.asm	/^f0107572:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107576	obj/kern/kernel.asm	/^f0107576:	c7 04 24 20 97 10 f0 	movl   $0xf0109720,(%esp)$/;"	l
f010757d	obj/kern/kernel.asm	/^f010757d:	e8 2c cb ff ff       	call   f01040ae <cprintf>$/;"	l
f0107582	obj/kern/kernel.asm	/^f0107582:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107585	obj/kern/kernel.asm	/^f0107585:	5b                   	pop    %ebx$/;"	l
f0107586	obj/kern/kernel.asm	/^f0107586:	5e                   	pop    %esi$/;"	l
f0107587	obj/kern/kernel.asm	/^f0107587:	5f                   	pop    %edi$/;"	l
f0107588	obj/kern/kernel.asm	/^f0107588:	5d                   	pop    %ebp$/;"	l
f0107589	obj/kern/kernel.asm	/^f0107589:	c3                   	ret    $/;"	l
f010758a	obj/kern/kernel.asm	/^f010758a <pci_init>:$/;"	l
f010758a	obj/kern/kernel.asm	/^f010758a:	55                   	push   %ebp$/;"	l
f010758b	obj/kern/kernel.asm	/^f010758b:	89 e5                	mov    %esp,%ebp$/;"	l
f010758d	obj/kern/kernel.asm	/^f010758d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107590	obj/kern/kernel.asm	/^f0107590:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107597	obj/kern/kernel.asm	/^f0107597:	00 $/;"	l
f0107598	obj/kern/kernel.asm	/^f0107598:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010759f	obj/kern/kernel.asm	/^f010759f:	00 $/;"	l
f01075a0	obj/kern/kernel.asm	/^f01075a0:	c7 04 24 80 4e 2b f0 	movl   $0xf02b4e80,(%esp)$/;"	l
f01075a7	obj/kern/kernel.asm	/^f01075a7:	e8 9b eb ff ff       	call   f0106147 <memset>$/;"	l
f01075ac	obj/kern/kernel.asm	/^f01075ac:	b8 80 4e 2b f0       	mov    $0xf02b4e80,%eax$/;"	l
f01075b1	obj/kern/kernel.asm	/^f01075b1:	e8 96 fb ff ff       	call   f010714c <pci_scan_bus>$/;"	l
f01075b6	obj/kern/kernel.asm	/^f01075b6:	c9                   	leave  $/;"	l
f01075b7	obj/kern/kernel.asm	/^f01075b7:	c3                   	ret    $/;"	l
f01075b8	obj/kern/kernel.asm	/^f01075b8 <time_init>:$/;"	l
f01075b8	obj/kern/kernel.asm	/^f01075b8:	55                   	push   %ebp$/;"	l
f01075b9	obj/kern/kernel.asm	/^f01075b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	c7 05 88 4e 2b f0 00 	movl   $0x0,0xf02b4e88$/;"	l
f01075c2	obj/kern/kernel.asm	/^f01075c2:	00 00 00 $/;"	l
f01075c5	obj/kern/kernel.asm	/^f01075c5:	5d                   	pop    %ebp$/;"	l
f01075c6	obj/kern/kernel.asm	/^f01075c6:	c3                   	ret    $/;"	l
f01075c7	obj/kern/kernel.asm	/^f01075c7 <time_tick>:$/;"	l
f01075c7	obj/kern/kernel.asm	/^f01075c7:	a1 88 4e 2b f0       	mov    0xf02b4e88,%eax$/;"	l
f01075cc	obj/kern/kernel.asm	/^f01075cc:	83 c0 01             	add    $0x1,%eax$/;"	l
f01075cf	obj/kern/kernel.asm	/^f01075cf:	a3 88 4e 2b f0       	mov    %eax,0xf02b4e88$/;"	l
f01075d4	obj/kern/kernel.asm	/^f01075d4:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f01075d7	obj/kern/kernel.asm	/^f01075d7:	01 d2                	add    %edx,%edx$/;"	l
f01075d9	obj/kern/kernel.asm	/^f01075d9:	39 d0                	cmp    %edx,%eax$/;"	l
f01075db	obj/kern/kernel.asm	/^f01075db:	76 22                	jbe    f01075ff <time_tick+0x38>$/;"	l
f01075dd	obj/kern/kernel.asm	/^f01075dd:	55                   	push   %ebp$/;"	l
f01075de	obj/kern/kernel.asm	/^f01075de:	89 e5                	mov    %esp,%ebp$/;"	l
f01075e0	obj/kern/kernel.asm	/^f01075e0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01075e3	obj/kern/kernel.asm	/^f01075e3:	c7 44 24 08 28 98 10 	movl   $0xf0109828,0x8(%esp)$/;"	l
f01075ea	obj/kern/kernel.asm	/^f01075ea:	f0 $/;"	l
f01075eb	obj/kern/kernel.asm	/^f01075eb:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f01075f2	obj/kern/kernel.asm	/^f01075f2:	00 $/;"	l
f01075f3	obj/kern/kernel.asm	/^f01075f3:	c7 04 24 43 98 10 f0 	movl   $0xf0109843,(%esp)$/;"	l
f01075fa	obj/kern/kernel.asm	/^f01075fa:	e8 41 8a ff ff       	call   f0100040 <_panic>$/;"	l
f01075ff	obj/kern/kernel.asm	/^f01075ff:	f3 c3                	repz ret $/;"	l
f0107601	obj/kern/kernel.asm	/^f0107601 <time_msec>:$/;"	l
f0107601	obj/kern/kernel.asm	/^f0107601:	55                   	push   %ebp$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	89 e5                	mov    %esp,%ebp$/;"	l
f0107604	obj/kern/kernel.asm	/^f0107604:	a1 88 4e 2b f0       	mov    0xf02b4e88,%eax$/;"	l
f0107609	obj/kern/kernel.asm	/^f0107609:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	01 c0                	add    %eax,%eax$/;"	l
f010760e	obj/kern/kernel.asm	/^f010760e:	5d                   	pop    %ebp$/;"	l
f010760f	obj/kern/kernel.asm	/^f010760f:	c3                   	ret    $/;"	l
f0107610	obj/kern/kernel.asm	/^f0107610 <__udivdi3>:$/;"	l
f0107610	obj/kern/kernel.asm	/^f0107610:	55                   	push   %ebp$/;"	l
f0107611	obj/kern/kernel.asm	/^f0107611:	57                   	push   %edi$/;"	l
f0107612	obj/kern/kernel.asm	/^f0107612:	56                   	push   %esi$/;"	l
f0107613	obj/kern/kernel.asm	/^f0107613:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107616	obj/kern/kernel.asm	/^f0107616:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010761a	obj/kern/kernel.asm	/^f010761a:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f010761e	obj/kern/kernel.asm	/^f010761e:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f0107622	obj/kern/kernel.asm	/^f0107622:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107626	obj/kern/kernel.asm	/^f0107626:	85 c0                	test   %eax,%eax$/;"	l
f0107628	obj/kern/kernel.asm	/^f0107628:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010762c	obj/kern/kernel.asm	/^f010762c:	89 ea                	mov    %ebp,%edx$/;"	l
f010762e	obj/kern/kernel.asm	/^f010762e:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0107631	obj/kern/kernel.asm	/^f0107631:	75 2d                	jne    f0107660 <__udivdi3+0x50>$/;"	l
f0107633	obj/kern/kernel.asm	/^f0107633:	39 e9                	cmp    %ebp,%ecx$/;"	l
f0107635	obj/kern/kernel.asm	/^f0107635:	77 61                	ja     f0107698 <__udivdi3+0x88>$/;"	l
f0107637	obj/kern/kernel.asm	/^f0107637:	85 c9                	test   %ecx,%ecx$/;"	l
f0107639	obj/kern/kernel.asm	/^f0107639:	89 ce                	mov    %ecx,%esi$/;"	l
f010763b	obj/kern/kernel.asm	/^f010763b:	75 0b                	jne    f0107648 <__udivdi3+0x38>$/;"	l
f010763d	obj/kern/kernel.asm	/^f010763d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107642	obj/kern/kernel.asm	/^f0107642:	31 d2                	xor    %edx,%edx$/;"	l
f0107644	obj/kern/kernel.asm	/^f0107644:	f7 f1                	div    %ecx$/;"	l
f0107646	obj/kern/kernel.asm	/^f0107646:	89 c6                	mov    %eax,%esi$/;"	l
f0107648	obj/kern/kernel.asm	/^f0107648:	31 d2                	xor    %edx,%edx$/;"	l
f010764a	obj/kern/kernel.asm	/^f010764a:	89 e8                	mov    %ebp,%eax$/;"	l
f010764c	obj/kern/kernel.asm	/^f010764c:	f7 f6                	div    %esi$/;"	l
f010764e	obj/kern/kernel.asm	/^f010764e:	89 c5                	mov    %eax,%ebp$/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650:	89 f8                	mov    %edi,%eax$/;"	l
f0107652	obj/kern/kernel.asm	/^f0107652:	f7 f6                	div    %esi$/;"	l
f0107654	obj/kern/kernel.asm	/^f0107654:	89 ea                	mov    %ebp,%edx$/;"	l
f0107656	obj/kern/kernel.asm	/^f0107656:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107659	obj/kern/kernel.asm	/^f0107659:	5e                   	pop    %esi$/;"	l
f010765a	obj/kern/kernel.asm	/^f010765a:	5f                   	pop    %edi$/;"	l
f010765b	obj/kern/kernel.asm	/^f010765b:	5d                   	pop    %ebp$/;"	l
f010765c	obj/kern/kernel.asm	/^f010765c:	c3                   	ret    $/;"	l
f010765d	obj/kern/kernel.asm	/^f010765d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107660	obj/kern/kernel.asm	/^f0107660:	39 e8                	cmp    %ebp,%eax$/;"	l
f0107662	obj/kern/kernel.asm	/^f0107662:	77 24                	ja     f0107688 <__udivdi3+0x78>$/;"	l
f0107664	obj/kern/kernel.asm	/^f0107664:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107667	obj/kern/kernel.asm	/^f0107667:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010766a	obj/kern/kernel.asm	/^f010766a:	75 3c                	jne    f01076a8 <__udivdi3+0x98>$/;"	l
f010766c	obj/kern/kernel.asm	/^f010766c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0107670	obj/kern/kernel.asm	/^f0107670:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0107673	obj/kern/kernel.asm	/^f0107673:	0f 86 9f 00 00 00    	jbe    f0107718 <__udivdi3+0x108>$/;"	l
f0107679	obj/kern/kernel.asm	/^f0107679:	39 d0                	cmp    %edx,%eax$/;"	l
f010767b	obj/kern/kernel.asm	/^f010767b:	0f 82 97 00 00 00    	jb     f0107718 <__udivdi3+0x108>$/;"	l
f0107681	obj/kern/kernel.asm	/^f0107681:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107688	obj/kern/kernel.asm	/^f0107688:	31 d2                	xor    %edx,%edx$/;"	l
f010768a	obj/kern/kernel.asm	/^f010768a:	31 c0                	xor    %eax,%eax$/;"	l
f010768c	obj/kern/kernel.asm	/^f010768c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010768f	obj/kern/kernel.asm	/^f010768f:	5e                   	pop    %esi$/;"	l
f0107690	obj/kern/kernel.asm	/^f0107690:	5f                   	pop    %edi$/;"	l
f0107691	obj/kern/kernel.asm	/^f0107691:	5d                   	pop    %ebp$/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692:	c3                   	ret    $/;"	l
f0107693	obj/kern/kernel.asm	/^f0107693:	90                   	nop$/;"	l
f0107694	obj/kern/kernel.asm	/^f0107694:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107698	obj/kern/kernel.asm	/^f0107698:	89 f8                	mov    %edi,%eax$/;"	l
f010769a	obj/kern/kernel.asm	/^f010769a:	f7 f1                	div    %ecx$/;"	l
f010769c	obj/kern/kernel.asm	/^f010769c:	31 d2                	xor    %edx,%edx$/;"	l
f010769e	obj/kern/kernel.asm	/^f010769e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01076a1	obj/kern/kernel.asm	/^f01076a1:	5e                   	pop    %esi$/;"	l
f01076a2	obj/kern/kernel.asm	/^f01076a2:	5f                   	pop    %edi$/;"	l
f01076a3	obj/kern/kernel.asm	/^f01076a3:	5d                   	pop    %ebp$/;"	l
f01076a4	obj/kern/kernel.asm	/^f01076a4:	c3                   	ret    $/;"	l
f01076a5	obj/kern/kernel.asm	/^f01076a5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01076a8	obj/kern/kernel.asm	/^f01076a8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01076aa	obj/kern/kernel.asm	/^f01076aa:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f01076ad	obj/kern/kernel.asm	/^f01076ad:	d3 e0                	shl    %cl,%eax$/;"	d
f01076af	obj/kern/kernel.asm	/^f01076af:	89 c6                	mov    %eax,%esi$/;"	l
f01076b1	obj/kern/kernel.asm	/^f01076b1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01076b6	obj/kern/kernel.asm	/^f01076b6:	29 e8                	sub    %ebp,%eax$/;"	l
f01076b8	obj/kern/kernel.asm	/^f01076b8:	89 c1                	mov    %eax,%ecx$/;"	l
f01076ba	obj/kern/kernel.asm	/^f01076ba:	d3 ef                	shr    %cl,%edi$/;"	d
f01076bc	obj/kern/kernel.asm	/^f01076bc:	89 e9                	mov    %ebp,%ecx$/;"	l
f01076be	obj/kern/kernel.asm	/^f01076be:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01076c2	obj/kern/kernel.asm	/^f01076c2:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f01076c5	obj/kern/kernel.asm	/^f01076c5:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f01076c9	obj/kern/kernel.asm	/^f01076c9:	89 d6                	mov    %edx,%esi$/;"	l
f01076cb	obj/kern/kernel.asm	/^f01076cb:	d3 e7                	shl    %cl,%edi$/;"	d
f01076cd	obj/kern/kernel.asm	/^f01076cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01076cf	obj/kern/kernel.asm	/^f01076cf:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01076d2	obj/kern/kernel.asm	/^f01076d2:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01076d6	obj/kern/kernel.asm	/^f01076d6:	d3 ee                	shr    %cl,%esi$/;"	d
f01076d8	obj/kern/kernel.asm	/^f01076d8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01076da	obj/kern/kernel.asm	/^f01076da:	d3 e2                	shl    %cl,%edx$/;"	d
f01076dc	obj/kern/kernel.asm	/^f01076dc:	89 c1                	mov    %eax,%ecx$/;"	l
f01076de	obj/kern/kernel.asm	/^f01076de:	d3 ef                	shr    %cl,%edi$/;"	d
f01076e0	obj/kern/kernel.asm	/^f01076e0:	09 d7                	or     %edx,%edi$/;"	l
f01076e2	obj/kern/kernel.asm	/^f01076e2:	89 f2                	mov    %esi,%edx$/;"	l
f01076e4	obj/kern/kernel.asm	/^f01076e4:	89 f8                	mov    %edi,%eax$/;"	l
f01076e6	obj/kern/kernel.asm	/^f01076e6:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f01076ea	obj/kern/kernel.asm	/^f01076ea:	89 d6                	mov    %edx,%esi$/;"	l
f01076ec	obj/kern/kernel.asm	/^f01076ec:	89 c7                	mov    %eax,%edi$/;"	l
f01076ee	obj/kern/kernel.asm	/^f01076ee:	f7 24 24             	mull   (%esp)$/;"	l
f01076f1	obj/kern/kernel.asm	/^f01076f1:	39 d6                	cmp    %edx,%esi$/;"	l
f01076f3	obj/kern/kernel.asm	/^f01076f3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01076f6	obj/kern/kernel.asm	/^f01076f6:	72 30                	jb     f0107728 <__udivdi3+0x118>$/;"	l
f01076f8	obj/kern/kernel.asm	/^f01076f8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f01076fc	obj/kern/kernel.asm	/^f01076fc:	89 e9                	mov    %ebp,%ecx$/;"	l
f01076fe	obj/kern/kernel.asm	/^f01076fe:	d3 e2                	shl    %cl,%edx$/;"	d
f0107700	obj/kern/kernel.asm	/^f0107700:	39 c2                	cmp    %eax,%edx$/;"	l
f0107702	obj/kern/kernel.asm	/^f0107702:	73 05                	jae    f0107709 <__udivdi3+0xf9>$/;"	l
f0107704	obj/kern/kernel.asm	/^f0107704:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0107707	obj/kern/kernel.asm	/^f0107707:	74 1f                	je     f0107728 <__udivdi3+0x118>$/;"	l
f0107709	obj/kern/kernel.asm	/^f0107709:	89 f8                	mov    %edi,%eax$/;"	l
f010770b	obj/kern/kernel.asm	/^f010770b:	31 d2                	xor    %edx,%edx$/;"	l
f010770d	obj/kern/kernel.asm	/^f010770d:	e9 7a ff ff ff       	jmp    f010768c <__udivdi3+0x7c>$/;"	l
f0107712	obj/kern/kernel.asm	/^f0107712:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107718	obj/kern/kernel.asm	/^f0107718:	31 d2                	xor    %edx,%edx$/;"	l
f010771a	obj/kern/kernel.asm	/^f010771a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010771f	obj/kern/kernel.asm	/^f010771f:	e9 68 ff ff ff       	jmp    f010768c <__udivdi3+0x7c>$/;"	l
f0107724	obj/kern/kernel.asm	/^f0107724:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107728	obj/kern/kernel.asm	/^f0107728:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f010772b	obj/kern/kernel.asm	/^f010772b:	31 d2                	xor    %edx,%edx$/;"	l
f010772d	obj/kern/kernel.asm	/^f010772d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107730	obj/kern/kernel.asm	/^f0107730:	5e                   	pop    %esi$/;"	l
f0107731	obj/kern/kernel.asm	/^f0107731:	5f                   	pop    %edi$/;"	l
f0107732	obj/kern/kernel.asm	/^f0107732:	5d                   	pop    %ebp$/;"	l
f0107733	obj/kern/kernel.asm	/^f0107733:	c3                   	ret    $/;"	l
f0107740	obj/kern/kernel.asm	/^f0107740 <__umoddi3>:$/;"	l
f0107740	obj/kern/kernel.asm	/^f0107740:	55                   	push   %ebp$/;"	l
f0107741	obj/kern/kernel.asm	/^f0107741:	57                   	push   %edi$/;"	l
f0107742	obj/kern/kernel.asm	/^f0107742:	56                   	push   %esi$/;"	l
f0107743	obj/kern/kernel.asm	/^f0107743:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107746	obj/kern/kernel.asm	/^f0107746:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010774a	obj/kern/kernel.asm	/^f010774a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f010774e	obj/kern/kernel.asm	/^f010774e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0107752	obj/kern/kernel.asm	/^f0107752:	89 c7                	mov    %eax,%edi$/;"	l
f0107754	obj/kern/kernel.asm	/^f0107754:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107758	obj/kern/kernel.asm	/^f0107758:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f010775c	obj/kern/kernel.asm	/^f010775c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0107760	obj/kern/kernel.asm	/^f0107760:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0107763	obj/kern/kernel.asm	/^f0107763:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107767	obj/kern/kernel.asm	/^f0107767:	85 c0                	test   %eax,%eax$/;"	l
f0107769	obj/kern/kernel.asm	/^f0107769:	89 c2                	mov    %eax,%edx$/;"	l
f010776b	obj/kern/kernel.asm	/^f010776b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010776f	obj/kern/kernel.asm	/^f010776f:	75 17                	jne    f0107788 <__umoddi3+0x48>$/;"	l
f0107771	obj/kern/kernel.asm	/^f0107771:	39 fe                	cmp    %edi,%esi$/;"	l
f0107773	obj/kern/kernel.asm	/^f0107773:	76 4b                	jbe    f01077c0 <__umoddi3+0x80>$/;"	l
f0107775	obj/kern/kernel.asm	/^f0107775:	89 c8                	mov    %ecx,%eax$/;"	l
f0107777	obj/kern/kernel.asm	/^f0107777:	89 fa                	mov    %edi,%edx$/;"	l
f0107779	obj/kern/kernel.asm	/^f0107779:	f7 f6                	div    %esi$/;"	l
f010777b	obj/kern/kernel.asm	/^f010777b:	89 d0                	mov    %edx,%eax$/;"	l
f010777d	obj/kern/kernel.asm	/^f010777d:	31 d2                	xor    %edx,%edx$/;"	l
f010777f	obj/kern/kernel.asm	/^f010777f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107782	obj/kern/kernel.asm	/^f0107782:	5e                   	pop    %esi$/;"	l
f0107783	obj/kern/kernel.asm	/^f0107783:	5f                   	pop    %edi$/;"	l
f0107784	obj/kern/kernel.asm	/^f0107784:	5d                   	pop    %ebp$/;"	l
f0107785	obj/kern/kernel.asm	/^f0107785:	c3                   	ret    $/;"	l
f0107786	obj/kern/kernel.asm	/^f0107786:	66 90                	xchg   %ax,%ax$/;"	l
f0107788	obj/kern/kernel.asm	/^f0107788:	39 f8                	cmp    %edi,%eax$/;"	l
f010778a	obj/kern/kernel.asm	/^f010778a:	77 54                	ja     f01077e0 <__umoddi3+0xa0>$/;"	l
f010778c	obj/kern/kernel.asm	/^f010778c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010778f	obj/kern/kernel.asm	/^f010778f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107792	obj/kern/kernel.asm	/^f0107792:	75 5c                	jne    f01077f0 <__umoddi3+0xb0>$/;"	l
f0107794	obj/kern/kernel.asm	/^f0107794:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0107798	obj/kern/kernel.asm	/^f0107798:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f010779b	obj/kern/kernel.asm	/^f010779b:	0f 87 e7 00 00 00    	ja     f0107888 <__umoddi3+0x148>$/;"	l
f01077a1	obj/kern/kernel.asm	/^f01077a1:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01077a5	obj/kern/kernel.asm	/^f01077a5:	29 f1                	sub    %esi,%ecx$/;"	l
f01077a7	obj/kern/kernel.asm	/^f01077a7:	19 c7                	sbb    %eax,%edi$/;"	l
f01077a9	obj/kern/kernel.asm	/^f01077a9:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01077ad	obj/kern/kernel.asm	/^f01077ad:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01077b1	obj/kern/kernel.asm	/^f01077b1:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f01077b5	obj/kern/kernel.asm	/^f01077b5:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01077b9	obj/kern/kernel.asm	/^f01077b9:	83 c4 14             	add    $0x14,%esp$/;"	l
f01077bc	obj/kern/kernel.asm	/^f01077bc:	5e                   	pop    %esi$/;"	l
f01077bd	obj/kern/kernel.asm	/^f01077bd:	5f                   	pop    %edi$/;"	l
f01077be	obj/kern/kernel.asm	/^f01077be:	5d                   	pop    %ebp$/;"	l
f01077bf	obj/kern/kernel.asm	/^f01077bf:	c3                   	ret    $/;"	l
f01077c0	obj/kern/kernel.asm	/^f01077c0:	85 f6                	test   %esi,%esi$/;"	l
f01077c2	obj/kern/kernel.asm	/^f01077c2:	89 f5                	mov    %esi,%ebp$/;"	l
f01077c4	obj/kern/kernel.asm	/^f01077c4:	75 0b                	jne    f01077d1 <__umoddi3+0x91>$/;"	l
f01077c6	obj/kern/kernel.asm	/^f01077c6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01077cb	obj/kern/kernel.asm	/^f01077cb:	31 d2                	xor    %edx,%edx$/;"	l
f01077cd	obj/kern/kernel.asm	/^f01077cd:	f7 f6                	div    %esi$/;"	l
f01077cf	obj/kern/kernel.asm	/^f01077cf:	89 c5                	mov    %eax,%ebp$/;"	l
f01077d1	obj/kern/kernel.asm	/^f01077d1:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f01077d5	obj/kern/kernel.asm	/^f01077d5:	31 d2                	xor    %edx,%edx$/;"	l
f01077d7	obj/kern/kernel.asm	/^f01077d7:	f7 f5                	div    %ebp$/;"	l
f01077d9	obj/kern/kernel.asm	/^f01077d9:	89 c8                	mov    %ecx,%eax$/;"	l
f01077db	obj/kern/kernel.asm	/^f01077db:	f7 f5                	div    %ebp$/;"	l
f01077dd	obj/kern/kernel.asm	/^f01077dd:	eb 9c                	jmp    f010777b <__umoddi3+0x3b>$/;"	l
f01077df	obj/kern/kernel.asm	/^f01077df:	90                   	nop$/;"	l
f01077e0	obj/kern/kernel.asm	/^f01077e0:	89 c8                	mov    %ecx,%eax$/;"	l
f01077e2	obj/kern/kernel.asm	/^f01077e2:	89 fa                	mov    %edi,%edx$/;"	l
f01077e4	obj/kern/kernel.asm	/^f01077e4:	83 c4 14             	add    $0x14,%esp$/;"	l
f01077e7	obj/kern/kernel.asm	/^f01077e7:	5e                   	pop    %esi$/;"	l
f01077e8	obj/kern/kernel.asm	/^f01077e8:	5f                   	pop    %edi$/;"	l
f01077e9	obj/kern/kernel.asm	/^f01077e9:	5d                   	pop    %ebp$/;"	l
f01077ea	obj/kern/kernel.asm	/^f01077ea:	c3                   	ret    $/;"	l
f01077eb	obj/kern/kernel.asm	/^f01077eb:	90                   	nop$/;"	l
f01077ec	obj/kern/kernel.asm	/^f01077ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01077f0	obj/kern/kernel.asm	/^f01077f0:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01077f3	obj/kern/kernel.asm	/^f01077f3:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f01077f8	obj/kern/kernel.asm	/^f01077f8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01077fa	obj/kern/kernel.asm	/^f01077fa:	29 ee                	sub    %ebp,%esi$/;"	l
f01077fc	obj/kern/kernel.asm	/^f01077fc:	d3 e2                	shl    %cl,%edx$/;"	d
f01077fe	obj/kern/kernel.asm	/^f01077fe:	89 f1                	mov    %esi,%ecx$/;"	l
f0107800	obj/kern/kernel.asm	/^f0107800:	d3 e8                	shr    %cl,%eax$/;"	d
f0107802	obj/kern/kernel.asm	/^f0107802:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107804	obj/kern/kernel.asm	/^f0107804:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107808	obj/kern/kernel.asm	/^f0107808:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010780b	obj/kern/kernel.asm	/^f010780b:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f010780f	obj/kern/kernel.asm	/^f010780f:	89 fa                	mov    %edi,%edx$/;"	l
f0107811	obj/kern/kernel.asm	/^f0107811:	d3 e0                	shl    %cl,%eax$/;"	d
f0107813	obj/kern/kernel.asm	/^f0107813:	89 f1                	mov    %esi,%ecx$/;"	l
f0107815	obj/kern/kernel.asm	/^f0107815:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107819	obj/kern/kernel.asm	/^f0107819:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f010781d	obj/kern/kernel.asm	/^f010781d:	d3 ea                	shr    %cl,%edx$/;"	d
f010781f	obj/kern/kernel.asm	/^f010781f:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107821	obj/kern/kernel.asm	/^f0107821:	d3 e7                	shl    %cl,%edi$/;"	d
f0107823	obj/kern/kernel.asm	/^f0107823:	89 f1                	mov    %esi,%ecx$/;"	l
f0107825	obj/kern/kernel.asm	/^f0107825:	d3 e8                	shr    %cl,%eax$/;"	d
f0107827	obj/kern/kernel.asm	/^f0107827:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107829	obj/kern/kernel.asm	/^f0107829:	09 f8                	or     %edi,%eax$/;"	l
f010782b	obj/kern/kernel.asm	/^f010782b:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f010782f	obj/kern/kernel.asm	/^f010782f:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f0107833	obj/kern/kernel.asm	/^f0107833:	d3 e7                	shl    %cl,%edi$/;"	d
f0107835	obj/kern/kernel.asm	/^f0107835:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107839	obj/kern/kernel.asm	/^f0107839:	89 d7                	mov    %edx,%edi$/;"	l
f010783b	obj/kern/kernel.asm	/^f010783b:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f010783f	obj/kern/kernel.asm	/^f010783f:	39 d7                	cmp    %edx,%edi$/;"	l
f0107841	obj/kern/kernel.asm	/^f0107841:	89 c1                	mov    %eax,%ecx$/;"	l
f0107843	obj/kern/kernel.asm	/^f0107843:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107846	obj/kern/kernel.asm	/^f0107846:	72 2c                	jb     f0107874 <__umoddi3+0x134>$/;"	l
f0107848	obj/kern/kernel.asm	/^f0107848:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f010784c	obj/kern/kernel.asm	/^f010784c:	72 22                	jb     f0107870 <__umoddi3+0x130>$/;"	l
f010784e	obj/kern/kernel.asm	/^f010784e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0107852	obj/kern/kernel.asm	/^f0107852:	29 c8                	sub    %ecx,%eax$/;"	l
f0107854	obj/kern/kernel.asm	/^f0107854:	19 d7                	sbb    %edx,%edi$/;"	l
f0107856	obj/kern/kernel.asm	/^f0107856:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107858	obj/kern/kernel.asm	/^f0107858:	89 fa                	mov    %edi,%edx$/;"	l
f010785a	obj/kern/kernel.asm	/^f010785a:	d3 e8                	shr    %cl,%eax$/;"	d
f010785c	obj/kern/kernel.asm	/^f010785c:	89 f1                	mov    %esi,%ecx$/;"	l
f010785e	obj/kern/kernel.asm	/^f010785e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107860	obj/kern/kernel.asm	/^f0107860:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107862	obj/kern/kernel.asm	/^f0107862:	d3 ef                	shr    %cl,%edi$/;"	d
f0107864	obj/kern/kernel.asm	/^f0107864:	09 d0                	or     %edx,%eax$/;"	l
f0107866	obj/kern/kernel.asm	/^f0107866:	89 fa                	mov    %edi,%edx$/;"	l
f0107868	obj/kern/kernel.asm	/^f0107868:	83 c4 14             	add    $0x14,%esp$/;"	l
f010786b	obj/kern/kernel.asm	/^f010786b:	5e                   	pop    %esi$/;"	l
f010786c	obj/kern/kernel.asm	/^f010786c:	5f                   	pop    %edi$/;"	l
f010786d	obj/kern/kernel.asm	/^f010786d:	5d                   	pop    %ebp$/;"	l
f010786e	obj/kern/kernel.asm	/^f010786e:	c3                   	ret    $/;"	l
f010786f	obj/kern/kernel.asm	/^f010786f:	90                   	nop$/;"	l
f0107870	obj/kern/kernel.asm	/^f0107870:	39 d7                	cmp    %edx,%edi$/;"	l
f0107872	obj/kern/kernel.asm	/^f0107872:	75 da                	jne    f010784e <__umoddi3+0x10e>$/;"	l
f0107874	obj/kern/kernel.asm	/^f0107874:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0107877	obj/kern/kernel.asm	/^f0107877:	89 c1                	mov    %eax,%ecx$/;"	l
f0107879	obj/kern/kernel.asm	/^f0107879:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010787d	obj/kern/kernel.asm	/^f010787d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0107881	obj/kern/kernel.asm	/^f0107881:	eb cb                	jmp    f010784e <__umoddi3+0x10e>$/;"	l
f0107883	obj/kern/kernel.asm	/^f0107883:	90                   	nop$/;"	l
f0107884	obj/kern/kernel.asm	/^f0107884:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107888	obj/kern/kernel.asm	/^f0107888:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010788c	obj/kern/kernel.asm	/^f010788c:	0f 82 0f ff ff ff    	jb     f01077a1 <__umoddi3+0x61>$/;"	l
f0107892	obj/kern/kernel.asm	/^f0107892:	e9 1a ff ff ff       	jmp    f01077b1 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^  uint32_t f_direct[NDIRECT];  \/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^  uint32_t f_indirect;    \/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^  char f_name[MAXNAMELEN];  \/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^  uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^  off_t f_size;      \/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^  uint32_t f_type;    \/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
fault_va	obj/kern/kernel.asm	/^  fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^  int fd;    \/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^  fd = -1;$/;"	d
fd	obj/user/icode.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^  fd = r;$/;"	d
fd	obj/user/idle.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^  fd = -1;$/;"	d
fd	obj/user/init.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^  fd = r;$/;"	d
fd	obj/user/ls.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^    fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^  fd = -1;$/;"	d
fd	obj/user/sh.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^  fd = r;$/;"	d
fd	obj/user/softint.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^  fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^  fd = r;$/;"	d
fd	obj/user/spin.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^  fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^  fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^  fd = r;$/;"	d
fd	obj/user/testshell.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^  fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^  fd = r;$/;"	d
fd	obj/user/testtime.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^    fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^  fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^  int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^    struct FdFile fd_file;$/;"	m	union:Fd::__anon5	typeref:struct:Fd::__anon5::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^  off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^  int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^    struct FdSock fd_sock;$/;"	m	union:Fd::__anon5	typeref:struct:Fd::__anon5::FdSock
fdcopy	obj/user/testfile.asm	/^  fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^  uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^  fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^    first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^  first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^  fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^  uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^  } flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^  fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^    fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^  int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^  void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^  unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^  unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^  unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^  unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^  unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^  unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^  unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^  unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^  unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^    generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^  generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon19::__anon20	typeref:struct:netifapi_msg_msg::__anon19::__anon20::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon22::__anon25
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^  char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon16
i	obj/kern/kernel.asm	/^      i = 0;$/;"	d
i	obj/kern/kernel.asm	/^      i = ROUNDUP(i, PGSIZE);$/;"	d
i	obj/kern/kernel.asm	/^      i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^    i = (i + 1) % NENV;$/;"	d
i	obj/kern/kernel.asm	/^    i = (prev + 1) % NENV;$/;"	d
i	obj/kern/kernel.asm	/^  i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^  i = 0;$/;"	d
i	obj/user/primes.asm	/^    i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^  i = 0;$/;"	d
i	obj/user/testkbd.asm	/^  i = 0;$/;"	d
i	obj/user/testpipe.asm	/^    i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^  int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^  id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^  int idx;  \/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^  int idx;  \/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^  uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon16
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
indirect_va	obj/fs/fs.asm	/^    indirect_va = diskaddr(f->f_indirect);$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon19::__anon20
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::__anon23
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon19::__anon20
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^  input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^  input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^      interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^    interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^  interactive = '?';$/;"	d
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon31::__anon37	typeref:struct:api_msg_msg::__anon31::__anon37::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon30	typeref:struct:netconn::__anon30::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon31::__anon33	typeref:struct:api_msg_msg::__anon31::__anon33::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon31::__anon34	typeref:struct:api_msg_msg::__anon31::__anon34::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon19::__anon20	typeref:struct:netifapi_msg_msg::__anon19::__anon20::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^  irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^      ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^  ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::__anon37
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon31::__anon37	typeref:enum:api_msg_msg::__anon31::__anon37::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^  char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^  int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;    \/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^  kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^  uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^  uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kid	obj/user/testpiperace.asm	/^  kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^  kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
kstackend_pa	obj/kern/kernel.asm	/^    kstackend_pa = PADDR(percpu_kstacks[i]);$/;"	d
kstackend_va	obj/kern/kernel.asm	/^    kstackend_va = KSTACKTOP - i * (KSTKSIZE + KSTKGAP) - KSTKSIZE;$/;"	d
kva	obj/kern/kernel.asm	/^        kva = page2kva(env_pp) + (ph->p_va + i) % PGSIZE;$/;"	d
l	obj/kern/kernel.asm	/^      l = m;$/;"	d
l	obj/kern/kernel.asm	/^      l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^  lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^  physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^    lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^  lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^  last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::__anon38
lba_length	inc/partition.h	/^  uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^  uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon31::__anon35
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon31::__anon36
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/kern/kernel.asm	/^  len = rx_desc_array[idx].length;$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^  uint16_t length;$/;"	m	struct:rx_desc
length	kern/e1000.h	/^  uint16_t length;$/;"	m	struct:tx_desc
length	kern/mpconfig.c	/^  uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^  uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^  lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^    lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^    lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^    lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^    lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^    lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^    lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^  lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
line	user/num.c	/^int line = 0;$/;"	v
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^  } listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^    lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^    lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon31::__anon34
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^  unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^    m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/ns.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^    m = n - tot;$/;"	d
m	obj/net/ns.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testinput.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^    m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^    m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^    m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^    m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^    m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^    m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^    m = n - tot;$/;"	d
m	obj/user/cat.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^    m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^    m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^    m = n - tot;$/;"	d
m	obj/user/echo.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^    m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^    m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^    m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^    m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^    m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^    m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^    m = n - tot;$/;"	d
m	obj/user/hello.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^    m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^    m = n - tot;$/;"	d
m	obj/user/icode.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^    m = n - tot;$/;"	d
m	obj/user/idle.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^    m = n - tot;$/;"	d
m	obj/user/init.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^    m = n - tot;$/;"	d
m	obj/user/ls.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^    m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^    m = n - tot;$/;"	d
m	obj/user/num.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^    m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^    m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^    m = n - tot;$/;"	d
m	obj/user/primes.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^    m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^    m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^    m = n - tot;$/;"	d
m	obj/user/sh.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^    m = n - tot;$/;"	d
m	obj/user/softint.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^    m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^    m = n - tot;$/;"	d
m	obj/user/spin.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^    m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^    m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^    m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^    m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^    m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^    m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^    m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^    m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^    m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^    m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^    m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^      m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^    m = n - tot;$/;"	d
m	obj/user/yield.asm	/^    m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
max	obj/user/testpiperace.asm	/^  max = 200;$/;"	d
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon27
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon26
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^      mismatch = 1;          \\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mm1	obj/kern/kernel.asm	/^  mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^  mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^    mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^      mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^    mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^    mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^      mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^    mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^    mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^  uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon22::__anon25
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon31
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon19
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon22
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^  char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^  char msg1[5000];$/;"	m	struct:__anon44	file:
msg2	user/init.c	/^  char msg2[1000];$/;"	m	struct:__anon44	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon31::__anon37	typeref:struct:api_msg_msg::__anon31::__anon37::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^  int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::__anon32
n	obj/fs/fs.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^  n = (1 << (32 - PGSHIFT)) - (KERNBASE >> PGSHIFT);$/;"	d
n	obj/kern/kernel.asm	/^  n = ROUNDDOWN(env_size, PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^  n = ROUNDDOWN(pageinfo_size, PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^  n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^  n = ROUNDUP(n, PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^  n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^  n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testoutput.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/evilhello.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^  n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/icode.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/testtime.asm	/^    n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^    n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^    n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^    n2 = read(kfd, &c2, 1);$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^  uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^  uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^  uint32_t n_strx;  \/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^  uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^  uintptr_t n_value;  \/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^  const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^  char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^  name:                \\$/;"	l
name	kern/trapentry.S	/^  name:      \/* function starts here *\/    \\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^  const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon42
nblock	obj/fs/fs.asm	/^  nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^    nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^  nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^    ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon22::__anon23	typeref:struct:tcpip_msg::__anon22::__anon23::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon19::__anon20	typeref:struct:netifapi_msg_msg::__anon19::__anon20::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^  new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^  newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	obj/kern/kernel.asm	/^    nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nflag	obj/user/echo.asm	/^    nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^  nflag = 0;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nloff	obj/user/testshell.asm	/^      nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^  nloff = 0;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/fs/fs.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/net/ns.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/net/testinput.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/net/testoutput.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/echosrv.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/echotest.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/httpd.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/testtime.asm	/^    nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^    nn = thisenv->env_runs;$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^  now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;      \/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^    npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^    npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;  \/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^  npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^  npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cat.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echo.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/ls.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/lsfd.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/num.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primespipe.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sendpage.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sh.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnhello.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfdsharing.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testkbd.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpipe.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace2.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpteshare.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testshell.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^    nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^        num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^      num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^        num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^      num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^        num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^      num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^        num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^      num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^        num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^      num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^        num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^      num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^      num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^      num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^    number:$/;"	l
number	obj/kern/kernel.asm	/^    number:$/;"	l
number	obj/net/ns.asm	/^    number:$/;"	l
number	obj/net/testinput.asm	/^    number:$/;"	l
number	obj/net/testoutput.asm	/^    number:$/;"	l
number	obj/user/badsegment.asm	/^    number:$/;"	l
number	obj/user/breakpoint.asm	/^    number:$/;"	l
number	obj/user/buggyhello.asm	/^    number:$/;"	l
number	obj/user/buggyhello2.asm	/^    number:$/;"	l
number	obj/user/cat.asm	/^    number:$/;"	l
number	obj/user/divzero.asm	/^    number:$/;"	l
number	obj/user/dumbfork.asm	/^    number:$/;"	l
number	obj/user/echo.asm	/^    number:$/;"	l
number	obj/user/echosrv.asm	/^    number:$/;"	l
number	obj/user/echotest.asm	/^    number:$/;"	l
number	obj/user/evilhello.asm	/^    number:$/;"	l
number	obj/user/fairness.asm	/^    number:$/;"	l
number	obj/user/faultalloc.asm	/^    number:$/;"	l
number	obj/user/faultallocbad.asm	/^    number:$/;"	l
number	obj/user/faultbadhandler.asm	/^    number:$/;"	l
number	obj/user/faultdie.asm	/^    number:$/;"	l
number	obj/user/faultevilhandler.asm	/^    number:$/;"	l
number	obj/user/faultnostack.asm	/^    number:$/;"	l
number	obj/user/faultread.asm	/^    number:$/;"	l
number	obj/user/faultreadkernel.asm	/^    number:$/;"	l
number	obj/user/faultregs.asm	/^    number:$/;"	l
number	obj/user/faultwrite.asm	/^    number:$/;"	l
number	obj/user/faultwritekernel.asm	/^    number:$/;"	l
number	obj/user/forktree.asm	/^    number:$/;"	l
number	obj/user/hello.asm	/^    number:$/;"	l
number	obj/user/httpd.asm	/^    number:$/;"	l
number	obj/user/icode.asm	/^    number:$/;"	l
number	obj/user/idle.asm	/^    number:$/;"	l
number	obj/user/init.asm	/^    number:$/;"	l
number	obj/user/ls.asm	/^    number:$/;"	l
number	obj/user/lsfd.asm	/^    number:$/;"	l
number	obj/user/num.asm	/^    number:$/;"	l
number	obj/user/pingpong.asm	/^    number:$/;"	l
number	obj/user/pingpongs.asm	/^    number:$/;"	l
number	obj/user/primes.asm	/^    number:$/;"	l
number	obj/user/primespipe.asm	/^    number:$/;"	l
number	obj/user/sendpage.asm	/^    number:$/;"	l
number	obj/user/sh.asm	/^    number:$/;"	l
number	obj/user/softint.asm	/^    number:$/;"	l
number	obj/user/spawnhello.asm	/^    number:$/;"	l
number	obj/user/spin.asm	/^    number:$/;"	l
number	obj/user/stresssched.asm	/^    number:$/;"	l
number	obj/user/testbss.asm	/^    number:$/;"	l
number	obj/user/testfdsharing.asm	/^    number:$/;"	l
number	obj/user/testfile.asm	/^    number:$/;"	l
number	obj/user/testkbd.asm	/^    number:$/;"	l
number	obj/user/testpipe.asm	/^    number:$/;"	l
number	obj/user/testpiperace.asm	/^    number:$/;"	l
number	obj/user/testpiperace2.asm	/^    number:$/;"	l
number	obj/user/testpteshare.asm	/^    number:$/;"	l
number	obj/user/testshell.asm	/^    number:$/;"	l
number	obj/user/testtime.asm	/^    number:$/;"	l
number	obj/user/yield.asm	/^    number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^  nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^  nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^  nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^  nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^  o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^  struct Fd *o_fd;  \/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^  struct File *o_file;  \/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^  uint32_t o_fileid;  \/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^  int o_mode;    \/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^  uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^  physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^  offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	71;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^  old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^  } open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^      out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/ns.asm	/^  output_envid = fork();$/;"	d
output_envid	obj/net/testinput.asm	/^  output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^  output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^  ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^  ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon22::__anon23	typeref:struct:tcpip_msg::__anon22::__anon23::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^        p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^    p = path;$/;"	d
p	obj/fs/fs.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^        p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^    p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^  p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = "(null)";$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^        p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^        p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^        p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^        p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^        p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^        p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^        p = "(null)";$/;"	d
p	obj/user/cat.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^        p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^        p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^        p = "(null)";$/;"	d
p	obj/user/echo.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^        p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^        p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^        p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^        p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^        p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^        p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^        p = "(null)";$/;"	d
p	obj/user/hello.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^        p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^        p = "(null)";$/;"	d
p	obj/user/icode.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^        p = "(null)";$/;"	d
p	obj/user/idle.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^        p = "(null)";$/;"	d
p	obj/user/init.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^        p = "(null)";$/;"	d
p	obj/user/ls.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^        p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^        p = "(null)";$/;"	d
p	obj/user/num.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^        p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^        p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^        p = "(null)";$/;"	d
p	obj/user/primes.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^  p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^        p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^        p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^        p = "(null)";$/;"	d
p	obj/user/sh.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^        p = "(null)";$/;"	d
p	obj/user/softint.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^        p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^        p = "(null)";$/;"	d
p	obj/user/spin.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^        p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^        p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^        p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^        p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^        p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^        p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^        p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^        p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^        p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^        p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^        p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^        p = "(null)";$/;"	d
p	obj/user/yield.asm	/^  p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^  p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^  uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^  uint8_t p_buf[PIPEBUFSIZ];  \/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^  uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^  uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^  uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^  uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^  uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^  off_t p_rpos;    \/\/ read position$/;"	m	struct:Pipe	file:
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^  uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^  uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^  off_t p_wpos;    \/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^    pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^  pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^      padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^      padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^      padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^      padc = '0';$/;"	d
padc	obj/net/ns.asm	/^      padc = '-';$/;"	d
padc	obj/net/ns.asm	/^      padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^      padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^      padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^      padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^      padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^      padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^      padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^      padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^      padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^      padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^      padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^      padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^      padc = '0';$/;"	d
padc	obj/user/cat.asm	/^      padc = '-';$/;"	d
padc	obj/user/cat.asm	/^      padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^      padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^      padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^      padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^      padc = '0';$/;"	d
padc	obj/user/echo.asm	/^      padc = '-';$/;"	d
padc	obj/user/echo.asm	/^      padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^      padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^      padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^      padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^      padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^      padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^      padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^      padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^      padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^      padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^      padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^      padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^      padc = '0';$/;"	d
padc	obj/user/hello.asm	/^      padc = '-';$/;"	d
padc	obj/user/hello.asm	/^      padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^      padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^      padc = '0';$/;"	d
padc	obj/user/icode.asm	/^      padc = '-';$/;"	d
padc	obj/user/icode.asm	/^      padc = '0';$/;"	d
padc	obj/user/idle.asm	/^      padc = '-';$/;"	d
padc	obj/user/idle.asm	/^      padc = '0';$/;"	d
padc	obj/user/init.asm	/^      padc = '-';$/;"	d
padc	obj/user/init.asm	/^      padc = '0';$/;"	d
padc	obj/user/ls.asm	/^      padc = '-';$/;"	d
padc	obj/user/ls.asm	/^      padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^      padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^      padc = '0';$/;"	d
padc	obj/user/num.asm	/^      padc = '-';$/;"	d
padc	obj/user/num.asm	/^      padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^      padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^      padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^      padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^      padc = '0';$/;"	d
padc	obj/user/primes.asm	/^      padc = '-';$/;"	d
padc	obj/user/primes.asm	/^      padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^      padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^      padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^      padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^      padc = '0';$/;"	d
padc	obj/user/sh.asm	/^      padc = '-';$/;"	d
padc	obj/user/sh.asm	/^      padc = '0';$/;"	d
padc	obj/user/softint.asm	/^      padc = '-';$/;"	d
padc	obj/user/softint.asm	/^      padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^      padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^      padc = '0';$/;"	d
padc	obj/user/spin.asm	/^      padc = '-';$/;"	d
padc	obj/user/spin.asm	/^      padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^      padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^      padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^      padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^      padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^      padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^      padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^      padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^      padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^      padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^      padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^      padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^      padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^      padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^      padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^      padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^      padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^      padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^      padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^      padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^      padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^      padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^      padc = '0';$/;"	d
padc	obj/user/yield.asm	/^      padc = '-';$/;"	d
padc	obj/user/yield.asm	/^      padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;  \/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^      page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^    page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = pp; $/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;    \/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^  pages = (struct PageInfo *) boot_alloc(pageinfo_size);$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^  panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^    path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^  path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbno	obj/fs/fs.asm	/^      pbno = &f->f_direct[filebno];$/;"	d
pbno	obj/fs/fs.asm	/^    pbno = &indirect_va[filebno - NDIRECT];$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon28
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon29
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon30
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_e1000_attach	kern/e1000.c	/^pci_e1000_attach(struct pci_func *f)$/;"	f
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^  uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^  uint32_t pd_base;    \/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^  uint16_t pd_lim;    \/\/ Limit$/;"	m	struct:Pseudodesc
pde	obj/net/ns.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/net/testinput.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/net/testoutput.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/forktree.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/icode.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/init.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/pingpong.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/pingpongs.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/primes.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/primespipe.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/sendpage.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/sh.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/spawnhello.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/spin.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/stresssched.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/testfdsharing.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/testpipe.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/testpiperace.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/testpiperace2.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/testpteshare.asm	/^    pde = uvpd[i];$/;"	d
pde	obj/user/testshell.asm	/^    pde = uvpd[i];$/;"	d
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^    perm = 0;$/;"	d
perm	obj/net/ns.asm	/^    perm = 0;$/;"	d
perm	obj/net/ns.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/net/ns.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/net/testinput.asm	/^    perm = 0;$/;"	d
perm	obj/net/testinput.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/net/testinput.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/net/testoutput.asm	/^    perm = 0;$/;"	d
perm	obj/net/testoutput.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/net/testoutput.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/forktree.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/forktree.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/icode.asm	/^      perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/icode.asm	/^    perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^      perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/init.asm	/^    perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/pingpong.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/pingpong.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/pingpongs.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/pingpongs.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/primes.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/primes.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/primespipe.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/primespipe.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/sendpage.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/sendpage.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/sh.asm	/^      perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/sh.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/sh.asm	/^    perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/spawnhello.asm	/^      perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/spawnhello.asm	/^    perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spin.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/spin.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/stresssched.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/stresssched.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testfdsharing.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/testfdsharing.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testpipe.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/testpipe.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testpiperace.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/testpiperace.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testpiperace2.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/testpiperace2.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testpteshare.asm	/^      perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testpteshare.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/testpteshare.asm	/^    perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testshell.asm	/^      perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/testshell.asm	/^    perm = PTE_COW | PTE_U | PTE_P;$/;"	d
perm	obj/user/testshell.asm	/^    perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^    perm = pte & PTE_SYSCALL;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^    pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^  pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^  pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^  ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^  ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^  ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^  ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^  ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^  ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^  ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^  physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^  pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^        pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^  pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pkt	inc/ns.h	/^  struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
pn	obj/net/ns.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/net/testinput.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/net/testoutput.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/forktree.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/icode.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/init.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/pingpong.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/pingpongs.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/primes.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/primespipe.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/sendpage.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/sh.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/spawnhello.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/spin.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/stresssched.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/testfdsharing.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/testpipe.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/testpiperace.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/testpiperace2.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/testpteshare.asm	/^      pn = (i << 10) | j;$/;"	d
pn	obj/user/testshell.asm	/^      pn = (i << 10) | j;$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon31::__anon34
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon31::__anon33
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^  pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^  pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^  pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^  struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^  uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^    precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^    precision = -1;$/;"	d
precision	obj/net/ns.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^    precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^    precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^    precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^    precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^    precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^    precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^    precision = -1;$/;"	d
precision	obj/user/cat.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^    precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^    precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^    precision = -1;$/;"	d
precision	obj/user/echo.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^    precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^    precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^    precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^    precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^    precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^    precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^    precision = -1;$/;"	d
precision	obj/user/hello.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^    precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^    precision = -1;$/;"	d
precision	obj/user/icode.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^    precision = -1;$/;"	d
precision	obj/user/idle.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^    precision = -1;$/;"	d
precision	obj/user/init.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^    precision = -1;$/;"	d
precision	obj/user/ls.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^    precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^    precision = -1;$/;"	d
precision	obj/user/num.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^    precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^    precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^    precision = -1;$/;"	d
precision	obj/user/primes.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^    precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^    precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^    precision = -1;$/;"	d
precision	obj/user/sh.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^    precision = -1;$/;"	d
precision	obj/user/softint.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^    precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^    precision = -1;$/;"	d
precision	obj/user/spin.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^    precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^    precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^    precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^    precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^    precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^    precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^    precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^    precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^    precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^    precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^    precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^    precision = -1;$/;"	d
precision	obj/user/yield.asm	/^        precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^      precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^    precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^      proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^    process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^    process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^    process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^    process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^    process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^    process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^    process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^    process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^    process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^    process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^    process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^    process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^    process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^    process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^    process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^    process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^    process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^    process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^    process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^    process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^    process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^    process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^    process_precision:$/;"	l
process_precision	obj/user/init.asm	/^    process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^    process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^    process_precision:$/;"	l
process_precision	obj/user/num.asm	/^    process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^    process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^    process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^    process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^    process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^    process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^    process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^    process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^    process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^    process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^    process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^    process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^    process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^  uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon31::__anon32
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^    pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^    pte = pgdir_walk(pgdir, (const void *)va + off, 1);$/;"	d
pte	obj/net/ns.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/net/ns.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/net/ns.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/net/testinput.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/net/testinput.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/net/testoutput.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/net/testoutput.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/forktree.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/forktree.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/icode.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/init.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/pingpong.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/pingpong.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/pingpongs.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/pingpongs.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/primes.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/primes.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/primespipe.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/primespipe.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/sendpage.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/sendpage.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/sh.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/sh.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/spawnhello.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/spin.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/spin.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/stresssched.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/stresssched.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/testfdsharing.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/testfdsharing.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/testpipe.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/testpipe.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/testpiperace.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/testpiperace.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/testpiperace2.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/testpiperace2.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/testpteshare.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/testpteshare.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^      pte = uvpt[pn];$/;"	d
pte	obj/user/testshell.asm	/^  pte = uvpt[PGNUM(addr)];$/;"	d
pte	obj/user/testshell.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^  pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^  ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^  ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^  ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^  ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::__anon36
r	obj/fs/fs.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^      r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^      r = 0;$/;"	d
r	obj/fs/fs.asm	/^      r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^      r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^      r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^  r = -1;$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^      r = 0;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^    r = 0;$/;"	d
r	obj/net/ns.asm	/^    r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^    r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^    r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^    r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^    r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^    r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^    r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^    r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^    r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^      r = 0;$/;"	d
r	obj/net/testinput.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/net/testoutput.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^      r = 0;$/;"	d
r	obj/net/testoutput.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^      r = 0;$/;"	d
r	obj/user/badsegment.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^      r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^      r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^      r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^      r = 0;$/;"	d
r	obj/user/cat.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^      r = 0;$/;"	d
r	obj/user/divzero.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^      r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^      r = 0;$/;"	d
r	obj/user/echo.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/echosrv.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^      r = 0;$/;"	d
r	obj/user/echosrv.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/echotest.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^      r = 0;$/;"	d
r	obj/user/echotest.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^      r = 0;$/;"	d
r	obj/user/evilhello.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^      r = 0;$/;"	d
r	obj/user/fairness.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^      r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^      r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^      r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^      r = 0;$/;"	d
r	obj/user/faultdie.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^      r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^      r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^      r = 0;$/;"	d
r	obj/user/faultread.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^      r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^      r = 0;$/;"	d
r	obj/user/faultregs.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^      r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^      r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^      r = 0;$/;"	d
r	obj/user/forktree.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^      r = 0;$/;"	d
r	obj/user/hello.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^      r = 0;$/;"	d
r	obj/user/httpd.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^  r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/icode.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^      r = 0;$/;"	d
r	obj/user/icode.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^      r = 0;$/;"	d
r	obj/user/idle.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^      r = 0;$/;"	d
r	obj/user/init.asm	/^    r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^      r = 0;$/;"	d
r	obj/user/ls.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^      r = 0;$/;"	d
r	obj/user/lsfd.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^      r = 0;$/;"	d
r	obj/user/num.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^      r = 0;$/;"	d
r	obj/user/pingpong.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^      r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^      r = 0;$/;"	d
r	obj/user/primes.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^      r = 0;$/;"	d
r	obj/user/primespipe.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^      r = 0;$/;"	d
r	obj/user/sendpage.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^      r = 0;$/;"	d
r	obj/user/sh.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^      r = 0;$/;"	d
r	obj/user/softint.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^      r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^      r = 0;$/;"	d
r	obj/user/spin.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^      r = 0;$/;"	d
r	obj/user/stresssched.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^      r = 0;$/;"	d
r	obj/user/testbss.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^      r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^      r = 0;$/;"	d
r	obj/user/testfile.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^      r = 0;$/;"	d
r	obj/user/testkbd.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^      r = 0;$/;"	d
r	obj/user/testpipe.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^      r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^      r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^      r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^      r = 0;$/;"	d
r	obj/user/testshell.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/testtime.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^      r = 0;$/;"	d
r	obj/user/testtime.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^  r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^      r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^      r = 0;$/;"	d
r	obj/user/yield.asm	/^  r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^  r = read(0, &c, 1);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon30	typeref:struct:netconn::__anon30::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^  rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
read	inc/fs.h	/^  } read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^  } readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^  } recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^  } recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^    ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/net/ns.asm	/^  ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^  ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/user/httpd.asm	/^    ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^  ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^  ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^  uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^  uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^  uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^  uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^  uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^  uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^  uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^  uint32_t reg_oesp;    \/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^  struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^  } remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^  union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^    req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req	obj/net/ns.asm	/^    req = ipc_recv((int32_t*)&whom, pkt, &perm);$/;"	d
req	obj/net/testinput.asm	/^    req = ipc_recv((int32_t*)&whom, pkt, &perm);$/;"	d
req	obj/net/testoutput.asm	/^    req = ipc_recv((int32_t*)&whom, pkt, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_addrlen	inc/ns.h	/^    socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept
req_backlog	inc/ns.h	/^    int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^    char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^    char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^    int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^    int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^    int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^    int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^    int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^    int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^    unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^    unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^    int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^    int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^    size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^    size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^    struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^    struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^    socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^    socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^    int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^    char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^    char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^    int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^    int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^    off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^    int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^    int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^  int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^    reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^  uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^  uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^  uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^  ssize_t result;  \/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^  result = nextfree;$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^  reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^  reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^  reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^  reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^  reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^  reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^  reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^  reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^  reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^  reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^  reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^  reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^  reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^  reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^  reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^  reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^  reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^  reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^  reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^  reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^  reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^  reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^  reswitch:$/;"	l
reswitch	obj/user/init.asm	/^  reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^  reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^  reswitch:$/;"	l
reswitch	obj/user/num.asm	/^  reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^  reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^  reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^  reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^  reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^  reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^  reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^  reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^  reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^  reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^  reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^  reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^  reswitch:$/;"	l
ret	obj/fs/fs.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^  ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^  ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = dst;$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^  ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^  ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^  ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^  ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^  ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^  ret = dst;$/;"	d
ret	obj/user/cat.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^  ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^  ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^  ret = dst;$/;"	d
ret	obj/user/echo.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^  ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^  ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^  ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^  ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^  ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^  ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^  ret = dst;$/;"	d
ret	obj/user/hello.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^  ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^  ret = dst;$/;"	d
ret	obj/user/icode.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^  ret = dst;$/;"	d
ret	obj/user/idle.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^  ret = dst;$/;"	d
ret	obj/user/init.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^  ret = dst;$/;"	d
ret	obj/user/ls.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^  ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^  ret = dst;$/;"	d
ret	obj/user/num.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^  ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^  ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^  ret = dst;$/;"	d
ret	obj/user/primes.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^  ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^  ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^  ret = dst;$/;"	d
ret	obj/user/sh.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^  ret = dst;$/;"	d
ret	obj/user/softint.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^  ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^  ret = dst;$/;"	d
ret	obj/user/spin.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^  ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^  ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^  ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^  ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^  ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^  ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^  ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^  ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^  ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^  ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^  ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^  ret = dst;$/;"	d
ret	obj/user/yield.asm	/^    ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^  ret = dst;$/;"	d
ret_addr	inc/ns.h	/^    struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^    socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^    char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^    char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^    int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^    char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^    off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rfd	obj/user/testshell.asm	/^  rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^  rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^  rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rline	obj/kern/kernel.asm	/^    rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^    rline = rfun;$/;"	d
rp	obj/kern/kernel.asm	/^    rp = &tf->tf_regs;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^  uint32_t rpos;$/;"	m	struct:__anon11	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
rx_buf	kern/e1000.h	/^struct rx_buf$/;"	s
rx_buf_array	kern/e1000.c	/^struct rx_buf rx_buf_array[NRXDESC];$/;"	v	typeref:struct:rx_buf
rx_desc	kern/e1000.h	/^struct rx_desc$/;"	s
rx_desc_array	kern/e1000.c	/^struct rx_desc rx_desc_array[NRXDESC]$/;"	v	typeref:struct:rx_desc
rx_init	kern/e1000.c	/^rx_init(void)$/;"	f	file:
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^  s = src;$/;"	d
s	obj/kern/kernel.asm	/^  s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/ns.asm	/^  s = src;$/;"	d
s	obj/net/testinput.asm	/^  s = src;$/;"	d
s	obj/net/testoutput.asm	/^  s = src;$/;"	d
s	obj/user/badsegment.asm	/^  s = src;$/;"	d
s	obj/user/breakpoint.asm	/^  s = src;$/;"	d
s	obj/user/buggyhello.asm	/^  s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^  s = src;$/;"	d
s	obj/user/cat.asm	/^  s = src;$/;"	d
s	obj/user/divzero.asm	/^  s = src;$/;"	d
s	obj/user/dumbfork.asm	/^  s = src;$/;"	d
s	obj/user/echo.asm	/^  s = src;$/;"	d
s	obj/user/echosrv.asm	/^  s = src;$/;"	d
s	obj/user/echotest.asm	/^  s = src;$/;"	d
s	obj/user/evilhello.asm	/^  s = src;$/;"	d
s	obj/user/fairness.asm	/^  s = src;$/;"	d
s	obj/user/faultalloc.asm	/^  s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^  s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^  s = src;$/;"	d
s	obj/user/faultdie.asm	/^  s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^  s = src;$/;"	d
s	obj/user/faultnostack.asm	/^  s = src;$/;"	d
s	obj/user/faultread.asm	/^  s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^  s = src;$/;"	d
s	obj/user/faultregs.asm	/^  s = src;$/;"	d
s	obj/user/faultwrite.asm	/^  s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^  s = src;$/;"	d
s	obj/user/forktree.asm	/^  s = src;$/;"	d
s	obj/user/hello.asm	/^  s = src;$/;"	d
s	obj/user/httpd.asm	/^  s = src;$/;"	d
s	obj/user/icode.asm	/^  s = src;$/;"	d
s	obj/user/idle.asm	/^  s = src;$/;"	d
s	obj/user/init.asm	/^  s = src;$/;"	d
s	obj/user/ls.asm	/^  s = src;$/;"	d
s	obj/user/lsfd.asm	/^  s = src;$/;"	d
s	obj/user/num.asm	/^  s = src;$/;"	d
s	obj/user/pingpong.asm	/^  s = src;$/;"	d
s	obj/user/pingpongs.asm	/^  s = src;$/;"	d
s	obj/user/primes.asm	/^  s = src;$/;"	d
s	obj/user/primespipe.asm	/^  s = src;$/;"	d
s	obj/user/sendpage.asm	/^  s = src;$/;"	d
s	obj/user/sh.asm	/^  s = src;$/;"	d
s	obj/user/softint.asm	/^  s = src;$/;"	d
s	obj/user/spawnhello.asm	/^  s = src;$/;"	d
s	obj/user/spin.asm	/^  s = src;$/;"	d
s	obj/user/stresssched.asm	/^  s = src;$/;"	d
s	obj/user/testbss.asm	/^  s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^  s = src;$/;"	d
s	obj/user/testfile.asm	/^  s = src;$/;"	d
s	obj/user/testkbd.asm	/^  s = src;$/;"	d
s	obj/user/testpipe.asm	/^  s = src;$/;"	d
s	obj/user/testpiperace.asm	/^  s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^  s = src;$/;"	d
s	obj/user/testpteshare.asm	/^  s = src;$/;"	d
s	obj/user/testshell.asm	/^  s = src;$/;"	d
s	obj/user/testtime.asm	/^  s = src;$/;"	d
s	obj/user/yield.asm	/^  s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^  uint32_t s_magic;    \/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^  uint32_t s_nblocks;    \/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^  struct File s_root;    \/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^  unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^  unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^  unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^  unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^  unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^  unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^  unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^  unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^  unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^  unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^  unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^  unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^  unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^  } send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
sep	obj/user/ls.asm	/^      sep = "";$/;"	d
sep	obj/user/ls.asm	/^      sep = "\/";$/;"	d
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^  serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^  } set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^  uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^  uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^  uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^  uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^  uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^  uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^  uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^  uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^  uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^  uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutdown	inc/ns.h	/^  } shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^  uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^  uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^  uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^      size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^      size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^  size = ROUNDUP(size, PGSIZE);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^  int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^  } socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^  int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^  uint16_t special;$/;"	m	struct:rx_desc
special	kern/e1000.h	/^  uint16_t special;$/;"	m	struct:tx_desc
specrev	kern/mpconfig.c	/^  uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:  jmp  spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:  jmp  spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^  struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^  int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^  char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^  off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^  const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^    stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^    stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^  const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^    stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^    stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^  const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^    stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^    stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^  const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^    stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^    stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon43
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^  start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^  } stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^  } statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon19::__anon20
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^  static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000.h	/^  uint8_t status;$/;"	m	struct:rx_desc
status	kern/e1000.h	/^  uint8_t status;$/;"	m	struct:tx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^      stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^      stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^      stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^  string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^  string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^  string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^  string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^  string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^  string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^  string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^  string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^  string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^  string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^  string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^  string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^  sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;    \/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^  super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_receive_pkt	kern/syscall.c	/^sys_receive_pkt(void *dstva)$/;"	f
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_try_transmit_pkt	kern/syscall.c	/^sys_try_transmit_pkt(void *srcva, size_t len)$/;"	f
sys_try_transmit_pkt	lib/syscall.c	/^sys_try_transmit_pkt(void *srcva, size_t len)$/;"	f
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t	obj/user/sh.asm	/^    t = **p2;$/;"	d
t	obj/user/sh.asm	/^    t = *s;$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon30	typeref:struct:netconn::__anon30::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
tf	obj/kern/kernel.asm	/^    tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^  uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^  uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^  uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^  uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^  uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^  uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^  uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^  uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^  uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^  uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^  uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^  struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^  uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^  uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echosrv.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echotest.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/httpd.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testtime.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon41	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^  ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^  timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::__anon25
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^      to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^  to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^      to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^      to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
try_receive_pkt	kern/e1000.c	/^try_receive_pkt(void *dstva)$/;"	f
try_transmit_pkt	kern/e1000.c	/^try_transmit_pkt(void *srcva, size_t len)$/;"	f
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^  physaddr_t ts_cr3;  \/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^  uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^  uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^  uint32_t ts_eax;  \/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^  uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^  uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^  uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^  uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^  uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^  uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^  uintptr_t ts_eip;  \/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^  uint16_t ts_es;    \/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^  uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^  uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^  uintptr_t ts_esp0;  \/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^  uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^  uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^  uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^  uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^  uint16_t ts_iomb;  \/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^  uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^  uint32_t ts_link;  \/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^  uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^  uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^  uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^  uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^  uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^  uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^  uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^  uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^  uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^  uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^  uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^  uint16_t ts_ss0;  \/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^  uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^  uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^  uint16_t ts_t;    \/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_buf	kern/e1000.h	/^struct tx_buf$/;"	s
tx_buf_array	kern/e1000.c	/^struct tx_buf tx_buf_array[NTXDESC];$/;"	v	typeref:struct:tx_buf
tx_desc	kern/e1000.h	/^struct tx_desc$/;"	s
tx_desc_array	kern/e1000.c	/^struct tx_desc tx_desc_array[NTXDESC]$/;"	v	typeref:struct:tx_desc
tx_init	kern/e1000.c	/^tx_init(void)$/;"	f	file:
type	inc/partition.h	/^  uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^  uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^  uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon30	typeref:struct:netconn::__anon30::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^  url = request;$/;"	d
url	user/httpd.c	/^  char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^  url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
usefprint	obj/user/lsfd.asm	/^      usefprint = 1;$/;"	d
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^      user_mem_check_addr = i;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^    utf = (struct UTrapframe*)(cur_esp - sizeof(struct UTrapframe));$/;"	d
utf_eflags	inc/trap.h	/^  uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^  uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^  uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^  uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^  uint32_t utf_fault_va;  \/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^  struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon39	file:
v	obj/net/ns.asm	/^      v = mptr;$/;"	d
v	obj/net/ns.asm	/^  v = mptr;$/;"	d
v	obj/user/httpd.asm	/^      v = mptr;$/;"	d
v	obj/user/httpd.asm	/^  v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/fs/fs.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^  va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^    va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^  va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/net/testinput.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/net/testoutput.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/badsegment.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/echosrv.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/echotest.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/httpd.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^      va = pn << PGSHIFT;$/;"	d
va	obj/user/icode.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^      va = pn << PGSHIFT;$/;"	d
va	obj/user/init.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^      va = pn << PGSHIFT;$/;"	d
va	obj/user/sh.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^      va = pn << PGSHIFT;$/;"	d
va	obj/user/spawnhello.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^  va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^  va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^      va = pn << PGSHIFT;$/;"	d
va	obj/user/testpteshare.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^      va = pn << PGSHIFT;$/;"	d
va	obj/user/testshell.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/testtime.asm	/^  va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^  va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^  uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^  uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^  version = request;$/;"	d
version	user/httpd.c	/^  char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^  version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon15
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void  user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon19::__anon21
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^  uint8_t    vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^  uint8_t    vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^  uint8_t    vpd_len;    \/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^  uint8_t    vpdres_byte0;    \/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^  uint8_t    vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^  uint8_t    vpdres_len_lsb;    \/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^  uint8_t    vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon31	typeref:struct:api_msg_msg::__anon31::__anon35
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon39::__anon40	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^  want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^  was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
wfd	obj/user/primespipe.asm	/^  wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^  wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^  who = dumbfork();$/;"	d
whom	net/serv.c	/^  uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^        width = 0;$/;"	d
width	obj/fs/fs.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^    width = -1;$/;"	d
width	obj/kern/kernel.asm	/^        width = 0;$/;"	d
width	obj/kern/kernel.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^    width = -1;$/;"	d
width	obj/net/ns.asm	/^        width = 0;$/;"	d
width	obj/net/ns.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^    width = -1;$/;"	d
width	obj/net/testinput.asm	/^        width = 0;$/;"	d
width	obj/net/testinput.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^    width = -1;$/;"	d
width	obj/net/testoutput.asm	/^        width = 0;$/;"	d
width	obj/net/testoutput.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^    width = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = 0;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^    width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^        width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^    width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^        width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^    width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^        width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^    width = -1;$/;"	d
width	obj/user/cat.asm	/^        width = 0;$/;"	d
width	obj/user/cat.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^    width = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = 0;$/;"	d
width	obj/user/divzero.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^    width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^        width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^    width = -1;$/;"	d
width	obj/user/echo.asm	/^        width = 0;$/;"	d
width	obj/user/echo.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^    width = -1;$/;"	d
width	obj/user/echosrv.asm	/^        width = 0;$/;"	d
width	obj/user/echosrv.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^    width = -1;$/;"	d
width	obj/user/echotest.asm	/^        width = 0;$/;"	d
width	obj/user/echotest.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^    width = -1;$/;"	d
width	obj/user/evilhello.asm	/^        width = 0;$/;"	d
width	obj/user/evilhello.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^    width = -1;$/;"	d
width	obj/user/fairness.asm	/^        width = 0;$/;"	d
width	obj/user/fairness.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^    width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^        width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^    width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^        width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^    width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^        width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^    width = -1;$/;"	d
width	obj/user/faultdie.asm	/^        width = 0;$/;"	d
width	obj/user/faultdie.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^    width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^        width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^    width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^        width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^    width = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = 0;$/;"	d
width	obj/user/faultread.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^    width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^    width = -1;$/;"	d
width	obj/user/faultregs.asm	/^        width = 0;$/;"	d
width	obj/user/faultregs.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^    width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^        width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^    width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^        width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^    width = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = 0;$/;"	d
width	obj/user/forktree.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^    width = -1;$/;"	d
width	obj/user/hello.asm	/^        width = 0;$/;"	d
width	obj/user/hello.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^    width = -1;$/;"	d
width	obj/user/httpd.asm	/^        width = 0;$/;"	d
width	obj/user/httpd.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^    width = -1;$/;"	d
width	obj/user/icode.asm	/^        width = 0;$/;"	d
width	obj/user/icode.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^    width = -1;$/;"	d
width	obj/user/idle.asm	/^        width = 0;$/;"	d
width	obj/user/idle.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^    width = -1;$/;"	d
width	obj/user/init.asm	/^        width = 0;$/;"	d
width	obj/user/init.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^    width = -1;$/;"	d
width	obj/user/ls.asm	/^        width = 0;$/;"	d
width	obj/user/ls.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^    width = -1;$/;"	d
width	obj/user/lsfd.asm	/^        width = 0;$/;"	d
width	obj/user/lsfd.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^    width = -1;$/;"	d
width	obj/user/num.asm	/^        width = 0;$/;"	d
width	obj/user/num.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^    width = -1;$/;"	d
width	obj/user/pingpong.asm	/^        width = 0;$/;"	d
width	obj/user/pingpong.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^    width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^        width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^    width = -1;$/;"	d
width	obj/user/primes.asm	/^        width = 0;$/;"	d
width	obj/user/primes.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^    width = -1;$/;"	d
width	obj/user/primespipe.asm	/^        width = 0;$/;"	d
width	obj/user/primespipe.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^    width = -1;$/;"	d
width	obj/user/sendpage.asm	/^        width = 0;$/;"	d
width	obj/user/sendpage.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^    width = -1;$/;"	d
width	obj/user/sh.asm	/^        width = 0;$/;"	d
width	obj/user/sh.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^    width = -1;$/;"	d
width	obj/user/softint.asm	/^        width = 0;$/;"	d
width	obj/user/softint.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^    width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^        width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^    width = -1;$/;"	d
width	obj/user/spin.asm	/^        width = 0;$/;"	d
width	obj/user/spin.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^    width = -1;$/;"	d
width	obj/user/stresssched.asm	/^        width = 0;$/;"	d
width	obj/user/stresssched.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^    width = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = 0;$/;"	d
width	obj/user/testbss.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^    width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^        width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^    width = -1;$/;"	d
width	obj/user/testfile.asm	/^        width = 0;$/;"	d
width	obj/user/testfile.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^    width = -1;$/;"	d
width	obj/user/testkbd.asm	/^        width = 0;$/;"	d
width	obj/user/testkbd.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^    width = -1;$/;"	d
width	obj/user/testpipe.asm	/^        width = 0;$/;"	d
width	obj/user/testpipe.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^    width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^        width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^    width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^        width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^    width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^        width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^    width = -1;$/;"	d
width	obj/user/testshell.asm	/^        width = 0;$/;"	d
width	obj/user/testshell.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^    width = -1;$/;"	d
width	obj/user/testtime.asm	/^        width = 0;$/;"	d
width	obj/user/testtime.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^    width = -1;$/;"	d
width	obj/user/yield.asm	/^        width = 0;$/;"	d
width	obj/user/yield.asm	/^        width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^    width = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^  uint32_t wpos;$/;"	m	struct:__anon11	file:
write	inc/fs.h	/^  } write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^  wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^  uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^  uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^  zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
